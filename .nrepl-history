(:use tailrecursion.boot.task.ring :as r)
(speak)
quit
(load-file "src/clj/lokate/server.clj")
(usr 'lokate.server :reload-all
)
(use 'lokate.server :reload-all)
(main)
(require 'lokate.server :reload-all)
lokate.server
(-main)
(dev)
(require 'lokate.server :reload-all)
(run routes 10333)
(run (site #'routes) 10222(
(run (site #'routes) 10222)
(require 'lokate.server :reload-all)
(run handler 10222)
(require 'lokate.server :reload-all)
(run handler 10222)
(load-file "src/clj/lokate/server.clj")
(require 'lokate.server :reload-all)
(run handler 10222)
(require 'lokate.server/handler)
quit
(test)
(use '[clojure.tools.namespace.repl :only (refresh)])
(refresh)
(test)
quit
(test)
quit
(require 'lokate.server)
(def srv (run handler))
(require 'lokate.server :refer all)
(require 'lokate.server :refer :all)
(use 'lokate.server)
(run)
(def src (run handler)
)
quit
(-> :a str
)
(-> :a (str))
server/handler
(def a :a)
(-> a (str))
quit
(-> :a (str "dude")
)
quit
(-> :a (str " b") (keyword))
quit
(set-env!
        :tgt-path "target"
        :src-paths #{"src/clj" "src/cljs" "../boot-reload/src"}
        :rsc-paths #{"resources"}
        :dependencies '[[adzerk/boot-cljs "0.0-2371-27"]
                        [adzerk/boot-cljs-repl "0.1.6"]
                        [org.clojure/clojure "1.6.0"]
                        [org.clojure/clojurescript "0.0-2371"]
                        [org.clojure/core.async "0.1.346.0-17112a-alpha"]
                        [om "0.8.0-alpha2"]
                        [secretary "1.2.1"]
                        [ring "1.3.1"]
                        [compojure "1.2.1"]
                        [http-kit "2.1.19"]])
quit
(boot dev)
quit
(boot dev-serve)
(boot dev-cljs)
quit
(boot dev-serve)
(boot clj-repl)
(boot cljs-repl)
(boot dev-cljs)
quit
