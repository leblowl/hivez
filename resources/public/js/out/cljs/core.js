// Compiled by ClojureScript 0.0-2727 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2727";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__12050__delegate = function (args){
return console.log.apply(console,(function (){var G__12049 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__12049) : cljs.core.into_array.call(null,G__12049));
})());
};
var G__12050 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12051__i = 0, G__12051__a = new Array(arguments.length -  0);
while (G__12051__i < G__12051__a.length) {G__12051__a[G__12051__i] = arguments[G__12051__i + 0]; ++G__12051__i;}
  args = new cljs.core.IndexedSeq(G__12051__a,0);
} 
return G__12050__delegate.call(this,args);};
G__12050.cljs$lang$maxFixedArity = 0;
G__12050.cljs$lang$applyTo = (function (arglist__12052){
var args = cljs.core.seq(arglist__12052);
return G__12050__delegate(args);
});
G__12050.cljs$core$IFn$_invoke$arity$variadic = G__12050__delegate;
return G__12050;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__12054 = x;
return goog.isString(G__12054);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__12056 = x__$1;
return goog.typeOf(G__12056);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3746__auto__ = ty;
if(cljs.core.truth_(and__3746__auto__)){
return ty.cljs$lang$type;
} else {
return and__3746__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__12058 = obj;
return goog.typeOf(G__12058);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__12060 = Symbol;
return goog.typeOf(G__12060);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4645__auto___12062 = len;
var i_12063 = (0);
while(true){
if((i_12063 < n__4645__auto___12062)){
(new_arr[i_12063] = (arr[i_12063]));

var G__12064 = (i_12063 + (1));
i_12063 = G__12064;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__12065 = (i + (1));
i = G__12065;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__12074__delegate = function (array,i,idxs){
var G__12071 = aget;
var G__12072 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__12073 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__12071,G__12072,G__12073) : cljs.core.apply.call(null,G__12071,G__12072,G__12073));
};
var G__12074 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__12075__i = 0, G__12075__a = new Array(arguments.length -  2);
while (G__12075__i < G__12075__a.length) {G__12075__a[G__12075__i] = arguments[G__12075__i + 2]; ++G__12075__i;}
  idxs = new cljs.core.IndexedSeq(G__12075__a,0);
} 
return G__12074__delegate.call(this,array,i,idxs);};
G__12074.cljs$lang$maxFixedArity = 2;
G__12074.cljs$lang$applyTo = (function (arglist__12076){
var array = cljs.core.first(arglist__12076);
arglist__12076 = cljs.core.next(arglist__12076);
var i = cljs.core.first(arglist__12076);
var idxs = cljs.core.rest(arglist__12076);
return G__12074__delegate(array,i,idxs);
});
G__12074.cljs$core$IFn$_invoke$arity$variadic = G__12074__delegate;
return G__12074;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__12077 = null;
if (arguments.length > 2) {
var G__12078__i = 0, G__12078__a = new Array(arguments.length -  2);
while (G__12078__i < G__12078__a.length) {G__12078__a[G__12078__i] = arguments[G__12078__i + 2]; ++G__12078__i;}
G__12077 = new cljs.core.IndexedSeq(G__12078__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__12077);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__12087__delegate = function (array,idx,idx2,idxv){
var G__12083 = aset;
var G__12084 = (array[idx]);
var G__12085 = idx2;
var G__12086 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__12083,G__12084,G__12085,G__12086) : cljs.core.apply.call(null,G__12083,G__12084,G__12085,G__12086));
};
var G__12087 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__12088__i = 0, G__12088__a = new Array(arguments.length -  3);
while (G__12088__i < G__12088__a.length) {G__12088__a[G__12088__i] = arguments[G__12088__i + 3]; ++G__12088__i;}
  idxv = new cljs.core.IndexedSeq(G__12088__a,0);
} 
return G__12087__delegate.call(this,array,idx,idx2,idxv);};
G__12087.cljs$lang$maxFixedArity = 3;
G__12087.cljs$lang$applyTo = (function (arglist__12089){
var array = cljs.core.first(arglist__12089);
arglist__12089 = cljs.core.next(arglist__12089);
var idx = cljs.core.first(arglist__12089);
arglist__12089 = cljs.core.next(arglist__12089);
var idx2 = cljs.core.first(arglist__12089);
var idxv = cljs.core.rest(arglist__12089);
return G__12087__delegate(array,idx,idx2,idxv);
});
G__12087.cljs$core$IFn$_invoke$arity$variadic = G__12087__delegate;
return G__12087;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__12090 = null;
if (arguments.length > 3) {
var G__12091__i = 0, G__12091__a = new Array(arguments.length -  3);
while (G__12091__i < G__12091__a.length) {G__12091__a[G__12091__i] = arguments[G__12091__i + 3]; ++G__12091__i;}
G__12090 = new cljs.core.IndexedSeq(G__12091__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__12090);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__12097 = (function (a,x){
a.push(x);

return a;
});
var G__12098 = [];
var G__12099 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12097,G__12098,G__12099) : cljs.core.reduce.call(null,G__12097,G__12098,G__12099));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__12100__i = 0, G__12100__a = new Array(arguments.length -  2);
while (G__12100__i < G__12100__a.length) {G__12100__a[G__12100__i] = arguments[G__12100__i + 2]; ++G__12100__i;}
  args = new cljs.core.IndexedSeq(G__12100__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__12101){
var obj = cljs.core.first(arglist__12101);
arglist__12101 = cljs.core.next(arglist__12101);
var s = cljs.core.first(arglist__12101);
var args = cljs.core.rest(arglist__12101);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj12103 = {};
return obj12103;
})();


cljs.core.IFn = (function (){var obj12105 = {};
return obj12105;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12151 = x__4402__auto__;
return goog.typeOf(G__12151);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12153 = x__4402__auto__;
return goog.typeOf(G__12153);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12155 = x__4402__auto__;
return goog.typeOf(G__12155);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12157 = x__4402__auto__;
return goog.typeOf(G__12157);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12159 = x__4402__auto__;
return goog.typeOf(G__12159);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12161 = x__4402__auto__;
return goog.typeOf(G__12161);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12163 = x__4402__auto__;
return goog.typeOf(G__12163);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12165 = x__4402__auto__;
return goog.typeOf(G__12165);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12167 = x__4402__auto__;
return goog.typeOf(G__12167);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12169 = x__4402__auto__;
return goog.typeOf(G__12169);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12171 = x__4402__auto__;
return goog.typeOf(G__12171);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12173 = x__4402__auto__;
return goog.typeOf(G__12173);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12175 = x__4402__auto__;
return goog.typeOf(G__12175);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12177 = x__4402__auto__;
return goog.typeOf(G__12177);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12179 = x__4402__auto__;
return goog.typeOf(G__12179);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12181 = x__4402__auto__;
return goog.typeOf(G__12181);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12183 = x__4402__auto__;
return goog.typeOf(G__12183);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12185 = x__4402__auto__;
return goog.typeOf(G__12185);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12187 = x__4402__auto__;
return goog.typeOf(G__12187);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12189 = x__4402__auto__;
return goog.typeOf(G__12189);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12191 = x__4402__auto__;
return goog.typeOf(G__12191);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._invoke[(function (){var G__12193 = x__4402__auto__;
return goog.typeOf(G__12193);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._invoke["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj12195 = {};
return obj12195;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3746__auto__ = value;
if(and__3746__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3746__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4402__auto__ = (((value == null))?null:value);
return (function (){var or__3758__auto__ = (cljs.core._clone[(function (){var G__12199 = x__4402__auto__;
return goog.typeOf(G__12199);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._clone["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj12201 = {};
return obj12201;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._count[(function (){var G__12205 = x__4402__auto__;
return goog.typeOf(G__12205);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._count["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj12207 = {};
return obj12207;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._empty[(function (){var G__12211 = x__4402__auto__;
return goog.typeOf(G__12211);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._empty["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj12213 = {};
return obj12213;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._conj[(function (){var G__12217 = x__4402__auto__;
return goog.typeOf(G__12217);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._conj["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj12219 = {};
return obj12219;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._nth[(function (){var G__12225 = x__4402__auto__;
return goog.typeOf(G__12225);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._nth["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._nth[(function (){var G__12227 = x__4402__auto__;
return goog.typeOf(G__12227);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._nth["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj12229 = {};
return obj12229;
})();


cljs.core.ISeq = (function (){var obj12231 = {};
return obj12231;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._first[(function (){var G__12235 = x__4402__auto__;
return goog.typeOf(G__12235);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._first["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._rest[(function (){var G__12239 = x__4402__auto__;
return goog.typeOf(G__12239);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._rest["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj12241 = {};
return obj12241;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._next[(function (){var G__12245 = x__4402__auto__;
return goog.typeOf(G__12245);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._next["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj12247 = {};
return obj12247;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._lookup[(function (){var G__12253 = x__4402__auto__;
return goog.typeOf(G__12253);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._lookup["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._lookup[(function (){var G__12255 = x__4402__auto__;
return goog.typeOf(G__12255);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._lookup["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj12257 = {};
return obj12257;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__12261 = x__4402__auto__;
return goog.typeOf(G__12261);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._assoc[(function (){var G__12265 = x__4402__auto__;
return goog.typeOf(G__12265);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._assoc["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj12267 = {};
return obj12267;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._dissoc[(function (){var G__12271 = x__4402__auto__;
return goog.typeOf(G__12271);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj12273 = {};
return obj12273;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._key[(function (){var G__12277 = x__4402__auto__;
return goog.typeOf(G__12277);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._key["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._val[(function (){var G__12281 = x__4402__auto__;
return goog.typeOf(G__12281);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._val["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj12283 = {};
return obj12283;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._disjoin[(function (){var G__12287 = x__4402__auto__;
return goog.typeOf(G__12287);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj12289 = {};
return obj12289;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._peek[(function (){var G__12293 = x__4402__auto__;
return goog.typeOf(G__12293);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._peek["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._pop[(function (){var G__12297 = x__4402__auto__;
return goog.typeOf(G__12297);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._pop["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj12299 = {};
return obj12299;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._assoc_n[(function (){var G__12303 = x__4402__auto__;
return goog.typeOf(G__12303);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj12305 = {};
return obj12305;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._deref[(function (){var G__12309 = x__4402__auto__;
return goog.typeOf(G__12309);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._deref["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj12311 = {};
return obj12311;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._deref_with_timeout[(function (){var G__12315 = x__4402__auto__;
return goog.typeOf(G__12315);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj12317 = {};
return obj12317;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._meta[(function (){var G__12321 = x__4402__auto__;
return goog.typeOf(G__12321);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._meta["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj12323 = {};
return obj12323;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._with_meta[(function (){var G__12327 = x__4402__auto__;
return goog.typeOf(G__12327);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj12329 = {};
return obj12329;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._reduce[(function (){var G__12335 = x__4402__auto__;
return goog.typeOf(G__12335);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._reduce["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._reduce[(function (){var G__12337 = x__4402__auto__;
return goog.typeOf(G__12337);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._reduce["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj12339 = {};
return obj12339;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._kv_reduce[(function (){var G__12343 = x__4402__auto__;
return goog.typeOf(G__12343);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj12345 = {};
return obj12345;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._equiv[(function (){var G__12349 = x__4402__auto__;
return goog.typeOf(G__12349);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._equiv["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj12351 = {};
return obj12351;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._hash[(function (){var G__12355 = x__4402__auto__;
return goog.typeOf(G__12355);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._hash["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj12357 = {};
return obj12357;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._seq[(function (){var G__12361 = x__4402__auto__;
return goog.typeOf(G__12361);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._seq["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj12363 = {};
return obj12363;
})();


cljs.core.IList = (function (){var obj12365 = {};
return obj12365;
})();


cljs.core.IRecord = (function (){var obj12367 = {};
return obj12367;
})();


cljs.core.IReversible = (function (){var obj12369 = {};
return obj12369;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._rseq[(function (){var G__12373 = x__4402__auto__;
return goog.typeOf(G__12373);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._rseq["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj12375 = {};
return obj12375;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._sorted_seq[(function (){var G__12379 = x__4402__auto__;
return goog.typeOf(G__12379);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._sorted_seq_from[(function (){var G__12383 = x__4402__auto__;
return goog.typeOf(G__12383);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._entry_key[(function (){var G__12387 = x__4402__auto__;
return goog.typeOf(G__12387);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._comparator[(function (){var G__12391 = x__4402__auto__;
return goog.typeOf(G__12391);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._comparator["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj12393 = {};
return obj12393;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3746__auto__ = writer;
if(and__3746__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3746__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4402__auto__ = (((writer == null))?null:writer);
return (function (){var or__3758__auto__ = (cljs.core._write[(function (){var G__12397 = x__4402__auto__;
return goog.typeOf(G__12397);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._write["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3746__auto__ = writer;
if(and__3746__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3746__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4402__auto__ = (((writer == null))?null:writer);
return (function (){var or__3758__auto__ = (cljs.core._flush[(function (){var G__12401 = x__4402__auto__;
return goog.typeOf(G__12401);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._flush["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj12403 = {};
return obj12403;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._pr_writer[(function (){var G__12407 = x__4402__auto__;
return goog.typeOf(G__12407);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj12409 = {};
return obj12409;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3746__auto__ = d;
if(and__3746__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3746__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4402__auto__ = (((d == null))?null:d);
return (function (){var or__3758__auto__ = (cljs.core._realized_QMARK_[(function (){var G__12413 = x__4402__auto__;
return goog.typeOf(G__12413);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj12415 = {};
return obj12415;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._notify_watches[(function (){var G__12419 = x__4402__auto__;
return goog.typeOf(G__12419);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._add_watch[(function (){var G__12423 = x__4402__auto__;
return goog.typeOf(G__12423);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3746__auto__ = this$;
if(and__3746__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3746__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4402__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3758__auto__ = (cljs.core._remove_watch[(function (){var G__12427 = x__4402__auto__;
return goog.typeOf(G__12427);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj12429 = {};
return obj12429;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._as_transient[(function (){var G__12433 = x__4402__auto__;
return goog.typeOf(G__12433);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj12435 = {};
return obj12435;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3746__auto__ = tcoll;
if(and__3746__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3746__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4402__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3758__auto__ = (cljs.core._conj_BANG_[(function (){var G__12439 = x__4402__auto__;
return goog.typeOf(G__12439);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3746__auto__ = tcoll;
if(and__3746__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3746__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4402__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3758__auto__ = (cljs.core._persistent_BANG_[(function (){var G__12443 = x__4402__auto__;
return goog.typeOf(G__12443);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj12445 = {};
return obj12445;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3746__auto__ = tcoll;
if(and__3746__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3746__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4402__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3758__auto__ = (cljs.core._assoc_BANG_[(function (){var G__12449 = x__4402__auto__;
return goog.typeOf(G__12449);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj12451 = {};
return obj12451;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3746__auto__ = tcoll;
if(and__3746__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3746__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4402__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3758__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__12455 = x__4402__auto__;
return goog.typeOf(G__12455);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj12457 = {};
return obj12457;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3746__auto__ = tcoll;
if(and__3746__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3746__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4402__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3758__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__12461 = x__4402__auto__;
return goog.typeOf(G__12461);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3746__auto__ = tcoll;
if(and__3746__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3746__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4402__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3758__auto__ = (cljs.core._pop_BANG_[(function (){var G__12465 = x__4402__auto__;
return goog.typeOf(G__12465);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj12467 = {};
return obj12467;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3746__auto__ = tcoll;
if(and__3746__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3746__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4402__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3758__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__12471 = x__4402__auto__;
return goog.typeOf(G__12471);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj12473 = {};
return obj12473;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3746__auto__ = x;
if(and__3746__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3746__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4402__auto__ = (((x == null))?null:x);
return (function (){var or__3758__auto__ = (cljs.core._compare[(function (){var G__12477 = x__4402__auto__;
return goog.typeOf(G__12477);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._compare["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj12479 = {};
return obj12479;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._drop_first[(function (){var G__12483 = x__4402__auto__;
return goog.typeOf(G__12483);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj12485 = {};
return obj12485;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._chunked_first[(function (){var G__12489 = x__4402__auto__;
return goog.typeOf(G__12489);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._chunked_rest[(function (){var G__12493 = x__4402__auto__;
return goog.typeOf(G__12493);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj12495 = {};
return obj12495;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._chunked_next[(function (){var G__12499 = x__4402__auto__;
return goog.typeOf(G__12499);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj12501 = {};
return obj12501;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3746__auto__ = x;
if(and__3746__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3746__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4402__auto__ = (((x == null))?null:x);
return (function (){var or__3758__auto__ = (cljs.core._name[(function (){var G__12505 = x__4402__auto__;
return goog.typeOf(G__12505);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._name["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3746__auto__ = x;
if(and__3746__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3746__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4402__auto__ = (((x == null))?null:x);
return (function (){var or__3758__auto__ = (cljs.core._namespace[(function (){var G__12509 = x__4402__auto__;
return goog.typeOf(G__12509);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._namespace["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj12511 = {};
return obj12511;
})();


cljs.core.IReset = (function (){var obj12513 = {};
return obj12513;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._reset_BANG_[(function (){var G__12517 = x__4402__auto__;
return goog.typeOf(G__12517);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj12519 = {};
return obj12519;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._swap_BANG_[(function (){var G__12529 = x__4402__auto__;
return goog.typeOf(G__12529);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._swap_BANG_[(function (){var G__12531 = x__4402__auto__;
return goog.typeOf(G__12531);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._swap_BANG_[(function (){var G__12533 = x__4402__auto__;
return goog.typeOf(G__12533);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._swap_BANG_[(function (){var G__12535 = x__4402__auto__;
return goog.typeOf(G__12535);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj12537 = {};
return obj12537;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3746__auto__ = o;
if(and__3746__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3746__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4402__auto__ = (((o == null))?null:o);
return (function (){var or__3758__auto__ = (cljs.core._vreset_BANG_[(function (){var G__12541 = x__4402__auto__;
return goog.typeOf(G__12541);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj12543 = {};
return obj12543;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3746__auto__ = coll;
if(and__3746__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3746__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4402__auto__ = (((coll == null))?null:coll);
return (function (){var or__3758__auto__ = (cljs.core._iterator[(function (){var G__12547 = x__4402__auto__;
return goog.typeOf(G__12547);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._iterator["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__12550 = (4294967295);
var G__12551 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12550,G__12551) : Math.imul.call(null,G__12550,G__12551));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__12554 = a;
var G__12555 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12554,G__12555) : Math.imul.call(null,G__12554,G__12555));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__12556 = (i + (2));
var G__12557 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__12556;
h1 = G__12557;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj12559 = {};
return obj12559;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__12560 = (i + (1));
var G__12561 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__12560;
hash = G__12561;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj12565 = {};
return obj12565;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__12568 = o;
if(G__12568){
var bit__4432__auto__ = (G__12568.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4432__auto__) || (G__12568.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__12569 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12569) : Math.floor.call(null,G__12569));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3746__auto__ = cljs.core.not(a.ns);
if(and__3746__auto__){
return b.ns;
} else {
return and__3746__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12576 = a.ns;
var G__12577 = b.ns;
return goog.array.defaultCompare(G__12576,G__12577);
})();
if(((0) === nsc)){
var G__12578 = a.name;
var G__12579 = b.name;
return goog.array.defaultCompare(G__12578,G__12579);
} else {
return nsc;
}
}
} else {
var G__12580 = a.name;
var G__12581 = b.name;
return goog.array.defaultCompare(G__12580,G__12581);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4179__auto__ = self__._hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__12583 = null;
var G__12583__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__12583__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__12583 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12583__2.call(this,self__,coll);
case 3:
return G__12583__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12583.cljs$core$IFn$_invoke$arity$2 = G__12583__2;
G__12583.cljs$core$IFn$_invoke$arity$3 = G__12583__3;
return G__12583;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args12582){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12582)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__12631 = null;
var G__12631__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__12631__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__12631__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__12631__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__12631__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__12631__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__12631__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__12631__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__12631__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__12631__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__12631__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__12631__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__12631__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__12631__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__12631__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__12631__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__12631__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__12631__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__12631__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__12631__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__12631__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__12631__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12587 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12588 = a;
var G__12589 = b;
var G__12590 = c;
var G__12591 = d;
var G__12592 = e;
var G__12593 = f;
var G__12594 = g;
var G__12595 = h;
var G__12596 = i;
var G__12597 = j;
var G__12598 = k;
var G__12599 = l;
var G__12600 = m;
var G__12601 = n;
var G__12602 = o;
var G__12603 = p;
var G__12604 = q;
var G__12605 = r;
var G__12606 = s;
var G__12607 = t;
var G__12608 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12587,G__12588,G__12589,G__12590,G__12591,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608) : cljs.core.apply.call(null,G__12587,G__12588,G__12589,G__12590,G__12591,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608));
});
G__12631 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12631__1.call(this,self__);
case 2:
return G__12631__2.call(this,self__,a);
case 3:
return G__12631__3.call(this,self__,a,b);
case 4:
return G__12631__4.call(this,self__,a,b,c);
case 5:
return G__12631__5.call(this,self__,a,b,c,d);
case 6:
return G__12631__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12631__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12631__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12631__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12631__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12631__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12631__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12631__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12631__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12631__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12631__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12631__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12631__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12631__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12631__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12631__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12631__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12631.cljs$core$IFn$_invoke$arity$1 = G__12631__1;
G__12631.cljs$core$IFn$_invoke$arity$2 = G__12631__2;
G__12631.cljs$core$IFn$_invoke$arity$3 = G__12631__3;
G__12631.cljs$core$IFn$_invoke$arity$4 = G__12631__4;
G__12631.cljs$core$IFn$_invoke$arity$5 = G__12631__5;
G__12631.cljs$core$IFn$_invoke$arity$6 = G__12631__6;
G__12631.cljs$core$IFn$_invoke$arity$7 = G__12631__7;
G__12631.cljs$core$IFn$_invoke$arity$8 = G__12631__8;
G__12631.cljs$core$IFn$_invoke$arity$9 = G__12631__9;
G__12631.cljs$core$IFn$_invoke$arity$10 = G__12631__10;
G__12631.cljs$core$IFn$_invoke$arity$11 = G__12631__11;
G__12631.cljs$core$IFn$_invoke$arity$12 = G__12631__12;
G__12631.cljs$core$IFn$_invoke$arity$13 = G__12631__13;
G__12631.cljs$core$IFn$_invoke$arity$14 = G__12631__14;
G__12631.cljs$core$IFn$_invoke$arity$15 = G__12631__15;
G__12631.cljs$core$IFn$_invoke$arity$16 = G__12631__16;
G__12631.cljs$core$IFn$_invoke$arity$17 = G__12631__17;
G__12631.cljs$core$IFn$_invoke$arity$18 = G__12631__18;
G__12631.cljs$core$IFn$_invoke$arity$19 = G__12631__19;
G__12631.cljs$core$IFn$_invoke$arity$20 = G__12631__20;
G__12631.cljs$core$IFn$_invoke$arity$21 = G__12631__21;
G__12631.cljs$core$IFn$_invoke$arity$22 = G__12631__22;
return G__12631;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args12586){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12586)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12609 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12610 = a;
var G__12611 = b;
var G__12612 = c;
var G__12613 = d;
var G__12614 = e;
var G__12615 = f;
var G__12616 = g;
var G__12617 = h;
var G__12618 = i;
var G__12619 = j;
var G__12620 = k;
var G__12621 = l;
var G__12622 = m;
var G__12623 = n;
var G__12624 = o;
var G__12625 = p;
var G__12626 = q;
var G__12627 = r;
var G__12628 = s;
var G__12629 = t;
var G__12630 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630) : cljs.core.apply.call(null,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__12633 = x;
if(G__12633){
var bit__4439__auto__ = null;
if(cljs.core.truth_((function (){var or__3758__auto__ = bit__4439__auto__;
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return G__12633.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__12633.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12633);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12633);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__12635 = value;
if(G__12635){
var bit__4439__auto__ = (G__12635.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4439__auto__) || (G__12635.cljs$core$ICloneable$)){
return true;
} else {
if((!G__12635.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12635);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12635);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12637 = coll;
if(G__12637){
var bit__4432__auto__ = (G__12637.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4432__auto__) || (G__12637.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12639 = coll;
if(G__12639){
var bit__4432__auto__ = (G__12639.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4432__auto__) || (G__12639.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__12641 = coll;
if(G__12641){
var bit__4432__auto__ = (G__12641.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4432__auto__) || (G__12641.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12643 = coll;
if(G__12643){
var bit__4432__auto__ = (G__12643.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4432__auto__) || (G__12643.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__12648__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12649 = y;
var G__12650 = cljs.core.first(more);
var G__12651 = cljs.core.next(more);
x = G__12649;
y = G__12650;
more = G__12651;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12648 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12652__i = 0, G__12652__a = new Array(arguments.length -  2);
while (G__12652__i < G__12652__a.length) {G__12652__a[G__12652__i] = arguments[G__12652__i + 2]; ++G__12652__i;}
  more = new cljs.core.IndexedSeq(G__12652__a,0);
} 
return G__12648__delegate.call(this,x,y,more);};
G__12648.cljs$lang$maxFixedArity = 2;
G__12648.cljs$lang$applyTo = (function (arglist__12653){
var x = cljs.core.first(arglist__12653);
arglist__12653 = cljs.core.next(arglist__12653);
var y = cljs.core.first(arglist__12653);
var more = cljs.core.rest(arglist__12653);
return G__12648__delegate(x,y,more);
});
G__12648.cljs$core$IFn$_invoke$arity$variadic = G__12648__delegate;
return G__12648;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__12654 = null;
if (arguments.length > 2) {
var G__12655__i = 0, G__12655__a = new Array(arguments.length -  2);
while (G__12655__i < G__12655__a.length) {G__12655__a[G__12655__i] = arguments[G__12655__i + 2]; ++G__12655__i;}
G__12654 = new cljs.core.IndexedSeq(G__12655__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__12656 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__12656) : cljs.core.es6_iterator_seq.call(null,G__12656));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12657 = (n + (1));
var G__12658 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12659 = cljs.core.next(coll__$1);
n = G__12657;
hash_code = G__12658;
coll__$1 = G__12659;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12660 = (n + (1));
var G__12661 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12662 = cljs.core.next(coll__$1);
n = G__12660;
hash_code = G__12661;
coll__$1 = G__12662;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__12663 = o;
return goog.getUid(G__12663);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__12665 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12665) : cljs.core.deref.call(null,G__12665));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__12672 = val;
var G__12673 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12672,G__12673) : f.call(null,G__12672,G__12673));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12678 = nval;
var G__12679 = (n + (1));
val = G__12678;
n = G__12679;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__12674 = val__$1;
var G__12675 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12674,G__12675) : f.call(null,G__12674,G__12675));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12680 = nval;
var G__12681 = (n + (1));
val__$1 = G__12680;
n = G__12681;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__12676 = val__$1;
var G__12677 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12676,G__12677) : f.call(null,G__12676,G__12677));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12682 = nval;
var G__12683 = (n + (1));
val__$1 = G__12682;
n = G__12683;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__12690 = val;
var G__12691 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12690,G__12691) : f.call(null,G__12690,G__12691));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12696 = nval;
var G__12697 = (n + (1));
val = G__12696;
n = G__12697;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__12692 = val__$1;
var G__12693 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12692,G__12693) : f.call(null,G__12692,G__12693));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12698 = nval;
var G__12699 = (n + (1));
val__$1 = G__12698;
n = G__12699;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__12694 = val__$1;
var G__12695 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12694,G__12695) : f.call(null,G__12694,G__12695));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12700 = nval;
var G__12701 = (n + (1));
val__$1 = G__12700;
n = G__12701;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__12703 = x;
if(G__12703){
var bit__4439__auto__ = (G__12703.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4439__auto__) || (G__12703.cljs$core$ICounted$)){
return true;
} else {
if((!G__12703.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12703);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12703);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__12705 = x;
if(G__12705){
var bit__4439__auto__ = (G__12705.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4439__auto__) || (G__12705.cljs$core$IIndexed$)){
return true;
} else {
if((!G__12705.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12705);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12705);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12706 = coll__$1;
var G__12707 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12706,G__12707) : cljs.core.equiv_sequential.call(null,G__12706,G__12707));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12708 = o;
var G__12709 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12708,G__12709) : cljs.core.cons.call(null,G__12708,G__12709));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12712 = coll__$1;
var G__12713 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12712,G__12713) : cljs.core.equiv_sequential.call(null,G__12712,G__12713));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__12714 = cljs.core.List.EMPTY;
var G__12715 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__12714,G__12715) : cljs.core.with_meta.call(null,G__12714,G__12715));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__12716 = f;
var G__12717 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__12716,G__12717) : cljs.core.seq_reduce.call(null,G__12716,G__12717));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__12718 = f;
var G__12719 = start;
var G__12720 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__12718,G__12719,G__12720) : cljs.core.seq_reduce.call(null,G__12718,G__12719,G__12720));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12721 = o;
var G__12722 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12721,G__12722) : cljs.core.cons.call(null,G__12721,G__12722));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__12723 = sn;
s = G__12723;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__12728__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__12729 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__12730 = cljs.core.first(xs);
var G__12731 = cljs.core.next(xs);
coll = G__12729;
x = G__12730;
xs = G__12731;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__12728 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__12732__i = 0, G__12732__a = new Array(arguments.length -  2);
while (G__12732__i < G__12732__a.length) {G__12732__a[G__12732__i] = arguments[G__12732__i + 2]; ++G__12732__i;}
  xs = new cljs.core.IndexedSeq(G__12732__a,0);
} 
return G__12728__delegate.call(this,coll,x,xs);};
G__12728.cljs$lang$maxFixedArity = 2;
G__12728.cljs$lang$applyTo = (function (arglist__12733){
var coll = cljs.core.first(arglist__12733);
arglist__12733 = cljs.core.next(arglist__12733);
var x = cljs.core.first(arglist__12733);
var xs = cljs.core.rest(arglist__12733);
return G__12728__delegate(coll,x,xs);
});
G__12728.cljs$core$IFn$_invoke$arity$variadic = G__12728__delegate;
return G__12728;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__12734 = null;
if (arguments.length > 2) {
var G__12735__i = 0, G__12735__a = new Array(arguments.length -  2);
while (G__12735__i < G__12735__a.length) {G__12735__a[G__12735__i] = arguments[G__12735__i + 2]; ++G__12735__i;}
G__12734 = new cljs.core.IndexedSeq(G__12735__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__12734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__12736 = cljs.core.next(s);
var G__12737 = (acc + (1));
s = G__12736;
acc = G__12737;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__12739 = coll;
if(G__12739){
var bit__4432__auto__ = (G__12739.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4432__auto__) || (G__12739.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__12740 = cljs.core.next(coll);
var G__12741 = (n - (1));
coll = G__12740;
n = G__12741;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__12742 = cljs.core.next(coll);
var G__12743 = (n - (1));
var G__12744 = not_found;
coll = G__12742;
n = G__12743;
not_found = G__12744;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__12749 = coll;
if(G__12749){
var bit__4432__auto__ = (G__12749.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4432__auto__) || (G__12749.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12750 = coll;
if(G__12750){
var bit__4439__auto__ = (G__12750.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4439__auto__) || (G__12750.cljs$core$ISeq$)){
return true;
} else {
if((!G__12750.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12750);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12750);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__12751 = coll;
if(G__12751){
var bit__4432__auto__ = (G__12751.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4432__auto__) || (G__12751.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12752 = coll;
if(G__12752){
var bit__4439__auto__ = (G__12752.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4439__auto__) || (G__12752.cljs$core$ISeq$)){
return true;
} else {
if((!G__12752.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12752);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12752);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__12753 = (n__$1 - (1));
var G__12754 = cljs.core.rest(xs);
n__$1 = G__12753;
xs = G__12754;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__12757 = o;
if(G__12757){
var bit__4432__auto__ = (G__12757.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4432__auto__) || (G__12757.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__12758 = o;
if(G__12758){
var bit__4432__auto__ = (G__12758.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4432__auto__) || (G__12758.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__12762__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__12763 = ret;
var G__12764 = cljs.core.first(kvs);
var G__12765 = cljs.core.second(kvs);
var G__12766 = cljs.core.nnext(kvs);
coll = G__12763;
k = G__12764;
v = G__12765;
kvs = G__12766;
continue;
} else {
return ret;
}
break;
}
};
var G__12762 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12767__i = 0, G__12767__a = new Array(arguments.length -  3);
while (G__12767__i < G__12767__a.length) {G__12767__a[G__12767__i] = arguments[G__12767__i + 3]; ++G__12767__i;}
  kvs = new cljs.core.IndexedSeq(G__12767__a,0);
} 
return G__12762__delegate.call(this,coll,k,v,kvs);};
G__12762.cljs$lang$maxFixedArity = 3;
G__12762.cljs$lang$applyTo = (function (arglist__12768){
var coll = cljs.core.first(arglist__12768);
arglist__12768 = cljs.core.next(arglist__12768);
var k = cljs.core.first(arglist__12768);
arglist__12768 = cljs.core.next(arglist__12768);
var v = cljs.core.first(arglist__12768);
var kvs = cljs.core.rest(arglist__12768);
return G__12762__delegate(coll,k,v,kvs);
});
G__12762.cljs$core$IFn$_invoke$arity$variadic = G__12762__delegate;
return G__12762;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__12769 = null;
if (arguments.length > 3) {
var G__12770__i = 0, G__12770__a = new Array(arguments.length -  3);
while (G__12770__i < G__12770__a.length) {G__12770__a[G__12770__i] = arguments[G__12770__i + 3]; ++G__12770__i;}
G__12769 = new cljs.core.IndexedSeq(G__12770__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__12769);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__12773__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12774 = ret;
var G__12775 = cljs.core.first(ks);
var G__12776 = cljs.core.next(ks);
coll = G__12774;
k = G__12775;
ks = G__12776;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12773 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12777__i = 0, G__12777__a = new Array(arguments.length -  2);
while (G__12777__i < G__12777__a.length) {G__12777__a[G__12777__i] = arguments[G__12777__i + 2]; ++G__12777__i;}
  ks = new cljs.core.IndexedSeq(G__12777__a,0);
} 
return G__12773__delegate.call(this,coll,k,ks);};
G__12773.cljs$lang$maxFixedArity = 2;
G__12773.cljs$lang$applyTo = (function (arglist__12778){
var coll = cljs.core.first(arglist__12778);
arglist__12778 = cljs.core.next(arglist__12778);
var k = cljs.core.first(arglist__12778);
var ks = cljs.core.rest(arglist__12778);
return G__12773__delegate(coll,k,ks);
});
G__12773.cljs$core$IFn$_invoke$arity$variadic = G__12773__delegate;
return G__12773;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__12779 = null;
if (arguments.length > 2) {
var G__12780__i = 0, G__12780__a = new Array(arguments.length -  2);
while (G__12780__i < G__12780__a.length) {G__12780__a[G__12780__i] = arguments[G__12780__i + 2]; ++G__12780__i;}
G__12779 = new cljs.core.IndexedSeq(G__12780__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3758__auto__ = (function (){var G__12785 = f;
return goog.isFunction(G__12785);
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var G__12786 = f;
if(G__12786){
var bit__4439__auto__ = null;
if(cljs.core.truth_((function (){var or__3758__auto____$1 = bit__4439__auto__;
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
return G__12786.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__12786.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12786);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12786);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__13252 = null;
var G__13252__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__13252__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12788 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12788) : self__.afn.call(null,G__12788));
});
var G__13252__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12789 = a;
var G__12790 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12789,G__12790) : self__.afn.call(null,G__12789,G__12790));
});
var G__13252__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12791 = a;
var G__12792 = b;
var G__12793 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12791,G__12792,G__12793) : self__.afn.call(null,G__12791,G__12792,G__12793));
});
var G__13252__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12794 = a;
var G__12795 = b;
var G__12796 = c;
var G__12797 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12794,G__12795,G__12796,G__12797) : self__.afn.call(null,G__12794,G__12795,G__12796,G__12797));
});
var G__13252__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12798 = a;
var G__12799 = b;
var G__12800 = c;
var G__12801 = d;
var G__12802 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12798,G__12799,G__12800,G__12801,G__12802) : self__.afn.call(null,G__12798,G__12799,G__12800,G__12801,G__12802));
});
var G__13252__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12803 = a;
var G__12804 = b;
var G__12805 = c;
var G__12806 = d;
var G__12807 = e;
var G__12808 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12803,G__12804,G__12805,G__12806,G__12807,G__12808) : self__.afn.call(null,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808));
});
var G__13252__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12809 = a;
var G__12810 = b;
var G__12811 = c;
var G__12812 = d;
var G__12813 = e;
var G__12814 = f;
var G__12815 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815) : self__.afn.call(null,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814,G__12815));
});
var G__13252__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12816 = a;
var G__12817 = b;
var G__12818 = c;
var G__12819 = d;
var G__12820 = e;
var G__12821 = f;
var G__12822 = g;
var G__12823 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12816,G__12817,G__12818,G__12819,G__12820,G__12821,G__12822,G__12823) : self__.afn.call(null,G__12816,G__12817,G__12818,G__12819,G__12820,G__12821,G__12822,G__12823));
});
var G__13252__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12824 = a;
var G__12825 = b;
var G__12826 = c;
var G__12827 = d;
var G__12828 = e;
var G__12829 = f;
var G__12830 = g;
var G__12831 = h;
var G__12832 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832) : self__.afn.call(null,G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832));
});
var G__13252__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12833 = a;
var G__12834 = b;
var G__12835 = c;
var G__12836 = d;
var G__12837 = e;
var G__12838 = f;
var G__12839 = g;
var G__12840 = h;
var G__12841 = i;
var G__12842 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12833,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842) : self__.afn.call(null,G__12833,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842));
});
var G__13252__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12843 = a;
var G__12844 = b;
var G__12845 = c;
var G__12846 = d;
var G__12847 = e;
var G__12848 = f;
var G__12849 = g;
var G__12850 = h;
var G__12851 = i;
var G__12852 = j;
var G__12853 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12843,G__12844,G__12845,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853) : self__.afn.call(null,G__12843,G__12844,G__12845,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853));
});
var G__13252__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12854 = a;
var G__12855 = b;
var G__12856 = c;
var G__12857 = d;
var G__12858 = e;
var G__12859 = f;
var G__12860 = g;
var G__12861 = h;
var G__12862 = i;
var G__12863 = j;
var G__12864 = k;
var G__12865 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12854,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865) : self__.afn.call(null,G__12854,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864,G__12865));
});
var G__13252__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12866 = a;
var G__12867 = b;
var G__12868 = c;
var G__12869 = d;
var G__12870 = e;
var G__12871 = f;
var G__12872 = g;
var G__12873 = h;
var G__12874 = i;
var G__12875 = j;
var G__12876 = k;
var G__12877 = l;
var G__12878 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12866,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878) : self__.afn.call(null,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878));
});
var G__13252__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12879 = a;
var G__12880 = b;
var G__12881 = c;
var G__12882 = d;
var G__12883 = e;
var G__12884 = f;
var G__12885 = g;
var G__12886 = h;
var G__12887 = i;
var G__12888 = j;
var G__12889 = k;
var G__12890 = l;
var G__12891 = m;
var G__12892 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890,G__12891,G__12892) : self__.afn.call(null,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890,G__12891,G__12892));
});
var G__13252__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12893 = a;
var G__12894 = b;
var G__12895 = c;
var G__12896 = d;
var G__12897 = e;
var G__12898 = f;
var G__12899 = g;
var G__12900 = h;
var G__12901 = i;
var G__12902 = j;
var G__12903 = k;
var G__12904 = l;
var G__12905 = m;
var G__12906 = n;
var G__12907 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907) : self__.afn.call(null,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907));
});
var G__13252__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12908 = a;
var G__12909 = b;
var G__12910 = c;
var G__12911 = d;
var G__12912 = e;
var G__12913 = f;
var G__12914 = g;
var G__12915 = h;
var G__12916 = i;
var G__12917 = j;
var G__12918 = k;
var G__12919 = l;
var G__12920 = m;
var G__12921 = n;
var G__12922 = o;
var G__12923 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923) : self__.afn.call(null,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923));
});
var G__13252__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12924 = a;
var G__12925 = b;
var G__12926 = c;
var G__12927 = d;
var G__12928 = e;
var G__12929 = f;
var G__12930 = g;
var G__12931 = h;
var G__12932 = i;
var G__12933 = j;
var G__12934 = k;
var G__12935 = l;
var G__12936 = m;
var G__12937 = n;
var G__12938 = o;
var G__12939 = p;
var G__12940 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940) : self__.afn.call(null,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940));
});
var G__13252__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12941 = a;
var G__12942 = b;
var G__12943 = c;
var G__12944 = d;
var G__12945 = e;
var G__12946 = f;
var G__12947 = g;
var G__12948 = h;
var G__12949 = i;
var G__12950 = j;
var G__12951 = k;
var G__12952 = l;
var G__12953 = m;
var G__12954 = n;
var G__12955 = o;
var G__12956 = p;
var G__12957 = q;
var G__12958 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958) : self__.afn.call(null,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958));
});
var G__13252__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12959 = a;
var G__12960 = b;
var G__12961 = c;
var G__12962 = d;
var G__12963 = e;
var G__12964 = f;
var G__12965 = g;
var G__12966 = h;
var G__12967 = i;
var G__12968 = j;
var G__12969 = k;
var G__12970 = l;
var G__12971 = m;
var G__12972 = n;
var G__12973 = o;
var G__12974 = p;
var G__12975 = q;
var G__12976 = r;
var G__12977 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977) : self__.afn.call(null,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977));
});
var G__13252__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12978 = a;
var G__12979 = b;
var G__12980 = c;
var G__12981 = d;
var G__12982 = e;
var G__12983 = f;
var G__12984 = g;
var G__12985 = h;
var G__12986 = i;
var G__12987 = j;
var G__12988 = k;
var G__12989 = l;
var G__12990 = m;
var G__12991 = n;
var G__12992 = o;
var G__12993 = p;
var G__12994 = q;
var G__12995 = r;
var G__12996 = s;
var G__12997 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997) : self__.afn.call(null,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997));
});
var G__13252__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12998 = self__.afn;
var G__12999 = a;
var G__13000 = b;
var G__13001 = c;
var G__13002 = d;
var G__13003 = e;
var G__13004 = f;
var G__13005 = g;
var G__13006 = h;
var G__13007 = i;
var G__13008 = j;
var G__13009 = k;
var G__13010 = l;
var G__13011 = m;
var G__13012 = n;
var G__13013 = o;
var G__13014 = p;
var G__13015 = q;
var G__13016 = r;
var G__13017 = s;
var G__13018 = t;
var G__13019 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019) : cljs.core.apply.call(null,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019));
});
G__13252 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13252__1.call(this,self__);
case 2:
return G__13252__2.call(this,self__,a);
case 3:
return G__13252__3.call(this,self__,a,b);
case 4:
return G__13252__4.call(this,self__,a,b,c);
case 5:
return G__13252__5.call(this,self__,a,b,c,d);
case 6:
return G__13252__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13252__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13252__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13252__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13252__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13252__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13252__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13252__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13252__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13252__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13252__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13252__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13252__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13252__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13252__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13252__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13252__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13252.cljs$core$IFn$_invoke$arity$1 = G__13252__1;
G__13252.cljs$core$IFn$_invoke$arity$2 = G__13252__2;
G__13252.cljs$core$IFn$_invoke$arity$3 = G__13252__3;
G__13252.cljs$core$IFn$_invoke$arity$4 = G__13252__4;
G__13252.cljs$core$IFn$_invoke$arity$5 = G__13252__5;
G__13252.cljs$core$IFn$_invoke$arity$6 = G__13252__6;
G__13252.cljs$core$IFn$_invoke$arity$7 = G__13252__7;
G__13252.cljs$core$IFn$_invoke$arity$8 = G__13252__8;
G__13252.cljs$core$IFn$_invoke$arity$9 = G__13252__9;
G__13252.cljs$core$IFn$_invoke$arity$10 = G__13252__10;
G__13252.cljs$core$IFn$_invoke$arity$11 = G__13252__11;
G__13252.cljs$core$IFn$_invoke$arity$12 = G__13252__12;
G__13252.cljs$core$IFn$_invoke$arity$13 = G__13252__13;
G__13252.cljs$core$IFn$_invoke$arity$14 = G__13252__14;
G__13252.cljs$core$IFn$_invoke$arity$15 = G__13252__15;
G__13252.cljs$core$IFn$_invoke$arity$16 = G__13252__16;
G__13252.cljs$core$IFn$_invoke$arity$17 = G__13252__17;
G__13252.cljs$core$IFn$_invoke$arity$18 = G__13252__18;
G__13252.cljs$core$IFn$_invoke$arity$19 = G__13252__19;
G__13252.cljs$core$IFn$_invoke$arity$20 = G__13252__20;
G__13252.cljs$core$IFn$_invoke$arity$21 = G__13252__21;
G__13252.cljs$core$IFn$_invoke$arity$22 = G__13252__22;
return G__13252;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args12787){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12787)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__13020 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13020) : self__.afn.call(null,G__13020));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__13021 = a;
var G__13022 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13021,G__13022) : self__.afn.call(null,G__13021,G__13022));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__13023 = a;
var G__13024 = b;
var G__13025 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13023,G__13024,G__13025) : self__.afn.call(null,G__13023,G__13024,G__13025));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__13026 = a;
var G__13027 = b;
var G__13028 = c;
var G__13029 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13026,G__13027,G__13028,G__13029) : self__.afn.call(null,G__13026,G__13027,G__13028,G__13029));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__13030 = a;
var G__13031 = b;
var G__13032 = c;
var G__13033 = d;
var G__13034 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13030,G__13031,G__13032,G__13033,G__13034) : self__.afn.call(null,G__13030,G__13031,G__13032,G__13033,G__13034));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__13035 = a;
var G__13036 = b;
var G__13037 = c;
var G__13038 = d;
var G__13039 = e;
var G__13040 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13035,G__13036,G__13037,G__13038,G__13039,G__13040) : self__.afn.call(null,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__13041 = a;
var G__13042 = b;
var G__13043 = c;
var G__13044 = d;
var G__13045 = e;
var G__13046 = f;
var G__13047 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047) : self__.afn.call(null,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__13048 = a;
var G__13049 = b;
var G__13050 = c;
var G__13051 = d;
var G__13052 = e;
var G__13053 = f;
var G__13054 = g;
var G__13055 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055) : self__.afn.call(null,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__13056 = a;
var G__13057 = b;
var G__13058 = c;
var G__13059 = d;
var G__13060 = e;
var G__13061 = f;
var G__13062 = g;
var G__13063 = h;
var G__13064 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064) : self__.afn.call(null,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__13065 = a;
var G__13066 = b;
var G__13067 = c;
var G__13068 = d;
var G__13069 = e;
var G__13070 = f;
var G__13071 = g;
var G__13072 = h;
var G__13073 = i;
var G__13074 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074) : self__.afn.call(null,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__13075 = a;
var G__13076 = b;
var G__13077 = c;
var G__13078 = d;
var G__13079 = e;
var G__13080 = f;
var G__13081 = g;
var G__13082 = h;
var G__13083 = i;
var G__13084 = j;
var G__13085 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085) : self__.afn.call(null,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__13086 = a;
var G__13087 = b;
var G__13088 = c;
var G__13089 = d;
var G__13090 = e;
var G__13091 = f;
var G__13092 = g;
var G__13093 = h;
var G__13094 = i;
var G__13095 = j;
var G__13096 = k;
var G__13097 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097) : self__.afn.call(null,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__13098 = a;
var G__13099 = b;
var G__13100 = c;
var G__13101 = d;
var G__13102 = e;
var G__13103 = f;
var G__13104 = g;
var G__13105 = h;
var G__13106 = i;
var G__13107 = j;
var G__13108 = k;
var G__13109 = l;
var G__13110 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110) : self__.afn.call(null,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__13111 = a;
var G__13112 = b;
var G__13113 = c;
var G__13114 = d;
var G__13115 = e;
var G__13116 = f;
var G__13117 = g;
var G__13118 = h;
var G__13119 = i;
var G__13120 = j;
var G__13121 = k;
var G__13122 = l;
var G__13123 = m;
var G__13124 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124) : self__.afn.call(null,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__13125 = a;
var G__13126 = b;
var G__13127 = c;
var G__13128 = d;
var G__13129 = e;
var G__13130 = f;
var G__13131 = g;
var G__13132 = h;
var G__13133 = i;
var G__13134 = j;
var G__13135 = k;
var G__13136 = l;
var G__13137 = m;
var G__13138 = n;
var G__13139 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139) : self__.afn.call(null,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__13140 = a;
var G__13141 = b;
var G__13142 = c;
var G__13143 = d;
var G__13144 = e;
var G__13145 = f;
var G__13146 = g;
var G__13147 = h;
var G__13148 = i;
var G__13149 = j;
var G__13150 = k;
var G__13151 = l;
var G__13152 = m;
var G__13153 = n;
var G__13154 = o;
var G__13155 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155) : self__.afn.call(null,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__13156 = a;
var G__13157 = b;
var G__13158 = c;
var G__13159 = d;
var G__13160 = e;
var G__13161 = f;
var G__13162 = g;
var G__13163 = h;
var G__13164 = i;
var G__13165 = j;
var G__13166 = k;
var G__13167 = l;
var G__13168 = m;
var G__13169 = n;
var G__13170 = o;
var G__13171 = p;
var G__13172 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172) : self__.afn.call(null,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__13173 = a;
var G__13174 = b;
var G__13175 = c;
var G__13176 = d;
var G__13177 = e;
var G__13178 = f;
var G__13179 = g;
var G__13180 = h;
var G__13181 = i;
var G__13182 = j;
var G__13183 = k;
var G__13184 = l;
var G__13185 = m;
var G__13186 = n;
var G__13187 = o;
var G__13188 = p;
var G__13189 = q;
var G__13190 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190) : self__.afn.call(null,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__13191 = a;
var G__13192 = b;
var G__13193 = c;
var G__13194 = d;
var G__13195 = e;
var G__13196 = f;
var G__13197 = g;
var G__13198 = h;
var G__13199 = i;
var G__13200 = j;
var G__13201 = k;
var G__13202 = l;
var G__13203 = m;
var G__13204 = n;
var G__13205 = o;
var G__13206 = p;
var G__13207 = q;
var G__13208 = r;
var G__13209 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209) : self__.afn.call(null,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__13210 = a;
var G__13211 = b;
var G__13212 = c;
var G__13213 = d;
var G__13214 = e;
var G__13215 = f;
var G__13216 = g;
var G__13217 = h;
var G__13218 = i;
var G__13219 = j;
var G__13220 = k;
var G__13221 = l;
var G__13222 = m;
var G__13223 = n;
var G__13224 = o;
var G__13225 = p;
var G__13226 = q;
var G__13227 = r;
var G__13228 = s;
var G__13229 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229) : self__.afn.call(null,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__13230 = self__.afn;
var G__13231 = a;
var G__13232 = b;
var G__13233 = c;
var G__13234 = d;
var G__13235 = e;
var G__13236 = f;
var G__13237 = g;
var G__13238 = h;
var G__13239 = i;
var G__13240 = j;
var G__13241 = k;
var G__13242 = l;
var G__13243 = m;
var G__13244 = n;
var G__13245 = o;
var G__13246 = p;
var G__13247 = q;
var G__13248 = r;
var G__13249 = s;
var G__13250 = t;
var G__13251 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251) : cljs.core.apply.call(null,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__13256 = o;
if(G__13256){
var bit__4439__auto__ = (G__13256.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4439__auto__) || (G__13256.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__13256.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13256);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13256);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3746__auto__ = !((o == null));
if(and__3746__auto__){
var G__13260 = o;
if(G__13260){
var bit__4439__auto__ = (G__13260.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4439__auto__) || (G__13260.cljs$core$IMeta$)){
return true;
} else {
if((!G__13260.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13260);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13260);
}
} else {
return and__3746__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__13263__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13264 = ret;
var G__13265 = cljs.core.first(ks);
var G__13266 = cljs.core.next(ks);
coll = G__13264;
k = G__13265;
ks = G__13266;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13263 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13267__i = 0, G__13267__a = new Array(arguments.length -  2);
while (G__13267__i < G__13267__a.length) {G__13267__a[G__13267__i] = arguments[G__13267__i + 2]; ++G__13267__i;}
  ks = new cljs.core.IndexedSeq(G__13267__a,0);
} 
return G__13263__delegate.call(this,coll,k,ks);};
G__13263.cljs$lang$maxFixedArity = 2;
G__13263.cljs$lang$applyTo = (function (arglist__13268){
var coll = cljs.core.first(arglist__13268);
arglist__13268 = cljs.core.next(arglist__13268);
var k = cljs.core.first(arglist__13268);
var ks = cljs.core.rest(arglist__13268);
return G__13263__delegate(coll,k,ks);
});
G__13263.cljs$core$IFn$_invoke$arity$variadic = G__13263__delegate;
return G__13263;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__13269 = null;
if (arguments.length > 2) {
var G__13270__i = 0, G__13270__a = new Array(arguments.length -  2);
while (G__13270__i < G__13270__a.length) {G__13270__a[G__13270__i] = arguments[G__13270__i + 2]; ++G__13270__i;}
G__13269 = new cljs.core.IndexedSeq(G__13270__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13269);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13272 = x;
if(G__13272){
var bit__4439__auto__ = (G__13272.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4439__auto__) || (G__13272.cljs$core$ICollection$)){
return true;
} else {
if((!G__13272.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13272);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13272);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13274 = x;
if(G__13274){
var bit__4439__auto__ = (G__13274.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4439__auto__) || (G__13274.cljs$core$ISet$)){
return true;
} else {
if((!G__13274.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13274);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13274);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__13276 = x;
if(G__13276){
var bit__4439__auto__ = (G__13276.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4439__auto__) || (G__13276.cljs$core$IAssociative$)){
return true;
} else {
if((!G__13276.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13276);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13276);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__13278 = x;
if(G__13278){
var bit__4439__auto__ = (G__13278.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4439__auto__) || (G__13278.cljs$core$ISequential$)){
return true;
} else {
if((!G__13278.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13278);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13278);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__13280 = x;
if(G__13280){
var bit__4439__auto__ = (G__13280.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4439__auto__) || (G__13280.cljs$core$ISorted$)){
return true;
} else {
if((!G__13280.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13280);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13280);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__13282 = x;
if(G__13282){
var bit__4439__auto__ = (G__13282.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4439__auto__) || (G__13282.cljs$core$IReduce$)){
return true;
} else {
if((!G__13282.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13282);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13282);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13284 = x;
if(G__13284){
var bit__4439__auto__ = (G__13284.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4439__auto__) || (G__13284.cljs$core$IMap$)){
return true;
} else {
if((!G__13284.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13284);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13284);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__13286 = x;
if(G__13286){
var bit__4439__auto__ = (G__13286.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4439__auto__) || (G__13286.cljs$core$IVector$)){
return true;
} else {
if((!G__13286.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13286);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13286);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__13288 = x;
if(G__13288){
var bit__4432__auto__ = (G__13288.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4432__auto__) || (G__13288.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj13294 = {};
return obj13294;
});
var js_obj__1 = (function() { 
var G__13297__delegate = function (keyvals){
var G__13295 = goog.object.create;
var G__13296 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__13295,G__13296) : cljs.core.apply.call(null,G__13295,G__13296));
};
var G__13297 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13298__i = 0, G__13298__a = new Array(arguments.length -  0);
while (G__13298__i < G__13298__a.length) {G__13298__a[G__13298__i] = arguments[G__13298__i + 0]; ++G__13298__i;}
  keyvals = new cljs.core.IndexedSeq(G__13298__a,0);
} 
return G__13297__delegate.call(this,keyvals);};
G__13297.cljs$lang$maxFixedArity = 0;
G__13297.cljs$lang$applyTo = (function (arglist__13299){
var keyvals = cljs.core.seq(arglist__13299);
return G__13297__delegate(keyvals);
});
G__13297.cljs$core$IFn$_invoke$arity$variadic = G__13297__delegate;
return G__13297;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__13300 = null;
if (arguments.length > 0) {
var G__13301__i = 0, G__13301__a = new Array(arguments.length -  0);
while (G__13301__i < G__13301__a.length) {G__13301__a[G__13301__i] = arguments[G__13301__i + 0]; ++G__13301__i;}
G__13300 = new cljs.core.IndexedSeq(G__13301__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__13300);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__13304_13306 = obj;
var G__13305_13307 = ((function (G__13304_13306,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__13304_13306,keys))
;
goog.object.forEach(G__13304_13306,G__13305_13307);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13308 = (i__$1 + (1));
var G__13309 = (j__$1 + (1));
var G__13310 = (len__$1 - (1));
i__$1 = G__13308;
j__$1 = G__13309;
len__$1 = G__13310;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13311 = (i__$1 - (1));
var G__13312 = (j__$1 - (1));
var G__13313 = (len__$1 - (1));
i__$1 = G__13311;
j__$1 = G__13312;
len__$1 = G__13313;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj13315 = {};
return obj13315;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__13317 = s;
if(G__13317){
var bit__4439__auto__ = (G__13317.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4439__auto__) || (G__13317.cljs$core$ISeq$)){
return true;
} else {
if((!G__13317.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13317);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13317);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__13319 = s;
if(G__13319){
var bit__4439__auto__ = (G__13319.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4439__auto__) || (G__13319.cljs$core$ISeqable$)){
return true;
} else {
if((!G__13319.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13319);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13319);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3758__auto__ = cljs.core.fn_QMARK_(f);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var G__13323 = f;
if(G__13323){
var bit__4439__auto__ = (G__13323.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4439__auto__) || (G__13323.cljs$core$IFn$)){
return true;
} else {
if((!G__13323.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13323);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13323);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__13336 = n;
return isNaN(G__13336);
})())) && (!((n === Infinity))) && (((function (){var G__13337 = n;
return parseFloat(G__13337);
})() === (function (){var G__13338 = n;
var G__13339 = (10);
return parseInt(G__13338,G__13339);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__13340__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__13341 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__13342 = etc;
s = G__13341;
xs = G__13342;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__13340 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13343__i = 0, G__13343__a = new Array(arguments.length -  2);
while (G__13343__i < G__13343__a.length) {G__13343__a[G__13343__i] = arguments[G__13343__i + 2]; ++G__13343__i;}
  more = new cljs.core.IndexedSeq(G__13343__a,0);
} 
return G__13340__delegate.call(this,x,y,more);};
G__13340.cljs$lang$maxFixedArity = 2;
G__13340.cljs$lang$applyTo = (function (arglist__13344){
var x = cljs.core.first(arglist__13344);
arglist__13344 = cljs.core.next(arglist__13344);
var y = cljs.core.first(arglist__13344);
var more = cljs.core.rest(arglist__13344);
return G__13340__delegate(x,y,more);
});
G__13340.cljs$core$IFn$_invoke$arity$variadic = G__13340__delegate;
return G__13340;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__13345 = null;
if (arguments.length > 2) {
var G__13346__i = 0, G__13346__a = new Array(arguments.length -  2);
while (G__13346__i < G__13346__a.length) {G__13346__a[G__13346__i] = arguments[G__13346__i + 2]; ++G__13346__i;}
G__13345 = new cljs.core.IndexedSeq(G__13346__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13345);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__13350 = x;
if(G__13350){
var bit__4432__auto__ = (G__13350.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4432__auto__) || (G__13350.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__13351 = x;
var G__13352 = y;
return goog.array.defaultCompare(G__13351,G__13352);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__13357 = xs;
var G__13358 = ys;
var G__13359 = len;
var G__13360 = (n + (1));
xs = G__13357;
ys = G__13358;
len = G__13359;
n = G__13360;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__13365 = x;
var G__13366 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13365,G__13366) : f.call(null,G__13365,G__13366));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13367 = y;
var G__13368 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13367,G__13368) : f.call(null,G__13367,G__13368));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__13374 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13374) : cljs.core.to_array.call(null,G__13374));
})();
var G__13375_13377 = a;
var G__13376_13378 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__13375_13377,G__13376_13378);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__13384 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13384) : keyfn.call(null,G__13384));
})(),(function (){var G__13385 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13385) : keyfn.call(null,G__13385));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__13391 = f;
var G__13392 = cljs.core.first(s);
var G__13393 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13391,G__13392,G__13393) : cljs.core.reduce.call(null,G__13391,G__13392,G__13393));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__13394 = val__$1;
var G__13395 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13394,G__13395) : f.call(null,G__13394,G__13395));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13396 = nval;
var G__13397 = cljs.core.next(coll__$1);
val__$1 = G__13396;
coll__$1 = G__13397;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__13401 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13401) : cljs.core.to_array.call(null,G__13401));
})();
var G__13402_13404 = a;
goog.array.shuffle(G__13402_13404);

var G__13403 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__13403) : cljs.core.vec.call(null,G__13403));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__13407 = coll;
if(G__13407){
var bit__4432__auto__ = (G__13407.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4432__auto__) || (G__13407.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__13408 = coll;
if(G__13408){
var bit__4432__auto__ = (G__13408.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4432__auto__) || (G__13408.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__13417 = null;
var G__13417__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__13417__1 = (function (x){
var G__13414 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__13414) : cf.call(null,G__13414));
});
var G__13417__2 = (function (x,y){
var G__13415 = x;
var G__13416 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13415,G__13416) : f.call(null,G__13415,G__13416));
});
G__13417 = function(x,y){
switch(arguments.length){
case 0:
return G__13417__0.call(this);
case 1:
return G__13417__1.call(this,x);
case 2:
return G__13417__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13417.cljs$core$IFn$_invoke$arity$0 = G__13417__0;
G__13417.cljs$core$IFn$_invoke$arity$1 = G__13417__1;
G__13417.cljs$core$IFn$_invoke$arity$2 = G__13417__2;
return G__13417;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__13424 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13424) : xform.call(null,G__13424));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__13425 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__13425) : f__$1.call(null,G__13425));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__13426__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__13426 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13427__i = 0, G__13427__a = new Array(arguments.length -  2);
while (G__13427__i < G__13427__a.length) {G__13427__a[G__13427__i] = arguments[G__13427__i + 2]; ++G__13427__i;}
  more = new cljs.core.IndexedSeq(G__13427__a,0);
} 
return G__13426__delegate.call(this,x,y,more);};
G__13426.cljs$lang$maxFixedArity = 2;
G__13426.cljs$lang$applyTo = (function (arglist__13428){
var x = cljs.core.first(arglist__13428);
arglist__13428 = cljs.core.next(arglist__13428);
var y = cljs.core.first(arglist__13428);
var more = cljs.core.rest(arglist__13428);
return G__13426__delegate(x,y,more);
});
G__13426.cljs$core$IFn$_invoke$arity$variadic = G__13426__delegate;
return G__13426;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__13429 = null;
if (arguments.length > 2) {
var G__13430__i = 0, G__13430__a = new Array(arguments.length -  2);
while (G__13430__i < G__13430__a.length) {G__13430__a[G__13430__i] = arguments[G__13430__i + 2]; ++G__13430__i;}
G__13429 = new cljs.core.IndexedSeq(G__13430__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13429);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__13431__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__13431 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13432__i = 0, G__13432__a = new Array(arguments.length -  2);
while (G__13432__i < G__13432__a.length) {G__13432__a[G__13432__i] = arguments[G__13432__i + 2]; ++G__13432__i;}
  more = new cljs.core.IndexedSeq(G__13432__a,0);
} 
return G__13431__delegate.call(this,x,y,more);};
G__13431.cljs$lang$maxFixedArity = 2;
G__13431.cljs$lang$applyTo = (function (arglist__13433){
var x = cljs.core.first(arglist__13433);
arglist__13433 = cljs.core.next(arglist__13433);
var y = cljs.core.first(arglist__13433);
var more = cljs.core.rest(arglist__13433);
return G__13431__delegate(x,y,more);
});
G__13431.cljs$core$IFn$_invoke$arity$variadic = G__13431__delegate;
return G__13431;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__13434 = null;
if (arguments.length > 2) {
var G__13435__i = 0, G__13435__a = new Array(arguments.length -  2);
while (G__13435__i < G__13435__a.length) {G__13435__a[G__13435__i] = arguments[G__13435__i + 2]; ++G__13435__i;}
G__13434 = new cljs.core.IndexedSeq(G__13435__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13434);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__13436__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__13436 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13437__i = 0, G__13437__a = new Array(arguments.length -  2);
while (G__13437__i < G__13437__a.length) {G__13437__a[G__13437__i] = arguments[G__13437__i + 2]; ++G__13437__i;}
  more = new cljs.core.IndexedSeq(G__13437__a,0);
} 
return G__13436__delegate.call(this,x,y,more);};
G__13436.cljs$lang$maxFixedArity = 2;
G__13436.cljs$lang$applyTo = (function (arglist__13438){
var x = cljs.core.first(arglist__13438);
arglist__13438 = cljs.core.next(arglist__13438);
var y = cljs.core.first(arglist__13438);
var more = cljs.core.rest(arglist__13438);
return G__13436__delegate(x,y,more);
});
G__13436.cljs$core$IFn$_invoke$arity$variadic = G__13436__delegate;
return G__13436;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__13439 = null;
if (arguments.length > 2) {
var G__13440__i = 0, G__13440__a = new Array(arguments.length -  2);
while (G__13440__i < G__13440__a.length) {G__13440__a[G__13440__i] = arguments[G__13440__i + 2]; ++G__13440__i;}
G__13439 = new cljs.core.IndexedSeq(G__13440__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__13445__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13445 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13446__i = 0, G__13446__a = new Array(arguments.length -  2);
while (G__13446__i < G__13446__a.length) {G__13446__a[G__13446__i] = arguments[G__13446__i + 2]; ++G__13446__i;}
  more = new cljs.core.IndexedSeq(G__13446__a,0);
} 
return G__13445__delegate.call(this,x,y,more);};
G__13445.cljs$lang$maxFixedArity = 2;
G__13445.cljs$lang$applyTo = (function (arglist__13447){
var x = cljs.core.first(arglist__13447);
arglist__13447 = cljs.core.next(arglist__13447);
var y = cljs.core.first(arglist__13447);
var more = cljs.core.rest(arglist__13447);
return G__13445__delegate(x,y,more);
});
G__13445.cljs$core$IFn$_invoke$arity$variadic = G__13445__delegate;
return G__13445;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__13448 = null;
if (arguments.length > 2) {
var G__13449__i = 0, G__13449__a = new Array(arguments.length -  2);
while (G__13449__i < G__13449__a.length) {G__13449__a[G__13449__i] = arguments[G__13449__i + 2]; ++G__13449__i;}
G__13448 = new cljs.core.IndexedSeq(G__13449__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__13450__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__13451 = y;
var G__13452 = cljs.core.first(more);
var G__13453 = cljs.core.next(more);
x = G__13451;
y = G__13452;
more = G__13453;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13450 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13454__i = 0, G__13454__a = new Array(arguments.length -  2);
while (G__13454__i < G__13454__a.length) {G__13454__a[G__13454__i] = arguments[G__13454__i + 2]; ++G__13454__i;}
  more = new cljs.core.IndexedSeq(G__13454__a,0);
} 
return G__13450__delegate.call(this,x,y,more);};
G__13450.cljs$lang$maxFixedArity = 2;
G__13450.cljs$lang$applyTo = (function (arglist__13455){
var x = cljs.core.first(arglist__13455);
arglist__13455 = cljs.core.next(arglist__13455);
var y = cljs.core.first(arglist__13455);
var more = cljs.core.rest(arglist__13455);
return G__13450__delegate(x,y,more);
});
G__13450.cljs$core$IFn$_invoke$arity$variadic = G__13450__delegate;
return G__13450;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__13456 = null;
if (arguments.length > 2) {
var G__13457__i = 0, G__13457__a = new Array(arguments.length -  2);
while (G__13457__i < G__13457__a.length) {G__13457__a[G__13457__i] = arguments[G__13457__i + 2]; ++G__13457__i;}
G__13456 = new cljs.core.IndexedSeq(G__13457__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__13458__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__13459 = y;
var G__13460 = cljs.core.first(more);
var G__13461 = cljs.core.next(more);
x = G__13459;
y = G__13460;
more = G__13461;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13458 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13462__i = 0, G__13462__a = new Array(arguments.length -  2);
while (G__13462__i < G__13462__a.length) {G__13462__a[G__13462__i] = arguments[G__13462__i + 2]; ++G__13462__i;}
  more = new cljs.core.IndexedSeq(G__13462__a,0);
} 
return G__13458__delegate.call(this,x,y,more);};
G__13458.cljs$lang$maxFixedArity = 2;
G__13458.cljs$lang$applyTo = (function (arglist__13463){
var x = cljs.core.first(arglist__13463);
arglist__13463 = cljs.core.next(arglist__13463);
var y = cljs.core.first(arglist__13463);
var more = cljs.core.rest(arglist__13463);
return G__13458__delegate(x,y,more);
});
G__13458.cljs$core$IFn$_invoke$arity$variadic = G__13458__delegate;
return G__13458;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__13464 = null;
if (arguments.length > 2) {
var G__13465__i = 0, G__13465__a = new Array(arguments.length -  2);
while (G__13465__i < G__13465__a.length) {G__13465__a[G__13465__i] = arguments[G__13465__i + 2]; ++G__13465__i;}
G__13464 = new cljs.core.IndexedSeq(G__13465__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13464);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__13466__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__13467 = y;
var G__13468 = cljs.core.first(more);
var G__13469 = cljs.core.next(more);
x = G__13467;
y = G__13468;
more = G__13469;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13466 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13470__i = 0, G__13470__a = new Array(arguments.length -  2);
while (G__13470__i < G__13470__a.length) {G__13470__a[G__13470__i] = arguments[G__13470__i + 2]; ++G__13470__i;}
  more = new cljs.core.IndexedSeq(G__13470__a,0);
} 
return G__13466__delegate.call(this,x,y,more);};
G__13466.cljs$lang$maxFixedArity = 2;
G__13466.cljs$lang$applyTo = (function (arglist__13471){
var x = cljs.core.first(arglist__13471);
arglist__13471 = cljs.core.next(arglist__13471);
var y = cljs.core.first(arglist__13471);
var more = cljs.core.rest(arglist__13471);
return G__13466__delegate(x,y,more);
});
G__13466.cljs$core$IFn$_invoke$arity$variadic = G__13466__delegate;
return G__13466;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__13472 = null;
if (arguments.length > 2) {
var G__13473__i = 0, G__13473__a = new Array(arguments.length -  2);
while (G__13473__i < G__13473__a.length) {G__13473__a[G__13473__i] = arguments[G__13473__i + 2]; ++G__13473__i;}
G__13472 = new cljs.core.IndexedSeq(G__13473__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__13474__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__13475 = y;
var G__13476 = cljs.core.first(more);
var G__13477 = cljs.core.next(more);
x = G__13475;
y = G__13476;
more = G__13477;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13474 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13478__i = 0, G__13478__a = new Array(arguments.length -  2);
while (G__13478__i < G__13478__a.length) {G__13478__a[G__13478__i] = arguments[G__13478__i + 2]; ++G__13478__i;}
  more = new cljs.core.IndexedSeq(G__13478__a,0);
} 
return G__13474__delegate.call(this,x,y,more);};
G__13474.cljs$lang$maxFixedArity = 2;
G__13474.cljs$lang$applyTo = (function (arglist__13479){
var x = cljs.core.first(arglist__13479);
arglist__13479 = cljs.core.next(arglist__13479);
var y = cljs.core.first(arglist__13479);
var more = cljs.core.rest(arglist__13479);
return G__13474__delegate(x,y,more);
});
G__13474.cljs$core$IFn$_invoke$arity$variadic = G__13474__delegate;
return G__13474;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__13480 = null;
if (arguments.length > 2) {
var G__13481__i = 0, G__13481__a = new Array(arguments.length -  2);
while (G__13481__i < G__13481__a.length) {G__13481__a[G__13481__i] = arguments[G__13481__i + 2]; ++G__13481__i;}
G__13480 = new cljs.core.IndexedSeq(G__13481__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4075__auto__ = x;
var y__4076__auto__ = y;
return ((x__4075__auto__ > y__4076__auto__) ? x__4075__auto__ : y__4076__auto__);
});
var max__3 = (function() { 
var G__13482__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4075__auto__ = x;
var y__4076__auto__ = y;
return ((x__4075__auto__ > y__4076__auto__) ? x__4075__auto__ : y__4076__auto__);
})(),more);
};
var G__13482 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13483__i = 0, G__13483__a = new Array(arguments.length -  2);
while (G__13483__i < G__13483__a.length) {G__13483__a[G__13483__i] = arguments[G__13483__i + 2]; ++G__13483__i;}
  more = new cljs.core.IndexedSeq(G__13483__a,0);
} 
return G__13482__delegate.call(this,x,y,more);};
G__13482.cljs$lang$maxFixedArity = 2;
G__13482.cljs$lang$applyTo = (function (arglist__13484){
var x = cljs.core.first(arglist__13484);
arglist__13484 = cljs.core.next(arglist__13484);
var y = cljs.core.first(arglist__13484);
var more = cljs.core.rest(arglist__13484);
return G__13482__delegate(x,y,more);
});
G__13482.cljs$core$IFn$_invoke$arity$variadic = G__13482__delegate;
return G__13482;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__13485 = null;
if (arguments.length > 2) {
var G__13486__i = 0, G__13486__a = new Array(arguments.length -  2);
while (G__13486__i < G__13486__a.length) {G__13486__a[G__13486__i] = arguments[G__13486__i + 2]; ++G__13486__i;}
G__13485 = new cljs.core.IndexedSeq(G__13486__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13485);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4082__auto__ = x;
var y__4083__auto__ = y;
return ((x__4082__auto__ < y__4083__auto__) ? x__4082__auto__ : y__4083__auto__);
});
var min__3 = (function() { 
var G__13487__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4082__auto__ = x;
var y__4083__auto__ = y;
return ((x__4082__auto__ < y__4083__auto__) ? x__4082__auto__ : y__4083__auto__);
})(),more);
};
var G__13487 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13488__i = 0, G__13488__a = new Array(arguments.length -  2);
while (G__13488__i < G__13488__a.length) {G__13488__a[G__13488__i] = arguments[G__13488__i + 2]; ++G__13488__i;}
  more = new cljs.core.IndexedSeq(G__13488__a,0);
} 
return G__13487__delegate.call(this,x,y,more);};
G__13487.cljs$lang$maxFixedArity = 2;
G__13487.cljs$lang$applyTo = (function (arglist__13489){
var x = cljs.core.first(arglist__13489);
arglist__13489 = cljs.core.next(arglist__13489);
var y = cljs.core.first(arglist__13489);
var more = cljs.core.rest(arglist__13489);
return G__13487__delegate(x,y,more);
});
G__13487.cljs$core$IFn$_invoke$arity$variadic = G__13487__delegate;
return G__13487;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__13490 = null;
if (arguments.length > 2) {
var G__13491__i = 0, G__13491__a = new Array(arguments.length -  2);
while (G__13491__i < G__13491__a.length) {G__13491__a[G__13491__i] = arguments[G__13491__i + 2]; ++G__13491__i;}
G__13490 = new cljs.core.IndexedSeq(G__13491__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__13492__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__13492 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13493__i = 0, G__13493__a = new Array(arguments.length -  2);
while (G__13493__i < G__13493__a.length) {G__13493__a[G__13493__i] = arguments[G__13493__i + 2]; ++G__13493__i;}
  more = new cljs.core.IndexedSeq(G__13493__a,0);
} 
return G__13492__delegate.call(this,x,y,more);};
G__13492.cljs$lang$maxFixedArity = 2;
G__13492.cljs$lang$applyTo = (function (arglist__13494){
var x = cljs.core.first(arglist__13494);
arglist__13494 = cljs.core.next(arglist__13494);
var y = cljs.core.first(arglist__13494);
var more = cljs.core.rest(arglist__13494);
return G__13492__delegate(x,y,more);
});
G__13492.cljs$core$IFn$_invoke$arity$variadic = G__13492__delegate;
return G__13492;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__13495 = null;
if (arguments.length > 2) {
var G__13496__i = 0, G__13496__a = new Array(arguments.length -  2);
while (G__13496__i < G__13496__a.length) {G__13496__a[G__13496__i] = arguments[G__13496__i + 2]; ++G__13496__i;}
G__13495 = new cljs.core.IndexedSeq(G__13496__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13495);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__13497__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__13497 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13498__i = 0, G__13498__a = new Array(arguments.length -  2);
while (G__13498__i < G__13498__a.length) {G__13498__a[G__13498__i] = arguments[G__13498__i + 2]; ++G__13498__i;}
  more = new cljs.core.IndexedSeq(G__13498__a,0);
} 
return G__13497__delegate.call(this,x,y,more);};
G__13497.cljs$lang$maxFixedArity = 2;
G__13497.cljs$lang$applyTo = (function (arglist__13499){
var x = cljs.core.first(arglist__13499);
arglist__13499 = cljs.core.next(arglist__13499);
var y = cljs.core.first(arglist__13499);
var more = cljs.core.rest(arglist__13499);
return G__13497__delegate(x,y,more);
});
G__13497.cljs$core$IFn$_invoke$arity$variadic = G__13497__delegate;
return G__13497;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__13500 = null;
if (arguments.length > 2) {
var G__13501__i = 0, G__13501__a = new Array(arguments.length -  2);
while (G__13501__i < G__13501__a.length) {G__13501__a[G__13501__i] = arguments[G__13501__i + 2]; ++G__13501__i;}
G__13500 = new cljs.core.IndexedSeq(G__13501__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__13506__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13506 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13507__i = 0, G__13507__a = new Array(arguments.length -  2);
while (G__13507__i < G__13507__a.length) {G__13507__a[G__13507__i] = arguments[G__13507__i + 2]; ++G__13507__i;}
  more = new cljs.core.IndexedSeq(G__13507__a,0);
} 
return G__13506__delegate.call(this,x,y,more);};
G__13506.cljs$lang$maxFixedArity = 2;
G__13506.cljs$lang$applyTo = (function (arglist__13508){
var x = cljs.core.first(arglist__13508);
arglist__13508 = cljs.core.next(arglist__13508);
var y = cljs.core.first(arglist__13508);
var more = cljs.core.rest(arglist__13508);
return G__13506__delegate(x,y,more);
});
G__13506.cljs$core$IFn$_invoke$arity$variadic = G__13506__delegate;
return G__13506;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__13509 = null;
if (arguments.length > 2) {
var G__13510__i = 0, G__13510__a = new Array(arguments.length -  2);
while (G__13510__i < G__13510__a.length) {G__13510__a[G__13510__i] = arguments[G__13510__i + 2]; ++G__13510__i;}
G__13509 = new cljs.core.IndexedSeq(G__13510__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13509);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__13511__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__13511 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13512__i = 0, G__13512__a = new Array(arguments.length -  2);
while (G__13512__i < G__13512__a.length) {G__13512__a[G__13512__i] = arguments[G__13512__i + 2]; ++G__13512__i;}
  more = new cljs.core.IndexedSeq(G__13512__a,0);
} 
return G__13511__delegate.call(this,x,y,more);};
G__13511.cljs$lang$maxFixedArity = 2;
G__13511.cljs$lang$applyTo = (function (arglist__13513){
var x = cljs.core.first(arglist__13513);
arglist__13513 = cljs.core.next(arglist__13513);
var y = cljs.core.first(arglist__13513);
var more = cljs.core.rest(arglist__13513);
return G__13511__delegate(x,y,more);
});
G__13511.cljs$core$IFn$_invoke$arity$variadic = G__13511__delegate;
return G__13511;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__13514 = null;
if (arguments.length > 2) {
var G__13515__i = 0, G__13515__a = new Array(arguments.length -  2);
while (G__13515__i < G__13515__a.length) {G__13515__a[G__13515__i] = arguments[G__13515__i + 2]; ++G__13515__i;}
G__13514 = new cljs.core.IndexedSeq(G__13515__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13514);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__13516__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__13516 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13517__i = 0, G__13517__a = new Array(arguments.length -  2);
while (G__13517__i < G__13517__a.length) {G__13517__a[G__13517__i] = arguments[G__13517__i + 2]; ++G__13517__i;}
  more = new cljs.core.IndexedSeq(G__13517__a,0);
} 
return G__13516__delegate.call(this,x,y,more);};
G__13516.cljs$lang$maxFixedArity = 2;
G__13516.cljs$lang$applyTo = (function (arglist__13518){
var x = cljs.core.first(arglist__13518);
arglist__13518 = cljs.core.next(arglist__13518);
var y = cljs.core.first(arglist__13518);
var more = cljs.core.rest(arglist__13518);
return G__13516__delegate(x,y,more);
});
G__13516.cljs$core$IFn$_invoke$arity$variadic = G__13516__delegate;
return G__13516;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__13519 = null;
if (arguments.length > 2) {
var G__13520__i = 0, G__13520__a = new Array(arguments.length -  2);
while (G__13520__i < G__13520__a.length) {G__13520__a[G__13520__i] = arguments[G__13520__i + 2]; ++G__13520__i;}
G__13519 = new cljs.core.IndexedSeq(G__13520__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__13523 = x;
var G__13524 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__13523,G__13524) : cljs.core.mod.call(null,G__13523,G__13524));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__13525__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__13525 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13526__i = 0, G__13526__a = new Array(arguments.length -  2);
while (G__13526__i < G__13526__a.length) {G__13526__a[G__13526__i] = arguments[G__13526__i + 2]; ++G__13526__i;}
  more = new cljs.core.IndexedSeq(G__13526__a,0);
} 
return G__13525__delegate.call(this,x,y,more);};
G__13525.cljs$lang$maxFixedArity = 2;
G__13525.cljs$lang$applyTo = (function (arglist__13527){
var x = cljs.core.first(arglist__13527);
arglist__13527 = cljs.core.next(arglist__13527);
var y = cljs.core.first(arglist__13527);
var more = cljs.core.rest(arglist__13527);
return G__13525__delegate(x,y,more);
});
G__13525.cljs$core$IFn$_invoke$arity$variadic = G__13525__delegate;
return G__13525;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__13528 = null;
if (arguments.length > 2) {
var G__13529__i = 0, G__13529__a = new Array(arguments.length -  2);
while (G__13529__i < G__13529__a.length) {G__13529__a[G__13529__i] = arguments[G__13529__i + 2]; ++G__13529__i;}
G__13528 = new cljs.core.IndexedSeq(G__13529__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__13530__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__13530 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13531__i = 0, G__13531__a = new Array(arguments.length -  2);
while (G__13531__i < G__13531__a.length) {G__13531__a[G__13531__i] = arguments[G__13531__i + 2]; ++G__13531__i;}
  more = new cljs.core.IndexedSeq(G__13531__a,0);
} 
return G__13530__delegate.call(this,x,y,more);};
G__13530.cljs$lang$maxFixedArity = 2;
G__13530.cljs$lang$applyTo = (function (arglist__13532){
var x = cljs.core.first(arglist__13532);
arglist__13532 = cljs.core.next(arglist__13532);
var y = cljs.core.first(arglist__13532);
var more = cljs.core.rest(arglist__13532);
return G__13530__delegate(x,y,more);
});
G__13530.cljs$core$IFn$_invoke$arity$variadic = G__13530__delegate;
return G__13530;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__13533 = null;
if (arguments.length > 2) {
var G__13534__i = 0, G__13534__a = new Array(arguments.length -  2);
while (G__13534__i < G__13534__a.length) {G__13534__a[G__13534__i] = arguments[G__13534__i + 2]; ++G__13534__i;}
G__13533 = new cljs.core.IndexedSeq(G__13534__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__13537 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13537) : Math.floor.call(null,G__13537));
} else {
var G__13538 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__13538) : Math.ceil.call(null,G__13538));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__13539__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__13539 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13540__i = 0, G__13540__a = new Array(arguments.length -  2);
while (G__13540__i < G__13540__a.length) {G__13540__a[G__13540__i] = arguments[G__13540__i + 2]; ++G__13540__i;}
  more = new cljs.core.IndexedSeq(G__13540__a,0);
} 
return G__13539__delegate.call(this,x,y,more);};
G__13539.cljs$lang$maxFixedArity = 2;
G__13539.cljs$lang$applyTo = (function (arglist__13541){
var x = cljs.core.first(arglist__13541);
arglist__13541 = cljs.core.next(arglist__13541);
var y = cljs.core.first(arglist__13541);
var more = cljs.core.rest(arglist__13541);
return G__13539__delegate(x,y,more);
});
G__13539.cljs$core$IFn$_invoke$arity$variadic = G__13539__delegate;
return G__13539;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__13542 = null;
if (arguments.length > 2) {
var G__13543__i = 0, G__13543__a = new Array(arguments.length -  2);
while (G__13543__i < G__13543__a.length) {G__13543__a[G__13543__i] = arguments[G__13543__i + 2]; ++G__13543__i;}
G__13542 = new cljs.core.IndexedSeq(G__13543__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__13544__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__13544 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13545__i = 0, G__13545__a = new Array(arguments.length -  2);
while (G__13545__i < G__13545__a.length) {G__13545__a[G__13545__i] = arguments[G__13545__i + 2]; ++G__13545__i;}
  more = new cljs.core.IndexedSeq(G__13545__a,0);
} 
return G__13544__delegate.call(this,x,y,more);};
G__13544.cljs$lang$maxFixedArity = 2;
G__13544.cljs$lang$applyTo = (function (arglist__13546){
var x = cljs.core.first(arglist__13546);
arglist__13546 = cljs.core.next(arglist__13546);
var y = cljs.core.first(arglist__13546);
var more = cljs.core.rest(arglist__13546);
return G__13544__delegate(x,y,more);
});
G__13544.cljs$core$IFn$_invoke$arity$variadic = G__13544__delegate;
return G__13544;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__13547 = null;
if (arguments.length > 2) {
var G__13548__i = 0, G__13548__a = new Array(arguments.length -  2);
while (G__13548__i < G__13548__a.length) {G__13548__a[G__13548__i] = arguments[G__13548__i + 2]; ++G__13548__i;}
G__13547 = new cljs.core.IndexedSeq(G__13548__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__13549__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__13549 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13550__i = 0, G__13550__a = new Array(arguments.length -  2);
while (G__13550__i < G__13550__a.length) {G__13550__a[G__13550__i] = arguments[G__13550__i + 2]; ++G__13550__i;}
  more = new cljs.core.IndexedSeq(G__13550__a,0);
} 
return G__13549__delegate.call(this,x,y,more);};
G__13549.cljs$lang$maxFixedArity = 2;
G__13549.cljs$lang$applyTo = (function (arglist__13551){
var x = cljs.core.first(arglist__13551);
arglist__13551 = cljs.core.next(arglist__13551);
var y = cljs.core.first(arglist__13551);
var more = cljs.core.rest(arglist__13551);
return G__13549__delegate(x,y,more);
});
G__13549.cljs$core$IFn$_invoke$arity$variadic = G__13549__delegate;
return G__13549;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__13552 = null;
if (arguments.length > 2) {
var G__13553__i = 0, G__13553__a = new Array(arguments.length -  2);
while (G__13553__i < G__13553__a.length) {G__13553__a[G__13553__i] = arguments[G__13553__i + 2]; ++G__13553__i;}
G__13552 = new cljs.core.IndexedSeq(G__13553__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__13554__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__13554 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13555__i = 0, G__13555__a = new Array(arguments.length -  2);
while (G__13555__i < G__13555__a.length) {G__13555__a[G__13555__i] = arguments[G__13555__i + 2]; ++G__13555__i;}
  more = new cljs.core.IndexedSeq(G__13555__a,0);
} 
return G__13554__delegate.call(this,x,y,more);};
G__13554.cljs$lang$maxFixedArity = 2;
G__13554.cljs$lang$applyTo = (function (arglist__13556){
var x = cljs.core.first(arglist__13556);
arglist__13556 = cljs.core.next(arglist__13556);
var y = cljs.core.first(arglist__13556);
var more = cljs.core.rest(arglist__13556);
return G__13554__delegate(x,y,more);
});
G__13554.cljs$core$IFn$_invoke$arity$variadic = G__13554__delegate;
return G__13554;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__13557 = null;
if (arguments.length > 2) {
var G__13558__i = 0, G__13558__a = new Array(arguments.length -  2);
while (G__13558__i < G__13558__a.length) {G__13558__a[G__13558__i] = arguments[G__13558__i + 2]; ++G__13558__i;}
G__13557 = new cljs.core.IndexedSeq(G__13558__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__13563__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13564 = y;
var G__13565 = cljs.core.first(more);
var G__13566 = cljs.core.next(more);
x = G__13564;
y = G__13565;
more = G__13566;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13563 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13567__i = 0, G__13567__a = new Array(arguments.length -  2);
while (G__13567__i < G__13567__a.length) {G__13567__a[G__13567__i] = arguments[G__13567__i + 2]; ++G__13567__i;}
  more = new cljs.core.IndexedSeq(G__13567__a,0);
} 
return G__13563__delegate.call(this,x,y,more);};
G__13563.cljs$lang$maxFixedArity = 2;
G__13563.cljs$lang$applyTo = (function (arglist__13568){
var x = cljs.core.first(arglist__13568);
arglist__13568 = cljs.core.next(arglist__13568);
var y = cljs.core.first(arglist__13568);
var more = cljs.core.rest(arglist__13568);
return G__13563__delegate(x,y,more);
});
G__13563.cljs$core$IFn$_invoke$arity$variadic = G__13563__delegate;
return G__13563;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__13569 = null;
if (arguments.length > 2) {
var G__13570__i = 0, G__13570__a = new Array(arguments.length -  2);
while (G__13570__i < G__13570__a.length) {G__13570__a[G__13570__i] = arguments[G__13570__i + 2]; ++G__13570__i;}
G__13569 = new cljs.core.IndexedSeq(G__13570__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__13571 = (n__$1 - (1));
var G__13572 = cljs.core.next(xs);
n__$1 = G__13571;
xs = G__13572;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__13576 = x;
return goog.string.buildString(G__13576);
}
});
var str__2 = (function() { 
var G__13577__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__13578 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__13579 = cljs.core.next(more);
sb = G__13578;
more = G__13579;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__13577 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__13580__i = 0, G__13580__a = new Array(arguments.length -  1);
while (G__13580__i < G__13580__a.length) {G__13580__a[G__13580__i] = arguments[G__13580__i + 1]; ++G__13580__i;}
  ys = new cljs.core.IndexedSeq(G__13580__a,0);
} 
return G__13577__delegate.call(this,x,ys);};
G__13577.cljs$lang$maxFixedArity = 1;
G__13577.cljs$lang$applyTo = (function (arglist__13581){
var x = cljs.core.first(arglist__13581);
var ys = cljs.core.rest(arglist__13581);
return G__13577__delegate(x,ys);
});
G__13577.cljs$core$IFn$_invoke$arity$variadic = G__13577__delegate;
return G__13577;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__13582 = null;
if (arguments.length > 1) {
var G__13583__i = 0, G__13583__a = new Array(arguments.length -  1);
while (G__13583__i < G__13583__a.length) {G__13583__a[G__13583__i] = arguments[G__13583__i + 1]; ++G__13583__i;}
G__13582 = new cljs.core.IndexedSeq(G__13583__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13582);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__13584 = cljs.core.next(xs);
var G__13585 = cljs.core.next(ys);
xs = G__13584;
ys = G__13585;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__13586 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__13587 = cljs.core.next(s);
res = G__13586;
s = G__13587;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__13592 = ((h + (cljs.core.hash((function (){var G__13590 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13590) : cljs.core.key.call(null,G__13590));
})()) ^ cljs.core.hash((function (){var G__13591 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13591) : cljs.core.val.call(null,G__13591));
})()))) % (4503599627370496));
var G__13593 = cljs.core.next(s);
h = G__13592;
s = G__13593;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__13594 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__13595 = cljs.core.next(s__$1);
h = G__13594;
s__$1 = G__13595;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__13606_13616 = cljs.core.seq(fn_map);
var chunk__13607_13617 = null;
var count__13608_13618 = (0);
var i__13609_13619 = (0);
while(true){
if((i__13609_13619 < count__13608_13618)){
var vec__13610_13620 = chunk__13607_13617.cljs$core$IIndexed$_nth$arity$2(null,i__13609_13619);
var key_name_13621 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13610_13620,(0),null);
var f_13622 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13610_13620,(1),null);
var str_name_13623 = (function (){var G__13611 = key_name_13621;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13611) : cljs.core.name.call(null,G__13611));
})();
(obj[str_name_13623] = f_13622);

var G__13624 = seq__13606_13616;
var G__13625 = chunk__13607_13617;
var G__13626 = count__13608_13618;
var G__13627 = (i__13609_13619 + (1));
seq__13606_13616 = G__13624;
chunk__13607_13617 = G__13625;
count__13608_13618 = G__13626;
i__13609_13619 = G__13627;
continue;
} else {
var temp__4126__auto___13628 = cljs.core.seq(seq__13606_13616);
if(temp__4126__auto___13628){
var seq__13606_13629__$1 = temp__4126__auto___13628;
if(cljs.core.chunked_seq_QMARK_(seq__13606_13629__$1)){
var c__4545__auto___13630 = (function (){var G__13612 = seq__13606_13629__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__13612) : cljs.core.chunk_first.call(null,G__13612));
})();
var G__13631 = (function (){var G__13613 = seq__13606_13629__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__13613) : cljs.core.chunk_rest.call(null,G__13613));
})();
var G__13632 = c__4545__auto___13630;
var G__13633 = cljs.core.count(c__4545__auto___13630);
var G__13634 = (0);
seq__13606_13616 = G__13631;
chunk__13607_13617 = G__13632;
count__13608_13618 = G__13633;
i__13609_13619 = G__13634;
continue;
} else {
var vec__13614_13635 = cljs.core.first(seq__13606_13629__$1);
var key_name_13636 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13614_13635,(0),null);
var f_13637 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13614_13635,(1),null);
var str_name_13638 = (function (){var G__13615 = key_name_13636;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13615) : cljs.core.name.call(null,G__13615));
})();
(obj[str_name_13638] = f_13637);

var G__13639 = cljs.core.next(seq__13606_13629__$1);
var G__13640 = null;
var G__13641 = (0);
var G__13642 = (0);
seq__13606_13616 = G__13639;
chunk__13607_13617 = G__13640;
count__13608_13618 = G__13641;
i__13609_13619 = G__13642;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__13644 = coll;
if(G__13644){
var bit__4439__auto__ = (G__13644.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4439__auto__) || (G__13644.cljs$core$IReversible$)){
return true;
} else {
if((!G__13644.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13644);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13644);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__13645 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__13645;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__13646 = (i - (1));
var G__13647 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__13646;
r = G__13647;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__13648__i = 0, G__13648__a = new Array(arguments.length -  0);
while (G__13648__i < G__13648__a.length) {G__13648__a[G__13648__i] = arguments[G__13648__i + 0]; ++G__13648__i;}
  xs = new cljs.core.IndexedSeq(G__13648__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__13649){
var xs = cljs.core.seq(arglist__13649);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3758__auto__ = (coll == null);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var G__13653 = coll;
if(G__13653){
var bit__4432__auto__ = (G__13653.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4432__auto__) || (G__13653.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__13655 = x;
if(G__13655){
var bit__4439__auto__ = (G__13655.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4439__auto__) || (G__13655.cljs$core$IList$)){
return true;
} else {
if((!G__13655.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13655);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13655);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3746__auto__ = cljs.core.not(a.ns);
if(and__3746__auto__){
return b.ns;
} else {
return and__3746__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__13662 = a.ns;
var G__13663 = b.ns;
return goog.array.defaultCompare(G__13662,G__13663);
})();
if(((0) === nsc)){
var G__13664 = a.name;
var G__13665 = b.name;
return goog.array.defaultCompare(G__13664,G__13665);
} else {
return nsc;
}
}
} else {
var G__13666 = a.name;
var G__13667 = b.name;
return goog.array.defaultCompare(G__13666,G__13667);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4179__auto__ = self__._hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__13669 = null;
var G__13669__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__13669__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__13669 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__13669__2.call(this,self__,coll);
case 3:
return G__13669__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13669.cljs$core$IFn$_invoke$arity$2 = G__13669__2;
G__13669.cljs$core$IFn$_invoke$arity$3 = G__13669__3;
return G__13669;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args13668){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13668)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__13671 = x;
if(G__13671){
var bit__4432__auto__ = (G__13671.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4432__auto__) || (G__13671.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__13673 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13673) : cljs.core.name.call(null,G__13673));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__13674 = ls.sval();
ls = G__13674;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__13676 = s;
if(G__13676){
var bit__4432__auto__ = (G__13676.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4432__auto__) || (G__13676.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__13677 = cljs.core.next(s__$1);
s__$1 = G__13677;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_13678 = (0);
var xs_13679 = cljs.core.seq(coll);
while(true){
if(xs_13679){
(ret[i_13678] = cljs.core.to_array(cljs.core.first(xs_13679)));

var G__13680 = (i_13678 + (1));
var G__13681 = cljs.core.next(xs_13679);
i_13678 = G__13680;
xs_13679 = G__13681;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13684 = (i + (1));
var G__13685 = cljs.core.next(s__$1);
i = G__13684;
s__$1 = G__13685;
continue;
} else {
return a;
}
break;
}
} else {
var n__4645__auto___13686 = size;
var i_13687 = (0);
while(true){
if((i_13687 < n__4645__auto___13686)){
(a[i_13687] = init_val_or_seq);

var G__13688 = (i_13687 + (1));
i_13687 = G__13688;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13691 = (i + (1));
var G__13692 = cljs.core.next(s__$1);
i = G__13691;
s__$1 = G__13692;
continue;
} else {
return a;
}
break;
}
} else {
var n__4645__auto___13693 = size;
var i_13694 = (0);
while(true){
if((i_13694 < n__4645__auto___13693)){
(a[i_13694] = init_val_or_seq);

var G__13695 = (i_13694 + (1));
i_13694 = G__13695;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13698 = (i + (1));
var G__13699 = cljs.core.next(s__$1);
i = G__13698;
s__$1 = G__13699;
continue;
} else {
return a;
}
break;
}
} else {
var n__4645__auto___13700 = size;
var i_13701 = (0);
while(true){
if((i_13701 < n__4645__auto___13700)){
(a[i_13701] = init_val_or_seq);

var G__13702 = (i_13701 + (1));
i_13701 = G__13702;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13705 = (i + (1));
var G__13706 = cljs.core.next(s__$1);
i = G__13705;
s__$1 = G__13706;
continue;
} else {
return a;
}
break;
}
} else {
var n__4645__auto___13707 = size;
var i_13708 = (0);
while(true){
if((i_13708 < n__4645__auto___13707)){
(a[i_13708] = init_val_or_seq);

var G__13709 = (i_13708 + (1));
i_13708 = G__13709;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__13710 = cljs.core.next(s__$1);
var G__13711 = (i - (1));
var G__13712 = (sum + (1));
s__$1 = G__13710;
i = G__13711;
sum = G__13712;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__13732__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__13732 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13733__i = 0, G__13733__a = new Array(arguments.length -  2);
while (G__13733__i < G__13733__a.length) {G__13733__a[G__13733__i] = arguments[G__13733__i + 2]; ++G__13733__i;}
  zs = new cljs.core.IndexedSeq(G__13733__a,0);
} 
return G__13732__delegate.call(this,x,y,zs);};
G__13732.cljs$lang$maxFixedArity = 2;
G__13732.cljs$lang$applyTo = (function (arglist__13734){
var x = cljs.core.first(arglist__13734);
arglist__13734 = cljs.core.next(arglist__13734);
var y = cljs.core.first(arglist__13734);
var zs = cljs.core.rest(arglist__13734);
return G__13732__delegate(x,y,zs);
});
G__13732.cljs$core$IFn$_invoke$arity$variadic = G__13732__delegate;
return G__13732;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__13735 = null;
if (arguments.length > 2) {
var G__13736__i = 0, G__13736__a = new Array(arguments.length -  2);
while (G__13736__i < G__13736__a.length) {G__13736__a[G__13736__i] = arguments[G__13736__i + 2]; ++G__13736__i;}
G__13735 = new cljs.core.IndexedSeq(G__13736__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__13737__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__13737 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__13738__i = 0, G__13738__a = new Array(arguments.length -  4);
while (G__13738__i < G__13738__a.length) {G__13738__a[G__13738__i] = arguments[G__13738__i + 4]; ++G__13738__i;}
  more = new cljs.core.IndexedSeq(G__13738__a,0);
} 
return G__13737__delegate.call(this,a,b,c,d,more);};
G__13737.cljs$lang$maxFixedArity = 4;
G__13737.cljs$lang$applyTo = (function (arglist__13739){
var a = cljs.core.first(arglist__13739);
arglist__13739 = cljs.core.next(arglist__13739);
var b = cljs.core.first(arglist__13739);
arglist__13739 = cljs.core.next(arglist__13739);
var c = cljs.core.first(arglist__13739);
arglist__13739 = cljs.core.next(arglist__13739);
var d = cljs.core.first(arglist__13739);
var more = cljs.core.rest(arglist__13739);
return G__13737__delegate(a,b,c,d,more);
});
G__13737.cljs$core$IFn$_invoke$arity$variadic = G__13737__delegate;
return G__13737;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__13740 = null;
if (arguments.length > 4) {
var G__13741__i = 0, G__13741__a = new Array(arguments.length -  4);
while (G__13741__i < G__13741__a.length) {G__13741__a[G__13741__i] = arguments[G__13741__i + 4]; ++G__13741__i;}
G__13740 = new cljs.core.IndexedSeq(G__13741__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__13740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__13742__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13743 = ntcoll;
var G__13744 = cljs.core.first(vals);
var G__13745 = cljs.core.next(vals);
tcoll = G__13743;
val = G__13744;
vals = G__13745;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13742 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13746__i = 0, G__13746__a = new Array(arguments.length -  2);
while (G__13746__i < G__13746__a.length) {G__13746__a[G__13746__i] = arguments[G__13746__i + 2]; ++G__13746__i;}
  vals = new cljs.core.IndexedSeq(G__13746__a,0);
} 
return G__13742__delegate.call(this,tcoll,val,vals);};
G__13742.cljs$lang$maxFixedArity = 2;
G__13742.cljs$lang$applyTo = (function (arglist__13747){
var tcoll = cljs.core.first(arglist__13747);
arglist__13747 = cljs.core.next(arglist__13747);
var val = cljs.core.first(arglist__13747);
var vals = cljs.core.rest(arglist__13747);
return G__13742__delegate(tcoll,val,vals);
});
G__13742.cljs$core$IFn$_invoke$arity$variadic = G__13742__delegate;
return G__13742;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__13748 = null;
if (arguments.length > 2) {
var G__13749__i = 0, G__13749__a = new Array(arguments.length -  2);
while (G__13749__i < G__13749__a.length) {G__13749__a[G__13749__i] = arguments[G__13749__i + 2]; ++G__13749__i;}
G__13748 = new cljs.core.IndexedSeq(G__13749__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__13750__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__13751 = ntcoll;
var G__13752 = cljs.core.first(kvs);
var G__13753 = cljs.core.second(kvs);
var G__13754 = cljs.core.nnext(kvs);
tcoll = G__13751;
key = G__13752;
val = G__13753;
kvs = G__13754;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13750 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13755__i = 0, G__13755__a = new Array(arguments.length -  3);
while (G__13755__i < G__13755__a.length) {G__13755__a[G__13755__i] = arguments[G__13755__i + 3]; ++G__13755__i;}
  kvs = new cljs.core.IndexedSeq(G__13755__a,0);
} 
return G__13750__delegate.call(this,tcoll,key,val,kvs);};
G__13750.cljs$lang$maxFixedArity = 3;
G__13750.cljs$lang$applyTo = (function (arglist__13756){
var tcoll = cljs.core.first(arglist__13756);
arglist__13756 = cljs.core.next(arglist__13756);
var key = cljs.core.first(arglist__13756);
arglist__13756 = cljs.core.next(arglist__13756);
var val = cljs.core.first(arglist__13756);
var kvs = cljs.core.rest(arglist__13756);
return G__13750__delegate(tcoll,key,val,kvs);
});
G__13750.cljs$core$IFn$_invoke$arity$variadic = G__13750__delegate;
return G__13750;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__13757 = null;
if (arguments.length > 3) {
var G__13758__i = 0, G__13758__a = new Array(arguments.length -  3);
while (G__13758__i < G__13758__a.length) {G__13758__a[G__13758__i] = arguments[G__13758__i + 3]; ++G__13758__i;}
G__13757 = new cljs.core.IndexedSeq(G__13758__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__13757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__13759__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__13760 = ntcoll;
var G__13761 = cljs.core.first(ks);
var G__13762 = cljs.core.next(ks);
tcoll = G__13760;
key = G__13761;
ks = G__13762;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13759 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13763__i = 0, G__13763__a = new Array(arguments.length -  2);
while (G__13763__i < G__13763__a.length) {G__13763__a[G__13763__i] = arguments[G__13763__i + 2]; ++G__13763__i;}
  ks = new cljs.core.IndexedSeq(G__13763__a,0);
} 
return G__13759__delegate.call(this,tcoll,key,ks);};
G__13759.cljs$lang$maxFixedArity = 2;
G__13759.cljs$lang$applyTo = (function (arglist__13764){
var tcoll = cljs.core.first(arglist__13764);
arglist__13764 = cljs.core.next(arglist__13764);
var key = cljs.core.first(arglist__13764);
var ks = cljs.core.rest(arglist__13764);
return G__13759__delegate(tcoll,key,ks);
});
G__13759.cljs$core$IFn$_invoke$arity$variadic = G__13759__delegate;
return G__13759;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__13765 = null;
if (arguments.length > 2) {
var G__13766__i = 0, G__13766__a = new Array(arguments.length -  2);
while (G__13766__i < G__13766__a.length) {G__13766__a[G__13766__i] = arguments[G__13766__i + 2]; ++G__13766__i;}
G__13765 = new cljs.core.IndexedSeq(G__13766__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__13765);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__13767__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13768 = ntcoll;
var G__13769 = cljs.core.first(vals);
var G__13770 = cljs.core.next(vals);
tcoll = G__13768;
val = G__13769;
vals = G__13770;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13767 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13771__i = 0, G__13771__a = new Array(arguments.length -  2);
while (G__13771__i < G__13771__a.length) {G__13771__a[G__13771__i] = arguments[G__13771__i + 2]; ++G__13771__i;}
  vals = new cljs.core.IndexedSeq(G__13771__a,0);
} 
return G__13767__delegate.call(this,tcoll,val,vals);};
G__13767.cljs$lang$maxFixedArity = 2;
G__13767.cljs$lang$applyTo = (function (arglist__13772){
var tcoll = cljs.core.first(arglist__13772);
arglist__13772 = cljs.core.next(arglist__13772);
var val = cljs.core.first(arglist__13772);
var vals = cljs.core.rest(arglist__13772);
return G__13767__delegate(tcoll,val,vals);
});
G__13767.cljs$core$IFn$_invoke$arity$variadic = G__13767__delegate;
return G__13767;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__13773 = null;
if (arguments.length > 2) {
var G__13774__i = 0, G__13774__a = new Array(arguments.length -  2);
while (G__13774__i < G__13774__a.length) {G__13774__a[G__13774__i] = arguments[G__13774__i + 2]; ++G__13774__i;}
G__13773 = new cljs.core.IndexedSeq(G__13774__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4689 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4689);
} else {
var G__13985 = a4689;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13985) : f.call(null,G__13985));
}
} else {
var b4690 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4689,b4690);
} else {
var G__13986 = a4689;
var G__13987 = b4690;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13986,G__13987) : f.call(null,G__13986,G__13987));
}
} else {
var c4691 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4689,b4690,c4691);
} else {
var G__13988 = a4689;
var G__13989 = b4690;
var G__13990 = c4691;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13988,G__13989,G__13990) : f.call(null,G__13988,G__13989,G__13990));
}
} else {
var d4692 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4689,b4690,c4691,d4692);
} else {
var G__13991 = a4689;
var G__13992 = b4690;
var G__13993 = c4691;
var G__13994 = d4692;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13991,G__13992,G__13993,G__13994) : f.call(null,G__13991,G__13992,G__13993,G__13994));
}
} else {
var e4693 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4689,b4690,c4691,d4692,e4693);
} else {
var G__13995 = a4689;
var G__13996 = b4690;
var G__13997 = c4691;
var G__13998 = d4692;
var G__13999 = e4693;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13995,G__13996,G__13997,G__13998,G__13999) : f.call(null,G__13995,G__13996,G__13997,G__13998,G__13999));
}
} else {
var f4694 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4689,b4690,c4691,d4692,e4693,f4694);
} else {
var G__14000 = a4689;
var G__14001 = b4690;
var G__14002 = c4691;
var G__14003 = d4692;
var G__14004 = e4693;
var G__14005 = f4694;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14000,G__14001,G__14002,G__14003,G__14004,G__14005) : f.call(null,G__14000,G__14001,G__14002,G__14003,G__14004,G__14005));
}
} else {
var g4695 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4689,b4690,c4691,d4692,e4693,f4694,g4695);
} else {
var G__14006 = a4689;
var G__14007 = b4690;
var G__14008 = c4691;
var G__14009 = d4692;
var G__14010 = e4693;
var G__14011 = f4694;
var G__14012 = g4695;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__14006,G__14007,G__14008,G__14009,G__14010,G__14011,G__14012) : f.call(null,G__14006,G__14007,G__14008,G__14009,G__14010,G__14011,G__14012));
}
} else {
var h4696 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696);
} else {
var G__14013 = a4689;
var G__14014 = b4690;
var G__14015 = c4691;
var G__14016 = d4692;
var G__14017 = e4693;
var G__14018 = f4694;
var G__14019 = g4695;
var G__14020 = h4696;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__14013,G__14014,G__14015,G__14016,G__14017,G__14018,G__14019,G__14020) : f.call(null,G__14013,G__14014,G__14015,G__14016,G__14017,G__14018,G__14019,G__14020));
}
} else {
var i4697 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697);
} else {
var G__14021 = a4689;
var G__14022 = b4690;
var G__14023 = c4691;
var G__14024 = d4692;
var G__14025 = e4693;
var G__14026 = f4694;
var G__14027 = g4695;
var G__14028 = h4696;
var G__14029 = i4697;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__14021,G__14022,G__14023,G__14024,G__14025,G__14026,G__14027,G__14028,G__14029) : f.call(null,G__14021,G__14022,G__14023,G__14024,G__14025,G__14026,G__14027,G__14028,G__14029));
}
} else {
var j4698 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698);
} else {
var G__14030 = a4689;
var G__14031 = b4690;
var G__14032 = c4691;
var G__14033 = d4692;
var G__14034 = e4693;
var G__14035 = f4694;
var G__14036 = g4695;
var G__14037 = h4696;
var G__14038 = i4697;
var G__14039 = j4698;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__14030,G__14031,G__14032,G__14033,G__14034,G__14035,G__14036,G__14037,G__14038,G__14039) : f.call(null,G__14030,G__14031,G__14032,G__14033,G__14034,G__14035,G__14036,G__14037,G__14038,G__14039));
}
} else {
var k4699 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699);
} else {
var G__14040 = a4689;
var G__14041 = b4690;
var G__14042 = c4691;
var G__14043 = d4692;
var G__14044 = e4693;
var G__14045 = f4694;
var G__14046 = g4695;
var G__14047 = h4696;
var G__14048 = i4697;
var G__14049 = j4698;
var G__14050 = k4699;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__14040,G__14041,G__14042,G__14043,G__14044,G__14045,G__14046,G__14047,G__14048,G__14049,G__14050) : f.call(null,G__14040,G__14041,G__14042,G__14043,G__14044,G__14045,G__14046,G__14047,G__14048,G__14049,G__14050));
}
} else {
var l4700 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700);
} else {
var G__14051 = a4689;
var G__14052 = b4690;
var G__14053 = c4691;
var G__14054 = d4692;
var G__14055 = e4693;
var G__14056 = f4694;
var G__14057 = g4695;
var G__14058 = h4696;
var G__14059 = i4697;
var G__14060 = j4698;
var G__14061 = k4699;
var G__14062 = l4700;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__14051,G__14052,G__14053,G__14054,G__14055,G__14056,G__14057,G__14058,G__14059,G__14060,G__14061,G__14062) : f.call(null,G__14051,G__14052,G__14053,G__14054,G__14055,G__14056,G__14057,G__14058,G__14059,G__14060,G__14061,G__14062));
}
} else {
var m4701 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700,m4701);
} else {
var G__14063 = a4689;
var G__14064 = b4690;
var G__14065 = c4691;
var G__14066 = d4692;
var G__14067 = e4693;
var G__14068 = f4694;
var G__14069 = g4695;
var G__14070 = h4696;
var G__14071 = i4697;
var G__14072 = j4698;
var G__14073 = k4699;
var G__14074 = l4700;
var G__14075 = m4701;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__14063,G__14064,G__14065,G__14066,G__14067,G__14068,G__14069,G__14070,G__14071,G__14072,G__14073,G__14074,G__14075) : f.call(null,G__14063,G__14064,G__14065,G__14066,G__14067,G__14068,G__14069,G__14070,G__14071,G__14072,G__14073,G__14074,G__14075));
}
} else {
var n4702 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700,m4701,n4702);
} else {
var G__14076 = a4689;
var G__14077 = b4690;
var G__14078 = c4691;
var G__14079 = d4692;
var G__14080 = e4693;
var G__14081 = f4694;
var G__14082 = g4695;
var G__14083 = h4696;
var G__14084 = i4697;
var G__14085 = j4698;
var G__14086 = k4699;
var G__14087 = l4700;
var G__14088 = m4701;
var G__14089 = n4702;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__14076,G__14077,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083,G__14084,G__14085,G__14086,G__14087,G__14088,G__14089) : f.call(null,G__14076,G__14077,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083,G__14084,G__14085,G__14086,G__14087,G__14088,G__14089));
}
} else {
var o4703 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700,m4701,n4702,o4703);
} else {
var G__14090 = a4689;
var G__14091 = b4690;
var G__14092 = c4691;
var G__14093 = d4692;
var G__14094 = e4693;
var G__14095 = f4694;
var G__14096 = g4695;
var G__14097 = h4696;
var G__14098 = i4697;
var G__14099 = j4698;
var G__14100 = k4699;
var G__14101 = l4700;
var G__14102 = m4701;
var G__14103 = n4702;
var G__14104 = o4703;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__14090,G__14091,G__14092,G__14093,G__14094,G__14095,G__14096,G__14097,G__14098,G__14099,G__14100,G__14101,G__14102,G__14103,G__14104) : f.call(null,G__14090,G__14091,G__14092,G__14093,G__14094,G__14095,G__14096,G__14097,G__14098,G__14099,G__14100,G__14101,G__14102,G__14103,G__14104));
}
} else {
var p4704 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700,m4701,n4702,o4703,p4704);
} else {
var G__14105 = a4689;
var G__14106 = b4690;
var G__14107 = c4691;
var G__14108 = d4692;
var G__14109 = e4693;
var G__14110 = f4694;
var G__14111 = g4695;
var G__14112 = h4696;
var G__14113 = i4697;
var G__14114 = j4698;
var G__14115 = k4699;
var G__14116 = l4700;
var G__14117 = m4701;
var G__14118 = n4702;
var G__14119 = o4703;
var G__14120 = p4704;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__14105,G__14106,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115,G__14116,G__14117,G__14118,G__14119,G__14120) : f.call(null,G__14105,G__14106,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115,G__14116,G__14117,G__14118,G__14119,G__14120));
}
} else {
var q4705 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700,m4701,n4702,o4703,p4704,q4705);
} else {
var G__14121 = a4689;
var G__14122 = b4690;
var G__14123 = c4691;
var G__14124 = d4692;
var G__14125 = e4693;
var G__14126 = f4694;
var G__14127 = g4695;
var G__14128 = h4696;
var G__14129 = i4697;
var G__14130 = j4698;
var G__14131 = k4699;
var G__14132 = l4700;
var G__14133 = m4701;
var G__14134 = n4702;
var G__14135 = o4703;
var G__14136 = p4704;
var G__14137 = q4705;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127,G__14128,G__14129,G__14130,G__14131,G__14132,G__14133,G__14134,G__14135,G__14136,G__14137) : f.call(null,G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127,G__14128,G__14129,G__14130,G__14131,G__14132,G__14133,G__14134,G__14135,G__14136,G__14137));
}
} else {
var r4706 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700,m4701,n4702,o4703,p4704,q4705,r4706);
} else {
var G__14138 = a4689;
var G__14139 = b4690;
var G__14140 = c4691;
var G__14141 = d4692;
var G__14142 = e4693;
var G__14143 = f4694;
var G__14144 = g4695;
var G__14145 = h4696;
var G__14146 = i4697;
var G__14147 = j4698;
var G__14148 = k4699;
var G__14149 = l4700;
var G__14150 = m4701;
var G__14151 = n4702;
var G__14152 = o4703;
var G__14153 = p4704;
var G__14154 = q4705;
var G__14155 = r4706;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__14138,G__14139,G__14140,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148,G__14149,G__14150,G__14151,G__14152,G__14153,G__14154,G__14155) : f.call(null,G__14138,G__14139,G__14140,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148,G__14149,G__14150,G__14151,G__14152,G__14153,G__14154,G__14155));
}
} else {
var s4707 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700,m4701,n4702,o4703,p4704,q4705,r4706,s4707);
} else {
var G__14156 = a4689;
var G__14157 = b4690;
var G__14158 = c4691;
var G__14159 = d4692;
var G__14160 = e4693;
var G__14161 = f4694;
var G__14162 = g4695;
var G__14163 = h4696;
var G__14164 = i4697;
var G__14165 = j4698;
var G__14166 = k4699;
var G__14167 = l4700;
var G__14168 = m4701;
var G__14169 = n4702;
var G__14170 = o4703;
var G__14171 = p4704;
var G__14172 = q4705;
var G__14173 = r4706;
var G__14174 = s4707;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164,G__14165,G__14166,G__14167,G__14168,G__14169,G__14170,G__14171,G__14172,G__14173,G__14174) : f.call(null,G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164,G__14165,G__14166,G__14167,G__14168,G__14169,G__14170,G__14171,G__14172,G__14173,G__14174));
}
} else {
var t4708 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4689,b4690,c4691,d4692,e4693,f4694,g4695,h4696,i4697,j4698,k4699,l4700,m4701,n4702,o4703,p4704,q4705,r4706,s4707,t4708);
} else {
var G__14175 = a4689;
var G__14176 = b4690;
var G__14177 = c4691;
var G__14178 = d4692;
var G__14179 = e4693;
var G__14180 = f4694;
var G__14181 = g4695;
var G__14182 = h4696;
var G__14183 = i4697;
var G__14184 = j4698;
var G__14185 = k4699;
var G__14186 = l4700;
var G__14187 = m4701;
var G__14188 = n4702;
var G__14189 = o4703;
var G__14190 = p4704;
var G__14191 = q4705;
var G__14192 = r4706;
var G__14193 = s4707;
var G__14194 = t4708;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181,G__14182,G__14183,G__14184,G__14185,G__14186,G__14187,G__14188,G__14189,G__14190,G__14191,G__14192,G__14193,G__14194) : f.call(null,G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181,G__14182,G__14183,G__14184,G__14185,G__14186,G__14187,G__14188,G__14189,G__14190,G__14191,G__14192,G__14193,G__14194));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__14195__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__14195 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__14196__i = 0, G__14196__a = new Array(arguments.length -  5);
while (G__14196__i < G__14196__a.length) {G__14196__a[G__14196__i] = arguments[G__14196__i + 5]; ++G__14196__i;}
  args = new cljs.core.IndexedSeq(G__14196__a,0);
} 
return G__14195__delegate.call(this,f,a,b,c,d,args);};
G__14195.cljs$lang$maxFixedArity = 5;
G__14195.cljs$lang$applyTo = (function (arglist__14197){
var f = cljs.core.first(arglist__14197);
arglist__14197 = cljs.core.next(arglist__14197);
var a = cljs.core.first(arglist__14197);
arglist__14197 = cljs.core.next(arglist__14197);
var b = cljs.core.first(arglist__14197);
arglist__14197 = cljs.core.next(arglist__14197);
var c = cljs.core.first(arglist__14197);
arglist__14197 = cljs.core.next(arglist__14197);
var d = cljs.core.first(arglist__14197);
var args = cljs.core.rest(arglist__14197);
return G__14195__delegate(f,a,b,c,d,args);
});
G__14195.cljs$core$IFn$_invoke$arity$variadic = G__14195__delegate;
return G__14195;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__14198 = null;
if (arguments.length > 5) {
var G__14199__i = 0, G__14199__a = new Array(arguments.length -  5);
while (G__14199__i < G__14199__a.length) {G__14199__a[G__14199__i] = arguments[G__14199__i + 5]; ++G__14199__i;}
G__14198 = new cljs.core.IndexedSeq(G__14199__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__14198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__14215 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14215) : f.call(null,G__14215));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__14216 = cljs.core.meta(obj);
var G__14217 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14216,G__14217) : f.call(null,G__14216,G__14217));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__14218 = cljs.core.meta(obj);
var G__14219 = a;
var G__14220 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14218,G__14219,G__14220) : f.call(null,G__14218,G__14219,G__14220));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__14221 = cljs.core.meta(obj);
var G__14222 = a;
var G__14223 = b;
var G__14224 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14221,G__14222,G__14223,G__14224) : f.call(null,G__14221,G__14222,G__14223,G__14224));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__14225 = cljs.core.meta(obj);
var G__14226 = a;
var G__14227 = b;
var G__14228 = c;
var G__14229 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14225,G__14226,G__14227,G__14228,G__14229) : f.call(null,G__14225,G__14226,G__14227,G__14228,G__14229));
})());
});
var vary_meta__7 = (function() { 
var G__14230__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__14230 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__14231__i = 0, G__14231__a = new Array(arguments.length -  6);
while (G__14231__i < G__14231__a.length) {G__14231__a[G__14231__i] = arguments[G__14231__i + 6]; ++G__14231__i;}
  args = new cljs.core.IndexedSeq(G__14231__a,0);
} 
return G__14230__delegate.call(this,obj,f,a,b,c,d,args);};
G__14230.cljs$lang$maxFixedArity = 6;
G__14230.cljs$lang$applyTo = (function (arglist__14232){
var obj = cljs.core.first(arglist__14232);
arglist__14232 = cljs.core.next(arglist__14232);
var f = cljs.core.first(arglist__14232);
arglist__14232 = cljs.core.next(arglist__14232);
var a = cljs.core.first(arglist__14232);
arglist__14232 = cljs.core.next(arglist__14232);
var b = cljs.core.first(arglist__14232);
arglist__14232 = cljs.core.next(arglist__14232);
var c = cljs.core.first(arglist__14232);
arglist__14232 = cljs.core.next(arglist__14232);
var d = cljs.core.first(arglist__14232);
var args = cljs.core.rest(arglist__14232);
return G__14230__delegate(obj,f,a,b,c,d,args);
});
G__14230.cljs$core$IFn$_invoke$arity$variadic = G__14230__delegate;
return G__14230;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__14233 = null;
if (arguments.length > 6) {
var G__14234__i = 0, G__14234__a = new Array(arguments.length -  6);
while (G__14234__i < G__14234__a.length) {G__14234__a[G__14234__i] = arguments[G__14234__i + 6]; ++G__14234__i;}
G__14233 = new cljs.core.IndexedSeq(G__14234__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__14233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__14235__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__14235 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14236__i = 0, G__14236__a = new Array(arguments.length -  2);
while (G__14236__i < G__14236__a.length) {G__14236__a[G__14236__i] = arguments[G__14236__i + 2]; ++G__14236__i;}
  more = new cljs.core.IndexedSeq(G__14236__a,0);
} 
return G__14235__delegate.call(this,x,y,more);};
G__14235.cljs$lang$maxFixedArity = 2;
G__14235.cljs$lang$applyTo = (function (arglist__14237){
var x = cljs.core.first(arglist__14237);
arglist__14237 = cljs.core.next(arglist__14237);
var y = cljs.core.first(arglist__14237);
var more = cljs.core.rest(arglist__14237);
return G__14235__delegate(x,y,more);
});
G__14235.cljs$core$IFn$_invoke$arity$variadic = G__14235__delegate;
return G__14235;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__14238 = null;
if (arguments.length > 2) {
var G__14239__i = 0, G__14239__a = new Array(arguments.length -  2);
while (G__14239__i < G__14239__a.length) {G__14239__a[G__14239__i] = arguments[G__14239__i + 2]; ++G__14239__i;}
G__14238 = new cljs.core.IndexedSeq(G__14239__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14238);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t14243 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t14243 = (function (nil_iter,meta14244){
this.nil_iter = nil_iter;
this.meta14244 = meta14244;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t14243.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t14243.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t14243.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t14243.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_14245){
var self__ = this;
var _14245__$1 = this;
return self__.meta14244;
});

cljs.core.t14243.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_14245,meta14244__$1){
var self__ = this;
var _14245__$1 = this;
return (new cljs.core.t14243(self__.nil_iter,meta14244__$1));
});

cljs.core.t14243.cljs$lang$type = true;

cljs.core.t14243.cljs$lang$ctorStr = "cljs.core/t14243";

cljs.core.t14243.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/t14243");
});

cljs.core.__GT_t14243 = (function __GT_t14243(nil_iter__$1,meta14244){
return (new cljs.core.t14243(nil_iter__$1,meta14244));
});

}

return (new cljs.core.t14243(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/lucas/Scripture/lokate/resources/public/js/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3746__auto__ = !((lt.stepper == null));
if(and__3746__auto__){
return self__.iter.hasNext();
} else {
return and__3746__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__14246 = lt;
var G__14247 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__14246,G__14247) : self__.xform.call(null,G__14246,G__14247));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14248 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14248) : self__.xform.call(null,G__14248));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__14250 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14250) : xform.call(null,G__14250));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__14252 = cljs.core.next(iters__$1);
iters__$1 = G__14252;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4645__auto___14253 = self__.iters.length;
var i_14254 = (0);
while(true){
if((i_14254 < n__4645__auto___14253)){
(self__.nexts[i_14254] = (self__.iters[i_14254]).next());

var G__14255 = (i_14254 + (1));
i_14254 = G__14255;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3746__auto__ = !((lt.stepper == null));
if(and__3746__auto__){
return this$.hasNext();
} else {
return and__3746__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14251 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14251) : self__.xform.call(null,G__14251));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__14260 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14260) : xform.call(null,G__14260));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__14261_14265 = cljs.core.seq(colls);
var chunk__14262_14266 = null;
var count__14263_14267 = (0);
var i__14264_14268 = (0);
while(true){
if((i__14264_14268 < count__14263_14267)){
var coll_14269 = chunk__14262_14266.cljs$core$IIndexed$_nth$arity$2(null,i__14264_14268);
iters.push(cljs.core.iter(coll_14269));

var G__14270 = seq__14261_14265;
var G__14271 = chunk__14262_14266;
var G__14272 = count__14263_14267;
var G__14273 = (i__14264_14268 + (1));
seq__14261_14265 = G__14270;
chunk__14262_14266 = G__14271;
count__14263_14267 = G__14272;
i__14264_14268 = G__14273;
continue;
} else {
var temp__4126__auto___14274 = cljs.core.seq(seq__14261_14265);
if(temp__4126__auto___14274){
var seq__14261_14275__$1 = temp__4126__auto___14274;
if(cljs.core.chunked_seq_QMARK_(seq__14261_14275__$1)){
var c__4545__auto___14276 = cljs.core.chunk_first(seq__14261_14275__$1);
var G__14277 = cljs.core.chunk_rest(seq__14261_14275__$1);
var G__14278 = c__4545__auto___14276;
var G__14279 = cljs.core.count(c__4545__auto___14276);
var G__14280 = (0);
seq__14261_14265 = G__14277;
chunk__14262_14266 = G__14278;
count__14263_14267 = G__14279;
i__14264_14268 = G__14280;
continue;
} else {
var coll_14281 = cljs.core.first(seq__14261_14275__$1);
iters.push(cljs.core.iter(coll_14281));

var G__14282 = cljs.core.next(seq__14261_14275__$1);
var G__14283 = null;
var G__14284 = (0);
var G__14285 = (0);
seq__14261_14265 = G__14282;
chunk__14262_14266 = G__14283;
count__14263_14267 = G__14284;
i__14264_14268 = G__14285;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3758__auto__ = cljs.core.seq(coll);
if(or__3758__auto__){
return or__3758__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__14286__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__14286 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14287__i = 0, G__14287__a = new Array(arguments.length -  2);
while (G__14287__i < G__14287__a.length) {G__14287__a[G__14287__i] = arguments[G__14287__i + 2]; ++G__14287__i;}
  colls = new cljs.core.IndexedSeq(G__14287__a,0);
} 
return G__14286__delegate.call(this,xform,coll,colls);};
G__14286.cljs$lang$maxFixedArity = 2;
G__14286.cljs$lang$applyTo = (function (arglist__14288){
var xform = cljs.core.first(arglist__14288);
arglist__14288 = cljs.core.next(arglist__14288);
var coll = cljs.core.first(arglist__14288);
var colls = cljs.core.rest(arglist__14288);
return G__14286__delegate(xform,coll,colls);
});
G__14286.cljs$core$IFn$_invoke$arity$variadic = G__14286__delegate;
return G__14286;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__14289 = null;
if (arguments.length > 2) {
var G__14290__i = 0, G__14290__a = new Array(arguments.length -  2);
while (G__14290__i < G__14290__a.length) {G__14290__a[G__14290__i] = arguments[G__14290__i + 2]; ++G__14290__i;}
G__14289 = new cljs.core.IndexedSeq(G__14290__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__14289);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__14292 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14292) : pred.call(null,G__14292));
})())){
var G__14293 = pred;
var G__14294 = cljs.core.next(coll);
pred = G__14293;
coll = G__14294;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3758__auto__ = (function (){var G__14298 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14298) : pred.call(null,G__14298));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var G__14299 = pred;
var G__14300 = cljs.core.next(coll);
pred = G__14299;
coll = G__14300;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__14307 = null;
var G__14307__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__14307__1 = (function (x){
return cljs.core.not((function (){var G__14304 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14304) : f.call(null,G__14304));
})());
});
var G__14307__2 = (function (x,y){
return cljs.core.not((function (){var G__14305 = x;
var G__14306 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14305,G__14306) : f.call(null,G__14305,G__14306));
})());
});
var G__14307__3 = (function() { 
var G__14308__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__14308 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14309__i = 0, G__14309__a = new Array(arguments.length -  2);
while (G__14309__i < G__14309__a.length) {G__14309__a[G__14309__i] = arguments[G__14309__i + 2]; ++G__14309__i;}
  zs = new cljs.core.IndexedSeq(G__14309__a,0);
} 
return G__14308__delegate.call(this,x,y,zs);};
G__14308.cljs$lang$maxFixedArity = 2;
G__14308.cljs$lang$applyTo = (function (arglist__14310){
var x = cljs.core.first(arglist__14310);
arglist__14310 = cljs.core.next(arglist__14310);
var y = cljs.core.first(arglist__14310);
var zs = cljs.core.rest(arglist__14310);
return G__14308__delegate(x,y,zs);
});
G__14308.cljs$core$IFn$_invoke$arity$variadic = G__14308__delegate;
return G__14308;
})()
;
G__14307 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__14307__0.call(this);
case 1:
return G__14307__1.call(this,x);
case 2:
return G__14307__2.call(this,x,y);
default:
var G__14311 = null;
if (arguments.length > 2) {
var G__14312__i = 0, G__14312__a = new Array(arguments.length -  2);
while (G__14312__i < G__14312__a.length) {G__14312__a[G__14312__i] = arguments[G__14312__i + 2]; ++G__14312__i;}
G__14311 = new cljs.core.IndexedSeq(G__14312__a,0);
}
return G__14307__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14311);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14307.cljs$lang$maxFixedArity = 2;
G__14307.cljs$lang$applyTo = G__14307__3.cljs$lang$applyTo;
G__14307.cljs$core$IFn$_invoke$arity$0 = G__14307__0;
G__14307.cljs$core$IFn$_invoke$arity$1 = G__14307__1;
G__14307.cljs$core$IFn$_invoke$arity$2 = G__14307__2;
G__14307.cljs$core$IFn$_invoke$arity$variadic = G__14307__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14307;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__14313__delegate = function (args){
return x;
};
var G__14313 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14314__i = 0, G__14314__a = new Array(arguments.length -  0);
while (G__14314__i < G__14314__a.length) {G__14314__a[G__14314__i] = arguments[G__14314__i + 0]; ++G__14314__i;}
  args = new cljs.core.IndexedSeq(G__14314__a,0);
} 
return G__14313__delegate.call(this,args);};
G__14313.cljs$lang$maxFixedArity = 0;
G__14313.cljs$lang$applyTo = (function (arglist__14315){
var args = cljs.core.seq(arglist__14315);
return G__14313__delegate(args);
});
G__14313.cljs$core$IFn$_invoke$arity$variadic = G__14313__delegate;
return G__14313;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__14370 = null;
var G__14370__0 = (function (){
var G__14343 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14343) : f.call(null,G__14343));
});
var G__14370__1 = (function (x){
var G__14344 = (function (){var G__14345 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14345) : g.call(null,G__14345));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14344) : f.call(null,G__14344));
});
var G__14370__2 = (function (x,y){
var G__14346 = (function (){var G__14347 = x;
var G__14348 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14347,G__14348) : g.call(null,G__14347,G__14348));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14346) : f.call(null,G__14346));
});
var G__14370__3 = (function (x,y,z){
var G__14349 = (function (){var G__14350 = x;
var G__14351 = y;
var G__14352 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14350,G__14351,G__14352) : g.call(null,G__14350,G__14351,G__14352));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14349) : f.call(null,G__14349));
});
var G__14370__4 = (function() { 
var G__14371__delegate = function (x,y,z,args){
var G__14353 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14353) : f.call(null,G__14353));
};
var G__14371 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14372__i = 0, G__14372__a = new Array(arguments.length -  3);
while (G__14372__i < G__14372__a.length) {G__14372__a[G__14372__i] = arguments[G__14372__i + 3]; ++G__14372__i;}
  args = new cljs.core.IndexedSeq(G__14372__a,0);
} 
return G__14371__delegate.call(this,x,y,z,args);};
G__14371.cljs$lang$maxFixedArity = 3;
G__14371.cljs$lang$applyTo = (function (arglist__14373){
var x = cljs.core.first(arglist__14373);
arglist__14373 = cljs.core.next(arglist__14373);
var y = cljs.core.first(arglist__14373);
arglist__14373 = cljs.core.next(arglist__14373);
var z = cljs.core.first(arglist__14373);
var args = cljs.core.rest(arglist__14373);
return G__14371__delegate(x,y,z,args);
});
G__14371.cljs$core$IFn$_invoke$arity$variadic = G__14371__delegate;
return G__14371;
})()
;
G__14370 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14370__0.call(this);
case 1:
return G__14370__1.call(this,x);
case 2:
return G__14370__2.call(this,x,y);
case 3:
return G__14370__3.call(this,x,y,z);
default:
var G__14374 = null;
if (arguments.length > 3) {
var G__14375__i = 0, G__14375__a = new Array(arguments.length -  3);
while (G__14375__i < G__14375__a.length) {G__14375__a[G__14375__i] = arguments[G__14375__i + 3]; ++G__14375__i;}
G__14374 = new cljs.core.IndexedSeq(G__14375__a,0);
}
return G__14370__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14370.cljs$lang$maxFixedArity = 3;
G__14370.cljs$lang$applyTo = G__14370__4.cljs$lang$applyTo;
G__14370.cljs$core$IFn$_invoke$arity$0 = G__14370__0;
G__14370.cljs$core$IFn$_invoke$arity$1 = G__14370__1;
G__14370.cljs$core$IFn$_invoke$arity$2 = G__14370__2;
G__14370.cljs$core$IFn$_invoke$arity$3 = G__14370__3;
G__14370.cljs$core$IFn$_invoke$arity$variadic = G__14370__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14370;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__14376 = null;
var G__14376__0 = (function (){
var G__14354 = (function (){var G__14355 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14355) : g.call(null,G__14355));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14354) : f.call(null,G__14354));
});
var G__14376__1 = (function (x){
var G__14356 = (function (){var G__14357 = (function (){var G__14358 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14358) : h.call(null,G__14358));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14357) : g.call(null,G__14357));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14356) : f.call(null,G__14356));
});
var G__14376__2 = (function (x,y){
var G__14359 = (function (){var G__14360 = (function (){var G__14361 = x;
var G__14362 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14361,G__14362) : h.call(null,G__14361,G__14362));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14360) : g.call(null,G__14360));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14359) : f.call(null,G__14359));
});
var G__14376__3 = (function (x,y,z){
var G__14363 = (function (){var G__14364 = (function (){var G__14365 = x;
var G__14366 = y;
var G__14367 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14365,G__14366,G__14367) : h.call(null,G__14365,G__14366,G__14367));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14364) : g.call(null,G__14364));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14363) : f.call(null,G__14363));
});
var G__14376__4 = (function() { 
var G__14377__delegate = function (x,y,z,args){
var G__14368 = (function (){var G__14369 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14369) : g.call(null,G__14369));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14368) : f.call(null,G__14368));
};
var G__14377 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14378__i = 0, G__14378__a = new Array(arguments.length -  3);
while (G__14378__i < G__14378__a.length) {G__14378__a[G__14378__i] = arguments[G__14378__i + 3]; ++G__14378__i;}
  args = new cljs.core.IndexedSeq(G__14378__a,0);
} 
return G__14377__delegate.call(this,x,y,z,args);};
G__14377.cljs$lang$maxFixedArity = 3;
G__14377.cljs$lang$applyTo = (function (arglist__14379){
var x = cljs.core.first(arglist__14379);
arglist__14379 = cljs.core.next(arglist__14379);
var y = cljs.core.first(arglist__14379);
arglist__14379 = cljs.core.next(arglist__14379);
var z = cljs.core.first(arglist__14379);
var args = cljs.core.rest(arglist__14379);
return G__14377__delegate(x,y,z,args);
});
G__14377.cljs$core$IFn$_invoke$arity$variadic = G__14377__delegate;
return G__14377;
})()
;
G__14376 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14376__0.call(this);
case 1:
return G__14376__1.call(this,x);
case 2:
return G__14376__2.call(this,x,y);
case 3:
return G__14376__3.call(this,x,y,z);
default:
var G__14380 = null;
if (arguments.length > 3) {
var G__14381__i = 0, G__14381__a = new Array(arguments.length -  3);
while (G__14381__i < G__14381__a.length) {G__14381__a[G__14381__i] = arguments[G__14381__i + 3]; ++G__14381__i;}
G__14380 = new cljs.core.IndexedSeq(G__14381__a,0);
}
return G__14376__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14380);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14376.cljs$lang$maxFixedArity = 3;
G__14376.cljs$lang$applyTo = G__14376__4.cljs$lang$applyTo;
G__14376.cljs$core$IFn$_invoke$arity$0 = G__14376__0;
G__14376.cljs$core$IFn$_invoke$arity$1 = G__14376__1;
G__14376.cljs$core$IFn$_invoke$arity$2 = G__14376__2;
G__14376.cljs$core$IFn$_invoke$arity$3 = G__14376__3;
G__14376.cljs$core$IFn$_invoke$arity$variadic = G__14376__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14376;
})()
});
var comp__4 = (function() { 
var G__14382__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__14383__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__14384 = cljs.core.first(fs__$2).call(null,ret);
var G__14385 = cljs.core.next(fs__$2);
ret = G__14384;
fs__$2 = G__14385;
continue;
} else {
return ret;
}
break;
}
};
var G__14383 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14386__i = 0, G__14386__a = new Array(arguments.length -  0);
while (G__14386__i < G__14386__a.length) {G__14386__a[G__14386__i] = arguments[G__14386__i + 0]; ++G__14386__i;}
  args = new cljs.core.IndexedSeq(G__14386__a,0);
} 
return G__14383__delegate.call(this,args);};
G__14383.cljs$lang$maxFixedArity = 0;
G__14383.cljs$lang$applyTo = (function (arglist__14387){
var args = cljs.core.seq(arglist__14387);
return G__14383__delegate(args);
});
G__14383.cljs$core$IFn$_invoke$arity$variadic = G__14383__delegate;
return G__14383;
})()
;
;})(fs__$1))
};
var G__14382 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__14388__i = 0, G__14388__a = new Array(arguments.length -  3);
while (G__14388__i < G__14388__a.length) {G__14388__a[G__14388__i] = arguments[G__14388__i + 3]; ++G__14388__i;}
  fs = new cljs.core.IndexedSeq(G__14388__a,0);
} 
return G__14382__delegate.call(this,f1,f2,f3,fs);};
G__14382.cljs$lang$maxFixedArity = 3;
G__14382.cljs$lang$applyTo = (function (arglist__14389){
var f1 = cljs.core.first(arglist__14389);
arglist__14389 = cljs.core.next(arglist__14389);
var f2 = cljs.core.first(arglist__14389);
arglist__14389 = cljs.core.next(arglist__14389);
var f3 = cljs.core.first(arglist__14389);
var fs = cljs.core.rest(arglist__14389);
return G__14382__delegate(f1,f2,f3,fs);
});
G__14382.cljs$core$IFn$_invoke$arity$variadic = G__14382__delegate;
return G__14382;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__14390 = null;
if (arguments.length > 3) {
var G__14391__i = 0, G__14391__a = new Array(arguments.length -  3);
while (G__14391__i < G__14391__a.length) {G__14391__a[G__14391__i] = arguments[G__14391__i + 3]; ++G__14391__i;}
G__14390 = new cljs.core.IndexedSeq(G__14391__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__14390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__14476 = null;
var G__14476__0 = (function (){
var G__14434 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14434) : f.call(null,G__14434));
});
var G__14476__1 = (function (x){
var G__14435 = arg1;
var G__14436 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14435,G__14436) : f.call(null,G__14435,G__14436));
});
var G__14476__2 = (function (x,y){
var G__14437 = arg1;
var G__14438 = x;
var G__14439 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14437,G__14438,G__14439) : f.call(null,G__14437,G__14438,G__14439));
});
var G__14476__3 = (function (x,y,z){
var G__14440 = arg1;
var G__14441 = x;
var G__14442 = y;
var G__14443 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14440,G__14441,G__14442,G__14443) : f.call(null,G__14440,G__14441,G__14442,G__14443));
});
var G__14476__4 = (function() { 
var G__14477__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__14477 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14478__i = 0, G__14478__a = new Array(arguments.length -  3);
while (G__14478__i < G__14478__a.length) {G__14478__a[G__14478__i] = arguments[G__14478__i + 3]; ++G__14478__i;}
  args = new cljs.core.IndexedSeq(G__14478__a,0);
} 
return G__14477__delegate.call(this,x,y,z,args);};
G__14477.cljs$lang$maxFixedArity = 3;
G__14477.cljs$lang$applyTo = (function (arglist__14479){
var x = cljs.core.first(arglist__14479);
arglist__14479 = cljs.core.next(arglist__14479);
var y = cljs.core.first(arglist__14479);
arglist__14479 = cljs.core.next(arglist__14479);
var z = cljs.core.first(arglist__14479);
var args = cljs.core.rest(arglist__14479);
return G__14477__delegate(x,y,z,args);
});
G__14477.cljs$core$IFn$_invoke$arity$variadic = G__14477__delegate;
return G__14477;
})()
;
G__14476 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14476__0.call(this);
case 1:
return G__14476__1.call(this,x);
case 2:
return G__14476__2.call(this,x,y);
case 3:
return G__14476__3.call(this,x,y,z);
default:
var G__14480 = null;
if (arguments.length > 3) {
var G__14481__i = 0, G__14481__a = new Array(arguments.length -  3);
while (G__14481__i < G__14481__a.length) {G__14481__a[G__14481__i] = arguments[G__14481__i + 3]; ++G__14481__i;}
G__14480 = new cljs.core.IndexedSeq(G__14481__a,0);
}
return G__14476__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14476.cljs$lang$maxFixedArity = 3;
G__14476.cljs$lang$applyTo = G__14476__4.cljs$lang$applyTo;
G__14476.cljs$core$IFn$_invoke$arity$0 = G__14476__0;
G__14476.cljs$core$IFn$_invoke$arity$1 = G__14476__1;
G__14476.cljs$core$IFn$_invoke$arity$2 = G__14476__2;
G__14476.cljs$core$IFn$_invoke$arity$3 = G__14476__3;
G__14476.cljs$core$IFn$_invoke$arity$variadic = G__14476__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14476;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__14482 = null;
var G__14482__0 = (function (){
var G__14444 = arg1;
var G__14445 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14444,G__14445) : f.call(null,G__14444,G__14445));
});
var G__14482__1 = (function (x){
var G__14446 = arg1;
var G__14447 = arg2;
var G__14448 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14446,G__14447,G__14448) : f.call(null,G__14446,G__14447,G__14448));
});
var G__14482__2 = (function (x,y){
var G__14449 = arg1;
var G__14450 = arg2;
var G__14451 = x;
var G__14452 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14449,G__14450,G__14451,G__14452) : f.call(null,G__14449,G__14450,G__14451,G__14452));
});
var G__14482__3 = (function (x,y,z){
var G__14453 = arg1;
var G__14454 = arg2;
var G__14455 = x;
var G__14456 = y;
var G__14457 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14453,G__14454,G__14455,G__14456,G__14457) : f.call(null,G__14453,G__14454,G__14455,G__14456,G__14457));
});
var G__14482__4 = (function() { 
var G__14483__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__14483 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14484__i = 0, G__14484__a = new Array(arguments.length -  3);
while (G__14484__i < G__14484__a.length) {G__14484__a[G__14484__i] = arguments[G__14484__i + 3]; ++G__14484__i;}
  args = new cljs.core.IndexedSeq(G__14484__a,0);
} 
return G__14483__delegate.call(this,x,y,z,args);};
G__14483.cljs$lang$maxFixedArity = 3;
G__14483.cljs$lang$applyTo = (function (arglist__14485){
var x = cljs.core.first(arglist__14485);
arglist__14485 = cljs.core.next(arglist__14485);
var y = cljs.core.first(arglist__14485);
arglist__14485 = cljs.core.next(arglist__14485);
var z = cljs.core.first(arglist__14485);
var args = cljs.core.rest(arglist__14485);
return G__14483__delegate(x,y,z,args);
});
G__14483.cljs$core$IFn$_invoke$arity$variadic = G__14483__delegate;
return G__14483;
})()
;
G__14482 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14482__0.call(this);
case 1:
return G__14482__1.call(this,x);
case 2:
return G__14482__2.call(this,x,y);
case 3:
return G__14482__3.call(this,x,y,z);
default:
var G__14486 = null;
if (arguments.length > 3) {
var G__14487__i = 0, G__14487__a = new Array(arguments.length -  3);
while (G__14487__i < G__14487__a.length) {G__14487__a[G__14487__i] = arguments[G__14487__i + 3]; ++G__14487__i;}
G__14486 = new cljs.core.IndexedSeq(G__14487__a,0);
}
return G__14482__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14482.cljs$lang$maxFixedArity = 3;
G__14482.cljs$lang$applyTo = G__14482__4.cljs$lang$applyTo;
G__14482.cljs$core$IFn$_invoke$arity$0 = G__14482__0;
G__14482.cljs$core$IFn$_invoke$arity$1 = G__14482__1;
G__14482.cljs$core$IFn$_invoke$arity$2 = G__14482__2;
G__14482.cljs$core$IFn$_invoke$arity$3 = G__14482__3;
G__14482.cljs$core$IFn$_invoke$arity$variadic = G__14482__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14482;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__14488 = null;
var G__14488__0 = (function (){
var G__14458 = arg1;
var G__14459 = arg2;
var G__14460 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14458,G__14459,G__14460) : f.call(null,G__14458,G__14459,G__14460));
});
var G__14488__1 = (function (x){
var G__14461 = arg1;
var G__14462 = arg2;
var G__14463 = arg3;
var G__14464 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14461,G__14462,G__14463,G__14464) : f.call(null,G__14461,G__14462,G__14463,G__14464));
});
var G__14488__2 = (function (x,y){
var G__14465 = arg1;
var G__14466 = arg2;
var G__14467 = arg3;
var G__14468 = x;
var G__14469 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14465,G__14466,G__14467,G__14468,G__14469) : f.call(null,G__14465,G__14466,G__14467,G__14468,G__14469));
});
var G__14488__3 = (function (x,y,z){
var G__14470 = arg1;
var G__14471 = arg2;
var G__14472 = arg3;
var G__14473 = x;
var G__14474 = y;
var G__14475 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14470,G__14471,G__14472,G__14473,G__14474,G__14475) : f.call(null,G__14470,G__14471,G__14472,G__14473,G__14474,G__14475));
});
var G__14488__4 = (function() { 
var G__14489__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__14489 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14490__i = 0, G__14490__a = new Array(arguments.length -  3);
while (G__14490__i < G__14490__a.length) {G__14490__a[G__14490__i] = arguments[G__14490__i + 3]; ++G__14490__i;}
  args = new cljs.core.IndexedSeq(G__14490__a,0);
} 
return G__14489__delegate.call(this,x,y,z,args);};
G__14489.cljs$lang$maxFixedArity = 3;
G__14489.cljs$lang$applyTo = (function (arglist__14491){
var x = cljs.core.first(arglist__14491);
arglist__14491 = cljs.core.next(arglist__14491);
var y = cljs.core.first(arglist__14491);
arglist__14491 = cljs.core.next(arglist__14491);
var z = cljs.core.first(arglist__14491);
var args = cljs.core.rest(arglist__14491);
return G__14489__delegate(x,y,z,args);
});
G__14489.cljs$core$IFn$_invoke$arity$variadic = G__14489__delegate;
return G__14489;
})()
;
G__14488 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14488__0.call(this);
case 1:
return G__14488__1.call(this,x);
case 2:
return G__14488__2.call(this,x,y);
case 3:
return G__14488__3.call(this,x,y,z);
default:
var G__14492 = null;
if (arguments.length > 3) {
var G__14493__i = 0, G__14493__a = new Array(arguments.length -  3);
while (G__14493__i < G__14493__a.length) {G__14493__a[G__14493__i] = arguments[G__14493__i + 3]; ++G__14493__i;}
G__14492 = new cljs.core.IndexedSeq(G__14493__a,0);
}
return G__14488__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14488.cljs$lang$maxFixedArity = 3;
G__14488.cljs$lang$applyTo = G__14488__4.cljs$lang$applyTo;
G__14488.cljs$core$IFn$_invoke$arity$0 = G__14488__0;
G__14488.cljs$core$IFn$_invoke$arity$1 = G__14488__1;
G__14488.cljs$core$IFn$_invoke$arity$2 = G__14488__2;
G__14488.cljs$core$IFn$_invoke$arity$3 = G__14488__3;
G__14488.cljs$core$IFn$_invoke$arity$variadic = G__14488__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14488;
})()
});
var partial__5 = (function() { 
var G__14494__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__14495__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__14495 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14496__i = 0, G__14496__a = new Array(arguments.length -  0);
while (G__14496__i < G__14496__a.length) {G__14496__a[G__14496__i] = arguments[G__14496__i + 0]; ++G__14496__i;}
  args = new cljs.core.IndexedSeq(G__14496__a,0);
} 
return G__14495__delegate.call(this,args);};
G__14495.cljs$lang$maxFixedArity = 0;
G__14495.cljs$lang$applyTo = (function (arglist__14497){
var args = cljs.core.seq(arglist__14497);
return G__14495__delegate(args);
});
G__14495.cljs$core$IFn$_invoke$arity$variadic = G__14495__delegate;
return G__14495;
})()
;
};
var G__14494 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__14498__i = 0, G__14498__a = new Array(arguments.length -  4);
while (G__14498__i < G__14498__a.length) {G__14498__a[G__14498__i] = arguments[G__14498__i + 4]; ++G__14498__i;}
  more = new cljs.core.IndexedSeq(G__14498__a,0);
} 
return G__14494__delegate.call(this,f,arg1,arg2,arg3,more);};
G__14494.cljs$lang$maxFixedArity = 4;
G__14494.cljs$lang$applyTo = (function (arglist__14499){
var f = cljs.core.first(arglist__14499);
arglist__14499 = cljs.core.next(arglist__14499);
var arg1 = cljs.core.first(arglist__14499);
arglist__14499 = cljs.core.next(arglist__14499);
var arg2 = cljs.core.first(arglist__14499);
arglist__14499 = cljs.core.next(arglist__14499);
var arg3 = cljs.core.first(arglist__14499);
var more = cljs.core.rest(arglist__14499);
return G__14494__delegate(f,arg1,arg2,arg3,more);
});
G__14494.cljs$core$IFn$_invoke$arity$variadic = G__14494__delegate;
return G__14494;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__14500 = null;
if (arguments.length > 4) {
var G__14501__i = 0, G__14501__a = new Array(arguments.length -  4);
while (G__14501__i < G__14501__a.length) {G__14501__a[G__14501__i] = arguments[G__14501__i + 4]; ++G__14501__i;}
G__14500 = new cljs.core.IndexedSeq(G__14501__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__14500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__14534 = null;
var G__14534__1 = (function (a){
var G__14518 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14518) : f.call(null,G__14518));
});
var G__14534__2 = (function (a,b){
var G__14519 = (((a == null))?x:a);
var G__14520 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14519,G__14520) : f.call(null,G__14519,G__14520));
});
var G__14534__3 = (function (a,b,c){
var G__14521 = (((a == null))?x:a);
var G__14522 = b;
var G__14523 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14521,G__14522,G__14523) : f.call(null,G__14521,G__14522,G__14523));
});
var G__14534__4 = (function() { 
var G__14535__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__14535 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14536__i = 0, G__14536__a = new Array(arguments.length -  3);
while (G__14536__i < G__14536__a.length) {G__14536__a[G__14536__i] = arguments[G__14536__i + 3]; ++G__14536__i;}
  ds = new cljs.core.IndexedSeq(G__14536__a,0);
} 
return G__14535__delegate.call(this,a,b,c,ds);};
G__14535.cljs$lang$maxFixedArity = 3;
G__14535.cljs$lang$applyTo = (function (arglist__14537){
var a = cljs.core.first(arglist__14537);
arglist__14537 = cljs.core.next(arglist__14537);
var b = cljs.core.first(arglist__14537);
arglist__14537 = cljs.core.next(arglist__14537);
var c = cljs.core.first(arglist__14537);
var ds = cljs.core.rest(arglist__14537);
return G__14535__delegate(a,b,c,ds);
});
G__14535.cljs$core$IFn$_invoke$arity$variadic = G__14535__delegate;
return G__14535;
})()
;
G__14534 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__14534__1.call(this,a);
case 2:
return G__14534__2.call(this,a,b);
case 3:
return G__14534__3.call(this,a,b,c);
default:
var G__14538 = null;
if (arguments.length > 3) {
var G__14539__i = 0, G__14539__a = new Array(arguments.length -  3);
while (G__14539__i < G__14539__a.length) {G__14539__a[G__14539__i] = arguments[G__14539__i + 3]; ++G__14539__i;}
G__14538 = new cljs.core.IndexedSeq(G__14539__a,0);
}
return G__14534__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14534.cljs$lang$maxFixedArity = 3;
G__14534.cljs$lang$applyTo = G__14534__4.cljs$lang$applyTo;
G__14534.cljs$core$IFn$_invoke$arity$1 = G__14534__1;
G__14534.cljs$core$IFn$_invoke$arity$2 = G__14534__2;
G__14534.cljs$core$IFn$_invoke$arity$3 = G__14534__3;
G__14534.cljs$core$IFn$_invoke$arity$variadic = G__14534__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14534;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__14540 = null;
var G__14540__2 = (function (a,b){
var G__14524 = (((a == null))?x:a);
var G__14525 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14524,G__14525) : f.call(null,G__14524,G__14525));
});
var G__14540__3 = (function (a,b,c){
var G__14526 = (((a == null))?x:a);
var G__14527 = (((b == null))?y:b);
var G__14528 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14526,G__14527,G__14528) : f.call(null,G__14526,G__14527,G__14528));
});
var G__14540__4 = (function() { 
var G__14541__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__14541 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14542__i = 0, G__14542__a = new Array(arguments.length -  3);
while (G__14542__i < G__14542__a.length) {G__14542__a[G__14542__i] = arguments[G__14542__i + 3]; ++G__14542__i;}
  ds = new cljs.core.IndexedSeq(G__14542__a,0);
} 
return G__14541__delegate.call(this,a,b,c,ds);};
G__14541.cljs$lang$maxFixedArity = 3;
G__14541.cljs$lang$applyTo = (function (arglist__14543){
var a = cljs.core.first(arglist__14543);
arglist__14543 = cljs.core.next(arglist__14543);
var b = cljs.core.first(arglist__14543);
arglist__14543 = cljs.core.next(arglist__14543);
var c = cljs.core.first(arglist__14543);
var ds = cljs.core.rest(arglist__14543);
return G__14541__delegate(a,b,c,ds);
});
G__14541.cljs$core$IFn$_invoke$arity$variadic = G__14541__delegate;
return G__14541;
})()
;
G__14540 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14540__2.call(this,a,b);
case 3:
return G__14540__3.call(this,a,b,c);
default:
var G__14544 = null;
if (arguments.length > 3) {
var G__14545__i = 0, G__14545__a = new Array(arguments.length -  3);
while (G__14545__i < G__14545__a.length) {G__14545__a[G__14545__i] = arguments[G__14545__i + 3]; ++G__14545__i;}
G__14544 = new cljs.core.IndexedSeq(G__14545__a,0);
}
return G__14540__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14540.cljs$lang$maxFixedArity = 3;
G__14540.cljs$lang$applyTo = G__14540__4.cljs$lang$applyTo;
G__14540.cljs$core$IFn$_invoke$arity$2 = G__14540__2;
G__14540.cljs$core$IFn$_invoke$arity$3 = G__14540__3;
G__14540.cljs$core$IFn$_invoke$arity$variadic = G__14540__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14540;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__14546 = null;
var G__14546__2 = (function (a,b){
var G__14529 = (((a == null))?x:a);
var G__14530 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14529,G__14530) : f.call(null,G__14529,G__14530));
});
var G__14546__3 = (function (a,b,c){
var G__14531 = (((a == null))?x:a);
var G__14532 = (((b == null))?y:b);
var G__14533 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14531,G__14532,G__14533) : f.call(null,G__14531,G__14532,G__14533));
});
var G__14546__4 = (function() { 
var G__14547__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__14547 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14548__i = 0, G__14548__a = new Array(arguments.length -  3);
while (G__14548__i < G__14548__a.length) {G__14548__a[G__14548__i] = arguments[G__14548__i + 3]; ++G__14548__i;}
  ds = new cljs.core.IndexedSeq(G__14548__a,0);
} 
return G__14547__delegate.call(this,a,b,c,ds);};
G__14547.cljs$lang$maxFixedArity = 3;
G__14547.cljs$lang$applyTo = (function (arglist__14549){
var a = cljs.core.first(arglist__14549);
arglist__14549 = cljs.core.next(arglist__14549);
var b = cljs.core.first(arglist__14549);
arglist__14549 = cljs.core.next(arglist__14549);
var c = cljs.core.first(arglist__14549);
var ds = cljs.core.rest(arglist__14549);
return G__14547__delegate(a,b,c,ds);
});
G__14547.cljs$core$IFn$_invoke$arity$variadic = G__14547__delegate;
return G__14547;
})()
;
G__14546 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14546__2.call(this,a,b);
case 3:
return G__14546__3.call(this,a,b,c);
default:
var G__14550 = null;
if (arguments.length > 3) {
var G__14551__i = 0, G__14551__a = new Array(arguments.length -  3);
while (G__14551__i < G__14551__a.length) {G__14551__a[G__14551__i] = arguments[G__14551__i + 3]; ++G__14551__i;}
G__14550 = new cljs.core.IndexedSeq(G__14551__a,0);
}
return G__14546__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14546.cljs$lang$maxFixedArity = 3;
G__14546.cljs$lang$applyTo = G__14546__4.cljs$lang$applyTo;
G__14546.cljs$core$IFn$_invoke$arity$2 = G__14546__2;
G__14546.cljs$core$IFn$_invoke$arity$3 = G__14546__3;
G__14546.cljs$core$IFn$_invoke$arity$variadic = G__14546__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14546;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__14582 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__14582) : cljs.core.volatile_BANG_.call(null,G__14582));
})();
return ((function (i){
return (function() {
var G__14612 = null;
var G__14612__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14612__1 = (function (result){
var G__14583 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14583) : rf.call(null,G__14583));
});
var G__14612__2 = (function (result,input){
var G__14584 = result;
var G__14585 = (function (){var G__14586 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__14587 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14586,G__14587) : f.call(null,G__14586,G__14587));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14584,G__14585) : rf.call(null,G__14584,G__14585));
});
G__14612 = function(result,input){
switch(arguments.length){
case 0:
return G__14612__0.call(this);
case 1:
return G__14612__1.call(this,result);
case 2:
return G__14612__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14612.cljs$core$IFn$_invoke$arity$0 = G__14612__0;
G__14612.cljs$core$IFn$_invoke$arity$1 = G__14612__1;
G__14612.cljs$core$IFn$_invoke$arity$2 = G__14612__2;
return G__14612;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4645__auto___14613 = size;
var i_14614 = (0);
while(true){
if((i_14614 < n__4645__auto___14613)){
cljs.core.chunk_append(b,(function (){var G__14608 = (idx + i_14614);
var G__14609 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14614);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14608,G__14609) : f.call(null,G__14608,G__14609));
})());

var G__14615 = (i_14614 + (1));
i_14614 = G__14615;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14610 = idx;
var G__14611 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14610,G__14611) : f.call(null,G__14610,G__14611));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__14634 = null;
var G__14634__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14634__1 = (function (result){
var G__14628 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14628) : rf.call(null,G__14628));
});
var G__14634__2 = (function (result,input){
var v = (function (){var G__14629 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14629) : f.call(null,G__14629));
})();
if((v == null)){
return result;
} else {
var G__14630 = result;
var G__14631 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14630,G__14631) : rf.call(null,G__14630,G__14631));
}
});
G__14634 = function(result,input){
switch(arguments.length){
case 0:
return G__14634__0.call(this);
case 1:
return G__14634__1.call(this,result);
case 2:
return G__14634__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14634.cljs$core$IFn$_invoke$arity$0 = G__14634__0;
G__14634.cljs$core$IFn$_invoke$arity$1 = G__14634__1;
G__14634.cljs$core$IFn$_invoke$arity$2 = G__14634__2;
return G__14634;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4645__auto___14635 = size;
var i_14636 = (0);
while(true){
if((i_14636 < n__4645__auto___14635)){
var x_14637 = (function (){var G__14632 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14636);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14632) : f.call(null,G__14632));
})();
if((x_14637 == null)){
} else {
cljs.core.chunk_append(b,x_14637);
}

var G__14638 = (i_14636 + (1));
i_14636 = G__14638;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14633 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14633) : f.call(null,G__14633));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__14639 = this$__$1;
return goog.getUid(G__14639);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__14640 = cljs.core.seq(self__.watches);
var chunk__14641 = null;
var count__14642 = (0);
var i__14643 = (0);
while(true){
if((i__14643 < count__14642)){
var vec__14644 = chunk__14641.cljs$core$IIndexed$_nth$arity$2(null,i__14643);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14644,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14644,(1),null);
var G__14645_14654 = key;
var G__14646_14655 = this$__$1;
var G__14647_14656 = oldval;
var G__14648_14657 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14645_14654,G__14646_14655,G__14647_14656,G__14648_14657) : f.call(null,G__14645_14654,G__14646_14655,G__14647_14656,G__14648_14657));

var G__14658 = seq__14640;
var G__14659 = chunk__14641;
var G__14660 = count__14642;
var G__14661 = (i__14643 + (1));
seq__14640 = G__14658;
chunk__14641 = G__14659;
count__14642 = G__14660;
i__14643 = G__14661;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14640);
if(temp__4126__auto__){
var seq__14640__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14640__$1)){
var c__4545__auto__ = cljs.core.chunk_first(seq__14640__$1);
var G__14662 = cljs.core.chunk_rest(seq__14640__$1);
var G__14663 = c__4545__auto__;
var G__14664 = cljs.core.count(c__4545__auto__);
var G__14665 = (0);
seq__14640 = G__14662;
chunk__14641 = G__14663;
count__14642 = G__14664;
i__14643 = G__14665;
continue;
} else {
var vec__14649 = cljs.core.first(seq__14640__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14649,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14649,(1),null);
var G__14650_14666 = key;
var G__14651_14667 = this$__$1;
var G__14652_14668 = oldval;
var G__14653_14669 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14650_14666,G__14651_14667,G__14652_14668,G__14653_14669) : f.call(null,G__14650_14666,G__14651_14667,G__14652_14668,G__14653_14669));

var G__14670 = cljs.core.next(seq__14640__$1);
var G__14671 = null;
var G__14672 = (0);
var G__14673 = (0);
seq__14640 = G__14670;
chunk__14641 = G__14671;
count__14642 = G__14672;
i__14643 = G__14673;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__14677__delegate = function (x,p__14674){
var map__14676 = p__14674;
var map__14676__$1 = ((cljs.core.seq_QMARK_(map__14676))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14676):map__14676);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14676__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14676__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__14677 = function (x,var_args){
var p__14674 = null;
if (arguments.length > 1) {
var G__14678__i = 0, G__14678__a = new Array(arguments.length -  1);
while (G__14678__i < G__14678__a.length) {G__14678__a[G__14678__i] = arguments[G__14678__i + 1]; ++G__14678__i;}
  p__14674 = new cljs.core.IndexedSeq(G__14678__a,0);
} 
return G__14677__delegate.call(this,x,p__14674);};
G__14677.cljs$lang$maxFixedArity = 1;
G__14677.cljs$lang$applyTo = (function (arglist__14679){
var x = cljs.core.first(arglist__14679);
var p__14674 = cljs.core.rest(arglist__14679);
return G__14677__delegate(x,p__14674);
});
G__14677.cljs$core$IFn$_invoke$arity$variadic = G__14677__delegate;
return G__14677;
})()
;
atom = function(x,var_args){
var p__14674 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__14680 = null;
if (arguments.length > 1) {
var G__14681__i = 0, G__14681__a = new Array(arguments.length -  1);
while (G__14681__i < G__14681__a.length) {G__14681__a[G__14681__i] = arguments[G__14681__i + 1]; ++G__14681__i;}
G__14680 = new cljs.core.IndexedSeq(G__14681__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14680);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__14684 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__14684) : validate.call(null,G__14684));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__14685 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__14685) : cljs.core.pr_str.call(null,G__14685));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14692 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14692) : f.call(null,G__14692));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14693 = a.state;
var G__14694 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14693,G__14694) : f.call(null,G__14693,G__14694));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14695 = a.state;
var G__14696 = x;
var G__14697 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14695,G__14696,G__14697) : f.call(null,G__14695,G__14696,G__14697));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__14698__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__14698 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__14699__i = 0, G__14699__a = new Array(arguments.length -  4);
while (G__14699__i < G__14699__a.length) {G__14699__a[G__14699__i] = arguments[G__14699__i + 4]; ++G__14699__i;}
  more = new cljs.core.IndexedSeq(G__14699__a,0);
} 
return G__14698__delegate.call(this,a,f,x,y,more);};
G__14698.cljs$lang$maxFixedArity = 4;
G__14698.cljs$lang$applyTo = (function (arglist__14700){
var a = cljs.core.first(arglist__14700);
arglist__14700 = cljs.core.next(arglist__14700);
var f = cljs.core.first(arglist__14700);
arglist__14700 = cljs.core.next(arglist__14700);
var x = cljs.core.first(arglist__14700);
arglist__14700 = cljs.core.next(arglist__14700);
var y = cljs.core.first(arglist__14700);
var more = cljs.core.rest(arglist__14700);
return G__14698__delegate(a,f,x,y,more);
});
G__14698.cljs$core$IFn$_invoke$arity$variadic = G__14698__delegate;
return G__14698;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__14701 = null;
if (arguments.length > 4) {
var G__14702__i = 0, G__14702__a = new Array(arguments.length -  4);
while (G__14702__i < G__14702__a.length) {G__14702__a[G__14702__i] = arguments[G__14702__i + 4]; ++G__14702__i;}
G__14701 = new cljs.core.IndexedSeq(G__14702__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__14701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14769 = null;
var G__14769__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14769__1 = (function (result){
var G__14736 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14736) : rf.call(null,G__14736));
});
var G__14769__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__14737 = i;
var G__14738 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14737,G__14738) : f.call(null,G__14737,G__14738));
})();
if((v == null)){
return result;
} else {
var G__14739 = result;
var G__14740 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14739,G__14740) : rf.call(null,G__14739,G__14740));
}
});
G__14769 = function(result,input){
switch(arguments.length){
case 0:
return G__14769__0.call(this);
case 1:
return G__14769__1.call(this,result);
case 2:
return G__14769__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14769.cljs$core$IFn$_invoke$arity$0 = G__14769__0;
G__14769.cljs$core$IFn$_invoke$arity$1 = G__14769__1;
G__14769.cljs$core$IFn$_invoke$arity$2 = G__14769__2;
return G__14769;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4645__auto___14770 = size;
var i_14771 = (0);
while(true){
if((i_14771 < n__4645__auto___14770)){
var x_14772 = (function (){var G__14765 = (idx + i_14771);
var G__14766 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14771);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14765,G__14766) : f.call(null,G__14765,G__14766));
})();
if((x_14772 == null)){
} else {
cljs.core.chunk_append(b,x_14772);
}

var G__14773 = (i_14771 + (1));
i_14771 = G__14773;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14767 = idx;
var G__14768 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14767,G__14768) : f.call(null,G__14767,G__14768));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__14987 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14987) : p.call(null,G__14987));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3746__auto__ = (function (){var G__14989 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14989) : p.call(null,G__14989));
})();
if(cljs.core.truth_(and__3746__auto__)){
var G__14990 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14990) : p.call(null,G__14990));
} else {
return and__3746__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3746__auto__ = (function (){var G__14992 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14992) : p.call(null,G__14992));
})();
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__14994 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14994) : p.call(null,G__14994));
})();
if(cljs.core.truth_(and__3746__auto____$1)){
var G__14995 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14995) : p.call(null,G__14995));
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__15164__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__15164 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15165__i = 0, G__15165__a = new Array(arguments.length -  3);
while (G__15165__i < G__15165__a.length) {G__15165__a[G__15165__i] = arguments[G__15165__i + 3]; ++G__15165__i;}
  args = new cljs.core.IndexedSeq(G__15165__a,0);
} 
return G__15164__delegate.call(this,x,y,z,args);};
G__15164.cljs$lang$maxFixedArity = 3;
G__15164.cljs$lang$applyTo = (function (arglist__15166){
var x = cljs.core.first(arglist__15166);
arglist__15166 = cljs.core.next(arglist__15166);
var y = cljs.core.first(arglist__15166);
arglist__15166 = cljs.core.next(arglist__15166);
var z = cljs.core.first(arglist__15166);
var args = cljs.core.rest(arglist__15166);
return G__15164__delegate(x,y,z,args);
});
G__15164.cljs$core$IFn$_invoke$arity$variadic = G__15164__delegate;
return G__15164;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__15167 = null;
if (arguments.length > 3) {
var G__15168__i = 0, G__15168__a = new Array(arguments.length -  3);
while (G__15168__i < G__15168__a.length) {G__15168__a[G__15168__i] = arguments[G__15168__i + 3]; ++G__15168__i;}
G__15167 = new cljs.core.IndexedSeq(G__15168__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15167);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3746__auto__ = (function (){var G__15027 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15027) : p1.call(null,G__15027));
})();
if(cljs.core.truth_(and__3746__auto__)){
var G__15028 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15028) : p2.call(null,G__15028));
} else {
return and__3746__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3746__auto__ = (function (){var G__15030 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15030) : p1.call(null,G__15030));
})();
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__15032 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15032) : p1.call(null,G__15032));
})();
if(cljs.core.truth_(and__3746__auto____$1)){
var and__3746__auto____$2 = (function (){var G__15034 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15034) : p2.call(null,G__15034));
})();
if(cljs.core.truth_(and__3746__auto____$2)){
var G__15035 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15035) : p2.call(null,G__15035));
} else {
return and__3746__auto____$2;
}
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3746__auto__ = (function (){var G__15037 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15037) : p1.call(null,G__15037));
})();
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__15039 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15039) : p1.call(null,G__15039));
})();
if(cljs.core.truth_(and__3746__auto____$1)){
var and__3746__auto____$2 = (function (){var G__15041 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15041) : p1.call(null,G__15041));
})();
if(cljs.core.truth_(and__3746__auto____$2)){
var and__3746__auto____$3 = (function (){var G__15043 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15043) : p2.call(null,G__15043));
})();
if(cljs.core.truth_(and__3746__auto____$3)){
var and__3746__auto____$4 = (function (){var G__15045 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15045) : p2.call(null,G__15045));
})();
if(cljs.core.truth_(and__3746__auto____$4)){
var G__15046 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15046) : p2.call(null,G__15046));
} else {
return and__3746__auto____$4;
}
} else {
return and__3746__auto____$3;
}
} else {
return and__3746__auto____$2;
}
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__15169__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14774_SHARP_){
var and__3746__auto__ = (function (){var G__15051 = p1__14774_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15051) : p1.call(null,G__15051));
})();
if(cljs.core.truth_(and__3746__auto__)){
var G__15052 = p1__14774_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15052) : p2.call(null,G__15052));
} else {
return and__3746__auto__;
}
}),args)));
};
var G__15169 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15170__i = 0, G__15170__a = new Array(arguments.length -  3);
while (G__15170__i < G__15170__a.length) {G__15170__a[G__15170__i] = arguments[G__15170__i + 3]; ++G__15170__i;}
  args = new cljs.core.IndexedSeq(G__15170__a,0);
} 
return G__15169__delegate.call(this,x,y,z,args);};
G__15169.cljs$lang$maxFixedArity = 3;
G__15169.cljs$lang$applyTo = (function (arglist__15171){
var x = cljs.core.first(arglist__15171);
arglist__15171 = cljs.core.next(arglist__15171);
var y = cljs.core.first(arglist__15171);
arglist__15171 = cljs.core.next(arglist__15171);
var z = cljs.core.first(arglist__15171);
var args = cljs.core.rest(arglist__15171);
return G__15169__delegate(x,y,z,args);
});
G__15169.cljs$core$IFn$_invoke$arity$variadic = G__15169__delegate;
return G__15169;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__15172 = null;
if (arguments.length > 3) {
var G__15173__i = 0, G__15173__a = new Array(arguments.length -  3);
while (G__15173__i < G__15173__a.length) {G__15173__a[G__15173__i] = arguments[G__15173__i + 3]; ++G__15173__i;}
G__15172 = new cljs.core.IndexedSeq(G__15173__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15172);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3746__auto__ = (function (){var G__15098 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15098) : p1.call(null,G__15098));
})();
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__15100 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15100) : p2.call(null,G__15100));
})();
if(cljs.core.truth_(and__3746__auto____$1)){
var G__15101 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15101) : p3.call(null,G__15101));
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3746__auto__ = (function (){var G__15103 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15103) : p1.call(null,G__15103));
})();
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__15105 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15105) : p2.call(null,G__15105));
})();
if(cljs.core.truth_(and__3746__auto____$1)){
var and__3746__auto____$2 = (function (){var G__15107 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15107) : p3.call(null,G__15107));
})();
if(cljs.core.truth_(and__3746__auto____$2)){
var and__3746__auto____$3 = (function (){var G__15109 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15109) : p1.call(null,G__15109));
})();
if(cljs.core.truth_(and__3746__auto____$3)){
var and__3746__auto____$4 = (function (){var G__15111 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15111) : p2.call(null,G__15111));
})();
if(cljs.core.truth_(and__3746__auto____$4)){
var G__15112 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15112) : p3.call(null,G__15112));
} else {
return and__3746__auto____$4;
}
} else {
return and__3746__auto____$3;
}
} else {
return and__3746__auto____$2;
}
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3746__auto__ = (function (){var G__15114 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15114) : p1.call(null,G__15114));
})();
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__15116 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15116) : p2.call(null,G__15116));
})();
if(cljs.core.truth_(and__3746__auto____$1)){
var and__3746__auto____$2 = (function (){var G__15118 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15118) : p3.call(null,G__15118));
})();
if(cljs.core.truth_(and__3746__auto____$2)){
var and__3746__auto____$3 = (function (){var G__15120 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15120) : p1.call(null,G__15120));
})();
if(cljs.core.truth_(and__3746__auto____$3)){
var and__3746__auto____$4 = (function (){var G__15122 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15122) : p2.call(null,G__15122));
})();
if(cljs.core.truth_(and__3746__auto____$4)){
var and__3746__auto____$5 = (function (){var G__15124 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15124) : p3.call(null,G__15124));
})();
if(cljs.core.truth_(and__3746__auto____$5)){
var and__3746__auto____$6 = (function (){var G__15126 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15126) : p1.call(null,G__15126));
})();
if(cljs.core.truth_(and__3746__auto____$6)){
var and__3746__auto____$7 = (function (){var G__15128 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15128) : p2.call(null,G__15128));
})();
if(cljs.core.truth_(and__3746__auto____$7)){
var G__15129 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15129) : p3.call(null,G__15129));
} else {
return and__3746__auto____$7;
}
} else {
return and__3746__auto____$6;
}
} else {
return and__3746__auto____$5;
}
} else {
return and__3746__auto____$4;
}
} else {
return and__3746__auto____$3;
}
} else {
return and__3746__auto____$2;
}
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__15174__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14775_SHARP_){
var and__3746__auto__ = (function (){var G__15136 = p1__14775_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15136) : p1.call(null,G__15136));
})();
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__15138 = p1__14775_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15138) : p2.call(null,G__15138));
})();
if(cljs.core.truth_(and__3746__auto____$1)){
var G__15139 = p1__14775_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15139) : p3.call(null,G__15139));
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
}),args)));
};
var G__15174 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15175__i = 0, G__15175__a = new Array(arguments.length -  3);
while (G__15175__i < G__15175__a.length) {G__15175__a[G__15175__i] = arguments[G__15175__i + 3]; ++G__15175__i;}
  args = new cljs.core.IndexedSeq(G__15175__a,0);
} 
return G__15174__delegate.call(this,x,y,z,args);};
G__15174.cljs$lang$maxFixedArity = 3;
G__15174.cljs$lang$applyTo = (function (arglist__15176){
var x = cljs.core.first(arglist__15176);
arglist__15176 = cljs.core.next(arglist__15176);
var y = cljs.core.first(arglist__15176);
arglist__15176 = cljs.core.next(arglist__15176);
var z = cljs.core.first(arglist__15176);
var args = cljs.core.rest(arglist__15176);
return G__15174__delegate(x,y,z,args);
});
G__15174.cljs$core$IFn$_invoke$arity$variadic = G__15174__delegate;
return G__15174;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__15177 = null;
if (arguments.length > 3) {
var G__15178__i = 0, G__15178__a = new Array(arguments.length -  3);
while (G__15178__i < G__15178__a.length) {G__15178__a[G__15178__i] = arguments[G__15178__i + 3]; ++G__15178__i;}
G__15177 = new cljs.core.IndexedSeq(G__15178__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__15179__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14776_SHARP_){
var G__15155 = x;
return (p1__14776_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14776_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15155) : p1__14776_SHARP_.call(null,G__15155));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14777_SHARP_){
var and__3746__auto__ = (function (){var G__15157 = x;
return (p1__14777_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14777_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15157) : p1__14777_SHARP_.call(null,G__15157));
})();
if(cljs.core.truth_(and__3746__auto__)){
var G__15158 = y;
return (p1__14777_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14777_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15158) : p1__14777_SHARP_.call(null,G__15158));
} else {
return and__3746__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14778_SHARP_){
var and__3746__auto__ = (function (){var G__15160 = x;
return (p1__14778_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14778_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15160) : p1__14778_SHARP_.call(null,G__15160));
})();
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__15162 = y;
return (p1__14778_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14778_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15162) : p1__14778_SHARP_.call(null,G__15162));
})();
if(cljs.core.truth_(and__3746__auto____$1)){
var G__15163 = z;
return (p1__14778_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14778_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15163) : p1__14778_SHARP_.call(null,G__15163));
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__15180__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14779_SHARP_){
return cljs.core.every_QMARK_(p1__14779_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__15180 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15181__i = 0, G__15181__a = new Array(arguments.length -  3);
while (G__15181__i < G__15181__a.length) {G__15181__a[G__15181__i] = arguments[G__15181__i + 3]; ++G__15181__i;}
  args = new cljs.core.IndexedSeq(G__15181__a,0);
} 
return G__15180__delegate.call(this,x,y,z,args);};
G__15180.cljs$lang$maxFixedArity = 3;
G__15180.cljs$lang$applyTo = (function (arglist__15182){
var x = cljs.core.first(arglist__15182);
arglist__15182 = cljs.core.next(arglist__15182);
var y = cljs.core.first(arglist__15182);
arglist__15182 = cljs.core.next(arglist__15182);
var z = cljs.core.first(arglist__15182);
var args = cljs.core.rest(arglist__15182);
return G__15180__delegate(x,y,z,args);
});
G__15180.cljs$core$IFn$_invoke$arity$variadic = G__15180__delegate;
return G__15180;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__15183 = null;
if (arguments.length > 3) {
var G__15184__i = 0, G__15184__a = new Array(arguments.length -  3);
while (G__15184__i < G__15184__a.length) {G__15184__a[G__15184__i] = arguments[G__15184__i + 3]; ++G__15184__i;}
G__15183 = new cljs.core.IndexedSeq(G__15184__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15183);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__15179 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15185__i = 0, G__15185__a = new Array(arguments.length -  3);
while (G__15185__i < G__15185__a.length) {G__15185__a[G__15185__i] = arguments[G__15185__i + 3]; ++G__15185__i;}
  ps = new cljs.core.IndexedSeq(G__15185__a,0);
} 
return G__15179__delegate.call(this,p1,p2,p3,ps);};
G__15179.cljs$lang$maxFixedArity = 3;
G__15179.cljs$lang$applyTo = (function (arglist__15186){
var p1 = cljs.core.first(arglist__15186);
arglist__15186 = cljs.core.next(arglist__15186);
var p2 = cljs.core.first(arglist__15186);
arglist__15186 = cljs.core.next(arglist__15186);
var p3 = cljs.core.first(arglist__15186);
var ps = cljs.core.rest(arglist__15186);
return G__15179__delegate(p1,p2,p3,ps);
});
G__15179.cljs$core$IFn$_invoke$arity$variadic = G__15179__delegate;
return G__15179;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__15187 = null;
if (arguments.length > 3) {
var G__15188__i = 0, G__15188__a = new Array(arguments.length -  3);
while (G__15188__i < G__15188__a.length) {G__15188__a[G__15188__i] = arguments[G__15188__i + 3]; ++G__15188__i;}
G__15187 = new cljs.core.IndexedSeq(G__15188__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__15394 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15394) : p.call(null,G__15394));
});
var sp1__2 = (function (x,y){
var or__3758__auto__ = (function (){var G__15396 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15396) : p.call(null,G__15396));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var G__15397 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15397) : p.call(null,G__15397));
}
});
var sp1__3 = (function (x,y,z){
var or__3758__auto__ = (function (){var G__15399 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15399) : p.call(null,G__15399));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (function (){var G__15401 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15401) : p.call(null,G__15401));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var G__15402 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15402) : p.call(null,G__15402));
}
}
});
var sp1__4 = (function() { 
var G__15563__delegate = function (x,y,z,args){
var or__3758__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__15563 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15564__i = 0, G__15564__a = new Array(arguments.length -  3);
while (G__15564__i < G__15564__a.length) {G__15564__a[G__15564__i] = arguments[G__15564__i + 3]; ++G__15564__i;}
  args = new cljs.core.IndexedSeq(G__15564__a,0);
} 
return G__15563__delegate.call(this,x,y,z,args);};
G__15563.cljs$lang$maxFixedArity = 3;
G__15563.cljs$lang$applyTo = (function (arglist__15565){
var x = cljs.core.first(arglist__15565);
arglist__15565 = cljs.core.next(arglist__15565);
var y = cljs.core.first(arglist__15565);
arglist__15565 = cljs.core.next(arglist__15565);
var z = cljs.core.first(arglist__15565);
var args = cljs.core.rest(arglist__15565);
return G__15563__delegate(x,y,z,args);
});
G__15563.cljs$core$IFn$_invoke$arity$variadic = G__15563__delegate;
return G__15563;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__15566 = null;
if (arguments.length > 3) {
var G__15567__i = 0, G__15567__a = new Array(arguments.length -  3);
while (G__15567__i < G__15567__a.length) {G__15567__a[G__15567__i] = arguments[G__15567__i + 3]; ++G__15567__i;}
G__15566 = new cljs.core.IndexedSeq(G__15567__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3758__auto__ = (function (){var G__15434 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15434) : p1.call(null,G__15434));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var G__15435 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15435) : p2.call(null,G__15435));
}
});
var sp2__2 = (function (x,y){
var or__3758__auto__ = (function (){var G__15437 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15437) : p1.call(null,G__15437));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (function (){var G__15439 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15439) : p1.call(null,G__15439));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var or__3758__auto____$2 = (function (){var G__15441 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15441) : p2.call(null,G__15441));
})();
if(cljs.core.truth_(or__3758__auto____$2)){
return or__3758__auto____$2;
} else {
var G__15442 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15442) : p2.call(null,G__15442));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3758__auto__ = (function (){var G__15444 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15444) : p1.call(null,G__15444));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (function (){var G__15446 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15446) : p1.call(null,G__15446));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var or__3758__auto____$2 = (function (){var G__15448 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15448) : p1.call(null,G__15448));
})();
if(cljs.core.truth_(or__3758__auto____$2)){
return or__3758__auto____$2;
} else {
var or__3758__auto____$3 = (function (){var G__15450 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15450) : p2.call(null,G__15450));
})();
if(cljs.core.truth_(or__3758__auto____$3)){
return or__3758__auto____$3;
} else {
var or__3758__auto____$4 = (function (){var G__15452 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15452) : p2.call(null,G__15452));
})();
if(cljs.core.truth_(or__3758__auto____$4)){
return or__3758__auto____$4;
} else {
var G__15453 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15453) : p2.call(null,G__15453));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__15568__delegate = function (x,y,z,args){
var or__3758__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return cljs.core.some(((function (or__3758__auto__){
return (function (p1__15189_SHARP_){
var or__3758__auto____$1 = (function (){var G__15455 = p1__15189_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15455) : p1.call(null,G__15455));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var G__15456 = p1__15189_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15456) : p2.call(null,G__15456));
}
});})(or__3758__auto__))
,args);
}
};
var G__15568 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15569__i = 0, G__15569__a = new Array(arguments.length -  3);
while (G__15569__i < G__15569__a.length) {G__15569__a[G__15569__i] = arguments[G__15569__i + 3]; ++G__15569__i;}
  args = new cljs.core.IndexedSeq(G__15569__a,0);
} 
return G__15568__delegate.call(this,x,y,z,args);};
G__15568.cljs$lang$maxFixedArity = 3;
G__15568.cljs$lang$applyTo = (function (arglist__15570){
var x = cljs.core.first(arglist__15570);
arglist__15570 = cljs.core.next(arglist__15570);
var y = cljs.core.first(arglist__15570);
arglist__15570 = cljs.core.next(arglist__15570);
var z = cljs.core.first(arglist__15570);
var args = cljs.core.rest(arglist__15570);
return G__15568__delegate(x,y,z,args);
});
G__15568.cljs$core$IFn$_invoke$arity$variadic = G__15568__delegate;
return G__15568;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__15571 = null;
if (arguments.length > 3) {
var G__15572__i = 0, G__15572__a = new Array(arguments.length -  3);
while (G__15572__i < G__15572__a.length) {G__15572__a[G__15572__i] = arguments[G__15572__i + 3]; ++G__15572__i;}
G__15571 = new cljs.core.IndexedSeq(G__15572__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3758__auto__ = (function (){var G__15502 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15502) : p1.call(null,G__15502));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (function (){var G__15504 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15504) : p2.call(null,G__15504));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var G__15505 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15505) : p3.call(null,G__15505));
}
}
});
var sp3__2 = (function (x,y){
var or__3758__auto__ = (function (){var G__15507 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15507) : p1.call(null,G__15507));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (function (){var G__15509 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15509) : p2.call(null,G__15509));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var or__3758__auto____$2 = (function (){var G__15511 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15511) : p3.call(null,G__15511));
})();
if(cljs.core.truth_(or__3758__auto____$2)){
return or__3758__auto____$2;
} else {
var or__3758__auto____$3 = (function (){var G__15513 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15513) : p1.call(null,G__15513));
})();
if(cljs.core.truth_(or__3758__auto____$3)){
return or__3758__auto____$3;
} else {
var or__3758__auto____$4 = (function (){var G__15515 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15515) : p2.call(null,G__15515));
})();
if(cljs.core.truth_(or__3758__auto____$4)){
return or__3758__auto____$4;
} else {
var G__15516 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15516) : p3.call(null,G__15516));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3758__auto__ = (function (){var G__15518 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15518) : p1.call(null,G__15518));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (function (){var G__15520 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15520) : p2.call(null,G__15520));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var or__3758__auto____$2 = (function (){var G__15522 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15522) : p3.call(null,G__15522));
})();
if(cljs.core.truth_(or__3758__auto____$2)){
return or__3758__auto____$2;
} else {
var or__3758__auto____$3 = (function (){var G__15524 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15524) : p1.call(null,G__15524));
})();
if(cljs.core.truth_(or__3758__auto____$3)){
return or__3758__auto____$3;
} else {
var or__3758__auto____$4 = (function (){var G__15526 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15526) : p2.call(null,G__15526));
})();
if(cljs.core.truth_(or__3758__auto____$4)){
return or__3758__auto____$4;
} else {
var or__3758__auto____$5 = (function (){var G__15528 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15528) : p3.call(null,G__15528));
})();
if(cljs.core.truth_(or__3758__auto____$5)){
return or__3758__auto____$5;
} else {
var or__3758__auto____$6 = (function (){var G__15530 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15530) : p1.call(null,G__15530));
})();
if(cljs.core.truth_(or__3758__auto____$6)){
return or__3758__auto____$6;
} else {
var or__3758__auto____$7 = (function (){var G__15532 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15532) : p2.call(null,G__15532));
})();
if(cljs.core.truth_(or__3758__auto____$7)){
return or__3758__auto____$7;
} else {
var G__15533 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15533) : p3.call(null,G__15533));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__15573__delegate = function (x,y,z,args){
var or__3758__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return cljs.core.some(((function (or__3758__auto__){
return (function (p1__15190_SHARP_){
var or__3758__auto____$1 = (function (){var G__15535 = p1__15190_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15535) : p1.call(null,G__15535));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var or__3758__auto____$2 = (function (){var G__15537 = p1__15190_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15537) : p2.call(null,G__15537));
})();
if(cljs.core.truth_(or__3758__auto____$2)){
return or__3758__auto____$2;
} else {
var G__15538 = p1__15190_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15538) : p3.call(null,G__15538));
}
}
});})(or__3758__auto__))
,args);
}
};
var G__15573 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15574__i = 0, G__15574__a = new Array(arguments.length -  3);
while (G__15574__i < G__15574__a.length) {G__15574__a[G__15574__i] = arguments[G__15574__i + 3]; ++G__15574__i;}
  args = new cljs.core.IndexedSeq(G__15574__a,0);
} 
return G__15573__delegate.call(this,x,y,z,args);};
G__15573.cljs$lang$maxFixedArity = 3;
G__15573.cljs$lang$applyTo = (function (arglist__15575){
var x = cljs.core.first(arglist__15575);
arglist__15575 = cljs.core.next(arglist__15575);
var y = cljs.core.first(arglist__15575);
arglist__15575 = cljs.core.next(arglist__15575);
var z = cljs.core.first(arglist__15575);
var args = cljs.core.rest(arglist__15575);
return G__15573__delegate(x,y,z,args);
});
G__15573.cljs$core$IFn$_invoke$arity$variadic = G__15573__delegate;
return G__15573;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__15576 = null;
if (arguments.length > 3) {
var G__15577__i = 0, G__15577__a = new Array(arguments.length -  3);
while (G__15577__i < G__15577__a.length) {G__15577__a[G__15577__i] = arguments[G__15577__i + 3]; ++G__15577__i;}
G__15576 = new cljs.core.IndexedSeq(G__15577__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__15578__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__15191_SHARP_){
var G__15554 = x;
return (p1__15191_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15191_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15554) : p1__15191_SHARP_.call(null,G__15554));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__15192_SHARP_){
var or__3758__auto__ = (function (){var G__15556 = x;
return (p1__15192_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15192_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15556) : p1__15192_SHARP_.call(null,G__15556));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var G__15557 = y;
return (p1__15192_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15192_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15557) : p1__15192_SHARP_.call(null,G__15557));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__15193_SHARP_){
var or__3758__auto__ = (function (){var G__15559 = x;
return (p1__15193_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15193_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15559) : p1__15193_SHARP_.call(null,G__15559));
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (function (){var G__15561 = y;
return (p1__15193_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15193_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15561) : p1__15193_SHARP_.call(null,G__15561));
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var G__15562 = z;
return (p1__15193_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15193_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15562) : p1__15193_SHARP_.call(null,G__15562));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__15579__delegate = function (x,y,z,args){
var or__3758__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return cljs.core.some(((function (or__3758__auto__,ps__$1){
return (function (p1__15194_SHARP_){
return cljs.core.some(p1__15194_SHARP_,args);
});})(or__3758__auto__,ps__$1))
,ps__$1);
}
};
var G__15579 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15580__i = 0, G__15580__a = new Array(arguments.length -  3);
while (G__15580__i < G__15580__a.length) {G__15580__a[G__15580__i] = arguments[G__15580__i + 3]; ++G__15580__i;}
  args = new cljs.core.IndexedSeq(G__15580__a,0);
} 
return G__15579__delegate.call(this,x,y,z,args);};
G__15579.cljs$lang$maxFixedArity = 3;
G__15579.cljs$lang$applyTo = (function (arglist__15581){
var x = cljs.core.first(arglist__15581);
arglist__15581 = cljs.core.next(arglist__15581);
var y = cljs.core.first(arglist__15581);
arglist__15581 = cljs.core.next(arglist__15581);
var z = cljs.core.first(arglist__15581);
var args = cljs.core.rest(arglist__15581);
return G__15579__delegate(x,y,z,args);
});
G__15579.cljs$core$IFn$_invoke$arity$variadic = G__15579__delegate;
return G__15579;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__15582 = null;
if (arguments.length > 3) {
var G__15583__i = 0, G__15583__a = new Array(arguments.length -  3);
while (G__15583__i < G__15583__a.length) {G__15583__a[G__15583__i] = arguments[G__15583__i + 3]; ++G__15583__i;}
G__15582 = new cljs.core.IndexedSeq(G__15583__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15582);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__15578 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15584__i = 0, G__15584__a = new Array(arguments.length -  3);
while (G__15584__i < G__15584__a.length) {G__15584__a[G__15584__i] = arguments[G__15584__i + 3]; ++G__15584__i;}
  ps = new cljs.core.IndexedSeq(G__15584__a,0);
} 
return G__15578__delegate.call(this,p1,p2,p3,ps);};
G__15578.cljs$lang$maxFixedArity = 3;
G__15578.cljs$lang$applyTo = (function (arglist__15585){
var p1 = cljs.core.first(arglist__15585);
arglist__15585 = cljs.core.next(arglist__15585);
var p2 = cljs.core.first(arglist__15585);
arglist__15585 = cljs.core.next(arglist__15585);
var p3 = cljs.core.first(arglist__15585);
var ps = cljs.core.rest(arglist__15585);
return G__15578__delegate(p1,p2,p3,ps);
});
G__15578.cljs$core$IFn$_invoke$arity$variadic = G__15578__delegate;
return G__15578;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__15586 = null;
if (arguments.length > 3) {
var G__15587__i = 0, G__15587__a = new Array(arguments.length -  3);
while (G__15587__i < G__15587__a.length) {G__15587__a[G__15587__i] = arguments[G__15587__i + 3]; ++G__15587__i;}
G__15586 = new cljs.core.IndexedSeq(G__15587__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15586);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__15642 = null;
var G__15642__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15642__1 = (function (result){
var G__15628 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15628) : rf.call(null,G__15628));
});
var G__15642__2 = (function (result,input){
var G__15629 = result;
var G__15630 = (function (){var G__15631 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15631) : f.call(null,G__15631));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15629,G__15630) : rf.call(null,G__15629,G__15630));
});
var G__15642__3 = (function() { 
var G__15643__delegate = function (result,input,inputs){
var G__15632 = result;
var G__15633 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15632,G__15633) : rf.call(null,G__15632,G__15633));
};
var G__15643 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__15644__i = 0, G__15644__a = new Array(arguments.length -  2);
while (G__15644__i < G__15644__a.length) {G__15644__a[G__15644__i] = arguments[G__15644__i + 2]; ++G__15644__i;}
  inputs = new cljs.core.IndexedSeq(G__15644__a,0);
} 
return G__15643__delegate.call(this,result,input,inputs);};
G__15643.cljs$lang$maxFixedArity = 2;
G__15643.cljs$lang$applyTo = (function (arglist__15645){
var result = cljs.core.first(arglist__15645);
arglist__15645 = cljs.core.next(arglist__15645);
var input = cljs.core.first(arglist__15645);
var inputs = cljs.core.rest(arglist__15645);
return G__15643__delegate(result,input,inputs);
});
G__15643.cljs$core$IFn$_invoke$arity$variadic = G__15643__delegate;
return G__15643;
})()
;
G__15642 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__15642__0.call(this);
case 1:
return G__15642__1.call(this,result);
case 2:
return G__15642__2.call(this,result,input);
default:
var G__15646 = null;
if (arguments.length > 2) {
var G__15647__i = 0, G__15647__a = new Array(arguments.length -  2);
while (G__15647__i < G__15647__a.length) {G__15647__a[G__15647__i] = arguments[G__15647__i + 2]; ++G__15647__i;}
G__15646 = new cljs.core.IndexedSeq(G__15647__a,0);
}
return G__15642__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__15646);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15642.cljs$lang$maxFixedArity = 2;
G__15642.cljs$lang$applyTo = G__15642__3.cljs$lang$applyTo;
G__15642.cljs$core$IFn$_invoke$arity$0 = G__15642__0;
G__15642.cljs$core$IFn$_invoke$arity$1 = G__15642__1;
G__15642.cljs$core$IFn$_invoke$arity$2 = G__15642__2;
G__15642.cljs$core$IFn$_invoke$arity$variadic = G__15642__3.cljs$core$IFn$_invoke$arity$variadic;
return G__15642;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4645__auto___15648 = size;
var i_15649 = (0);
while(true){
if((i_15649 < n__4645__auto___15648)){
cljs.core.chunk_append(b,(function (){var G__15634 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15649);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15634) : f.call(null,G__15634));
})());

var G__15650 = (i_15649 + (1));
i_15649 = G__15650;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15635 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15635) : f.call(null,G__15635));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__15636 = cljs.core.first(s1);
var G__15637 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15636,G__15637) : f.call(null,G__15636,G__15637));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__15638 = cljs.core.first(s1);
var G__15639 = cljs.core.first(s2);
var G__15640 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15638,G__15639,G__15640) : f.call(null,G__15638,G__15639,G__15640));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__15651__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__15588_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__15588_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__15651 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15652__i = 0, G__15652__a = new Array(arguments.length -  4);
while (G__15652__i < G__15652__a.length) {G__15652__a[G__15652__i] = arguments[G__15652__i + 4]; ++G__15652__i;}
  colls = new cljs.core.IndexedSeq(G__15652__a,0);
} 
return G__15651__delegate.call(this,f,c1,c2,c3,colls);};
G__15651.cljs$lang$maxFixedArity = 4;
G__15651.cljs$lang$applyTo = (function (arglist__15653){
var f = cljs.core.first(arglist__15653);
arglist__15653 = cljs.core.next(arglist__15653);
var c1 = cljs.core.first(arglist__15653);
arglist__15653 = cljs.core.next(arglist__15653);
var c2 = cljs.core.first(arglist__15653);
arglist__15653 = cljs.core.next(arglist__15653);
var c3 = cljs.core.first(arglist__15653);
var colls = cljs.core.rest(arglist__15653);
return G__15651__delegate(f,c1,c2,c3,colls);
});
G__15651.cljs$core$IFn$_invoke$arity$variadic = G__15651__delegate;
return G__15651;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__15654 = null;
if (arguments.length > 4) {
var G__15655__i = 0, G__15655__a = new Array(arguments.length -  4);
while (G__15655__i < G__15655__a.length) {G__15655__a[G__15655__i] = arguments[G__15655__i + 4]; ++G__15655__i;}
G__15654 = new cljs.core.IndexedSeq(G__15655__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__15664 = null;
var G__15664__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15664__1 = (function (result){
var G__15661 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15661) : rf.call(null,G__15661));
});
var G__15664__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__15662 = result;
var G__15663 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15662,G__15663) : rf.call(null,G__15662,G__15663));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__15664 = function(result,input){
switch(arguments.length){
case 0:
return G__15664__0.call(this);
case 1:
return G__15664__1.call(this,result);
case 2:
return G__15664__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15664.cljs$core$IFn$_invoke$arity$0 = G__15664__0;
G__15664.cljs$core$IFn$_invoke$arity$1 = G__15664__1;
G__15664.cljs$core$IFn$_invoke$arity$2 = G__15664__2;
return G__15664;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__15671 = null;
var G__15671__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15671__1 = (function (result){
var G__15668 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15668) : rf.call(null,G__15668));
});
var G__15671__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__15669 = result;
var G__15670 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15669,G__15670) : rf.call(null,G__15669,G__15670));
}
});
G__15671 = function(result,input){
switch(arguments.length){
case 0:
return G__15671__0.call(this);
case 1:
return G__15671__1.call(this,result);
case 2:
return G__15671__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15671.cljs$core$IFn$_invoke$arity$0 = G__15671__0;
G__15671.cljs$core$IFn$_invoke$arity$1 = G__15671__1;
G__15671.cljs$core$IFn$_invoke$arity$2 = G__15671__2;
return G__15671;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__15672 = (n__$1 - (1));
var G__15673 = cljs.core.rest(s);
n__$1 = G__15672;
coll__$1 = G__15673;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__15676 = cljs.core.next(s);
var G__15677 = cljs.core.next(lead);
s = G__15676;
lead = G__15677;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__15690 = null;
var G__15690__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15690__1 = (function (result){
var G__15684 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15684) : rf.call(null,G__15684));
});
var G__15690__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3746__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3746__auto__)){
var G__15685 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15685) : pred.call(null,G__15685));
} else {
return and__3746__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__15686 = result;
var G__15687 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15686,G__15687) : rf.call(null,G__15686,G__15687));
}
});
G__15690 = function(result,input){
switch(arguments.length){
case 0:
return G__15690__0.call(this);
case 1:
return G__15690__1.call(this,result);
case 2:
return G__15690__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15690.cljs$core$IFn$_invoke$arity$0 = G__15690__0;
G__15690.cljs$core$IFn$_invoke$arity$1 = G__15690__1;
G__15690.cljs$core$IFn$_invoke$arity$2 = G__15690__2;
return G__15690;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3746__auto__ = s;
if(and__3746__auto__){
var G__15689 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__15689) : pred__$1.call(null,G__15689));
} else {
return and__3746__auto__;
}
})())){
var G__15691 = pred__$1;
var G__15692 = cljs.core.rest(s);
pred__$1 = G__15691;
coll__$1 = G__15692;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__15701 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15701) : f.call(null,G__15701));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__15704__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__15704 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__15705__i = 0, G__15705__a = new Array(arguments.length -  2);
while (G__15705__i < G__15705__a.length) {G__15705__a[G__15705__i] = arguments[G__15705__i + 2]; ++G__15705__i;}
  colls = new cljs.core.IndexedSeq(G__15705__a,0);
} 
return G__15704__delegate.call(this,c1,c2,colls);};
G__15704.cljs$lang$maxFixedArity = 2;
G__15704.cljs$lang$applyTo = (function (arglist__15706){
var c1 = cljs.core.first(arglist__15706);
arglist__15706 = cljs.core.next(arglist__15706);
var c2 = cljs.core.first(arglist__15706);
var colls = cljs.core.rest(arglist__15706);
return G__15704__delegate(c1,c2,colls);
});
G__15704.cljs$core$IFn$_invoke$arity$variadic = G__15704__delegate;
return G__15704;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__15707 = null;
if (arguments.length > 2) {
var G__15708__i = 0, G__15708__a = new Array(arguments.length -  2);
while (G__15708__i < G__15708__a.length) {G__15708__a[G__15708__i] = arguments[G__15708__i + 2]; ++G__15708__i;}
G__15707 = new cljs.core.IndexedSeq(G__15708__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__15707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__15723 = null;
var G__15723__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15723__1 = (function (result){
var G__15716 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15716) : rf.call(null,G__15716));
});
var G__15723__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__15717 = result;
var G__15718 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15717,G__15718) : rf.call(null,G__15717,G__15718));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__15719 = sepr;
var G__15720 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15719,G__15720) : rf.call(null,G__15719,G__15720));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__15721 = result;
var G__15722 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15721,G__15722) : rf.call(null,G__15721,G__15722));
}
});
G__15723 = function(result,input){
switch(arguments.length){
case 0:
return G__15723__0.call(this);
case 1:
return G__15723__1.call(this,result);
case 2:
return G__15723__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15723.cljs$core$IFn$_invoke$arity$0 = G__15723__0;
G__15723.cljs$core$IFn$_invoke$arity$1 = G__15723__1;
G__15723.cljs$core$IFn$_invoke$arity$2 = G__15723__2;
return G__15723;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__15732__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__15732 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__15733__i = 0, G__15733__a = new Array(arguments.length -  1);
while (G__15733__i < G__15733__a.length) {G__15733__a[G__15733__i] = arguments[G__15733__i + 1]; ++G__15733__i;}
  colls = new cljs.core.IndexedSeq(G__15733__a,0);
} 
return G__15732__delegate.call(this,f,colls);};
G__15732.cljs$lang$maxFixedArity = 1;
G__15732.cljs$lang$applyTo = (function (arglist__15734){
var f = cljs.core.first(arglist__15734);
var colls = cljs.core.rest(arglist__15734);
return G__15732__delegate(f,colls);
});
G__15732.cljs$core$IFn$_invoke$arity$variadic = G__15732__delegate;
return G__15732;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__15735 = null;
if (arguments.length > 1) {
var G__15736__i = 0, G__15736__a = new Array(arguments.length -  1);
while (G__15736__i < G__15736__a.length) {G__15736__a[G__15736__i] = arguments[G__15736__i + 1]; ++G__15736__i;}
G__15735 = new cljs.core.IndexedSeq(G__15736__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__15755 = null;
var G__15755__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15755__1 = (function (result){
var G__15749 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15749) : rf.call(null,G__15749));
});
var G__15755__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15750 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15750) : pred.call(null,G__15750));
})())){
var G__15751 = result;
var G__15752 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15751,G__15752) : rf.call(null,G__15751,G__15752));
} else {
return result;
}
});
G__15755 = function(result,input){
switch(arguments.length){
case 0:
return G__15755__0.call(this);
case 1:
return G__15755__1.call(this,result);
case 2:
return G__15755__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15755.cljs$core$IFn$_invoke$arity$0 = G__15755__0;
G__15755.cljs$core$IFn$_invoke$arity$1 = G__15755__1;
G__15755.cljs$core$IFn$_invoke$arity$2 = G__15755__2;
return G__15755;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4645__auto___15756 = size;
var i_15757 = (0);
while(true){
if((i_15757 < n__4645__auto___15756)){
if(cljs.core.truth_((function (){var G__15753 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15757);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15753) : pred.call(null,G__15753));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15757));
} else {
}

var G__15758 = (i_15757 + (1));
i_15757 = G__15758;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__15754 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15754) : pred.call(null,G__15754));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__15765 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__15765) : branch_QMARK_.call(null,G__15765));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__15766 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__15766) : children.call(null,G__15766));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__15767_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__15767_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__15770 = to;
if(G__15770){
var bit__4432__auto__ = (G__15770.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4432__auto__) || (G__15770.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__15771 = to;
if(G__15771){
var bit__4432__auto__ = (G__15771.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4432__auto__) || (G__15771.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__15773 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15773) : f.call(null,G__15773));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__15774__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__15774 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15775__i = 0, G__15775__a = new Array(arguments.length -  4);
while (G__15775__i < G__15775__a.length) {G__15775__a[G__15775__i] = arguments[G__15775__i + 4]; ++G__15775__i;}
  colls = new cljs.core.IndexedSeq(G__15775__a,0);
} 
return G__15774__delegate.call(this,f,c1,c2,c3,colls);};
G__15774.cljs$lang$maxFixedArity = 4;
G__15774.cljs$lang$applyTo = (function (arglist__15776){
var f = cljs.core.first(arglist__15776);
arglist__15776 = cljs.core.next(arglist__15776);
var c1 = cljs.core.first(arglist__15776);
arglist__15776 = cljs.core.next(arglist__15776);
var c2 = cljs.core.first(arglist__15776);
arglist__15776 = cljs.core.next(arglist__15776);
var c3 = cljs.core.first(arglist__15776);
var colls = cljs.core.rest(arglist__15776);
return G__15774__delegate(f,c1,c2,c3,colls);
});
G__15774.cljs$core$IFn$_invoke$arity$variadic = G__15774__delegate;
return G__15774;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__15777 = null;
if (arguments.length > 4) {
var G__15778__i = 0, G__15778__a = new Array(arguments.length -  4);
while (G__15778__i < G__15778__a.length) {G__15778__a[G__15778__i] = arguments[G__15778__i + 4]; ++G__15778__i;}
G__15777 = new cljs.core.IndexedSeq(G__15778__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__15780 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15780) : pred.call(null,G__15780));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__15795 = m__$1;
if(G__15795){
var bit__4439__auto__ = (G__15795.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4439__auto__) || (G__15795.cljs$core$ILookup$)){
return true;
} else {
if((!G__15795.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15795);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15795);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__15796 = sentinel;
var G__15797 = m__$2;
var G__15798 = cljs.core.next(ks__$1);
sentinel = G__15796;
m__$1 = G__15797;
ks__$1 = G__15798;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__15799,v){
var vec__15804 = p__15799;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15804,(0),null);
var ks = cljs.core.nthnext(vec__15804,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__15805,f){
var vec__15843 = p__15805;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15843,(0),null);
var ks = cljs.core.nthnext(vec__15843,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15844 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15844) : f.call(null,G__15844));
})());
}
});
var update_in__4 = (function (m,p__15806,f,a){
var vec__15845 = p__15806;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15845,(0),null);
var ks = cljs.core.nthnext(vec__15845,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15846 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15847 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15846,G__15847) : f.call(null,G__15846,G__15847));
})());
}
});
var update_in__5 = (function (m,p__15807,f,a,b){
var vec__15848 = p__15807;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15848,(0),null);
var ks = cljs.core.nthnext(vec__15848,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15849 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15850 = a;
var G__15851 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15849,G__15850,G__15851) : f.call(null,G__15849,G__15850,G__15851));
})());
}
});
var update_in__6 = (function (m,p__15808,f,a,b,c){
var vec__15852 = p__15808;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15852,(0),null);
var ks = cljs.core.nthnext(vec__15852,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15853 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15854 = a;
var G__15855 = b;
var G__15856 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15853,G__15854,G__15855,G__15856) : f.call(null,G__15853,G__15854,G__15855,G__15856));
})());
}
});
var update_in__7 = (function() { 
var G__15858__delegate = function (m,p__15809,f,a,b,c,args){
var vec__15857 = p__15809;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15857,(0),null);
var ks = cljs.core.nthnext(vec__15857,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__15858 = function (m,p__15809,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__15859__i = 0, G__15859__a = new Array(arguments.length -  6);
while (G__15859__i < G__15859__a.length) {G__15859__a[G__15859__i] = arguments[G__15859__i + 6]; ++G__15859__i;}
  args = new cljs.core.IndexedSeq(G__15859__a,0);
} 
return G__15858__delegate.call(this,m,p__15809,f,a,b,c,args);};
G__15858.cljs$lang$maxFixedArity = 6;
G__15858.cljs$lang$applyTo = (function (arglist__15860){
var m = cljs.core.first(arglist__15860);
arglist__15860 = cljs.core.next(arglist__15860);
var p__15809 = cljs.core.first(arglist__15860);
arglist__15860 = cljs.core.next(arglist__15860);
var f = cljs.core.first(arglist__15860);
arglist__15860 = cljs.core.next(arglist__15860);
var a = cljs.core.first(arglist__15860);
arglist__15860 = cljs.core.next(arglist__15860);
var b = cljs.core.first(arglist__15860);
arglist__15860 = cljs.core.next(arglist__15860);
var c = cljs.core.first(arglist__15860);
var args = cljs.core.rest(arglist__15860);
return G__15858__delegate(m,p__15809,f,a,b,c,args);
});
G__15858.cljs$core$IFn$_invoke$arity$variadic = G__15858__delegate;
return G__15858;
})()
;
update_in = function(m,p__15809,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__15809,f);
case 4:
return update_in__4.call(this,m,p__15809,f,a);
case 5:
return update_in__5.call(this,m,p__15809,f,a,b);
case 6:
return update_in__6.call(this,m,p__15809,f,a,b,c);
default:
var G__15861 = null;
if (arguments.length > 6) {
var G__15862__i = 0, G__15862__a = new Array(arguments.length -  6);
while (G__15862__i < G__15862__a.length) {G__15862__a[G__15862__i] = arguments[G__15862__i + 6]; ++G__15862__i;}
G__15861 = new cljs.core.IndexedSeq(G__15862__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__15809,f,a,b,c, G__15861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15873 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15873) : f.call(null,G__15873));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15874 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15875 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15874,G__15875) : f.call(null,G__15874,G__15875));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15876 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15877 = x;
var G__15878 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15876,G__15877,G__15878) : f.call(null,G__15876,G__15877,G__15878));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15879 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15880 = x;
var G__15881 = y;
var G__15882 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15879,G__15880,G__15881,G__15882) : f.call(null,G__15879,G__15880,G__15881,G__15882));
})());
});
var update__7 = (function() { 
var G__15883__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__15883 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__15884__i = 0, G__15884__a = new Array(arguments.length -  6);
while (G__15884__i < G__15884__a.length) {G__15884__a[G__15884__i] = arguments[G__15884__i + 6]; ++G__15884__i;}
  more = new cljs.core.IndexedSeq(G__15884__a,0);
} 
return G__15883__delegate.call(this,m,k,f,x,y,z,more);};
G__15883.cljs$lang$maxFixedArity = 6;
G__15883.cljs$lang$applyTo = (function (arglist__15885){
var m = cljs.core.first(arglist__15885);
arglist__15885 = cljs.core.next(arglist__15885);
var k = cljs.core.first(arglist__15885);
arglist__15885 = cljs.core.next(arglist__15885);
var f = cljs.core.first(arglist__15885);
arglist__15885 = cljs.core.next(arglist__15885);
var x = cljs.core.first(arglist__15885);
arglist__15885 = cljs.core.next(arglist__15885);
var y = cljs.core.first(arglist__15885);
arglist__15885 = cljs.core.next(arglist__15885);
var z = cljs.core.first(arglist__15885);
var more = cljs.core.rest(arglist__15885);
return G__15883__delegate(m,k,f,x,y,z,more);
});
G__15883.cljs$core$IFn$_invoke$arity$variadic = G__15883__delegate;
return G__15883;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__15886 = null;
if (arguments.length > 6) {
var G__15887__i = 0, G__15887__a = new Array(arguments.length -  6);
while (G__15887__i < G__15887__a.length) {G__15887__a[G__15887__i] = arguments[G__15887__i + 6]; ++G__15887__i;}
G__15886 = new cljs.core.IndexedSeq(G__15887__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__15886);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__15888 = (ll - (5));
var G__15889 = r;
ll = G__15888;
ret = G__15889;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15894 = cljs.core.pv_aget(node,(0));
var G__15895 = (level - (5));
node = G__15894;
level = G__15895;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15896 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__15897 = (level - (5));
node = G__15896;
level = G__15897;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15907 = init__$2;
var G__15908 = (j + i);
var G__15909 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15907,G__15908,G__15909) : f.call(null,G__15907,G__15908,G__15909));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15920 = (j + (1));
var G__15921 = init__$3;
j = G__15920;
init__$2 = G__15921;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15910 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15910) : cljs.core.deref.call(null,G__15910));
} else {
var G__15922 = (i + len);
var G__15923 = init__$2;
i = G__15922;
init__$1 = G__15923;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__15911 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15911) : cljs.core.tv_editable_root.call(null,G__15911));
})(),(function (){var G__15912 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15912) : cljs.core.tv_editable_tail.call(null,G__15912));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15913 = init__$2;
var G__15914 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15913,G__15914) : f.call(null,G__15913,G__15914));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15924 = (j + (1));
var G__15925 = init__$3;
j = G__15924;
init__$2 = G__15925;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15915 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15915) : cljs.core.deref.call(null,G__15915));
} else {
var G__15926 = (i + len);
var G__15927 = init__$2;
i = G__15926;
init__$1 = G__15927;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__15916 = coll__$1;
var G__15917 = cljs.core.first_array_for_longvec(coll__$1);
var G__15918 = (0);
var G__15919 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15916,G__15917,G__15918,G__15919) : cljs.core.chunked_seq.call(null,G__15916,G__15917,G__15918,G__15919));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4645__auto___15928 = len;
var i_15929 = (0);
while(true){
if((i_15929 < n__4645__auto___15928)){
(new_tail[i_15929] = (self__.tail[i_15929]));

var G__15930 = (i_15929 + (1));
i_15929 = G__15930;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__15931 = null;
var G__15931__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15931__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15931 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15931__2.call(this,self__,k);
case 3:
return G__15931__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15931.cljs$core$IFn$_invoke$arity$2 = G__15931__2;
G__15931.cljs$core$IFn$_invoke$arity$3 = G__15931__3;
return G__15931;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args15906){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15906)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__15932 = (i + (1));
var G__15933 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__15932;
out = G__15933;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15934__i = 0, G__15934__a = new Array(arguments.length -  0);
while (G__15934__i < G__15934__a.length) {G__15934__a[G__15934__i] = arguments[G__15934__i + 0]; ++G__15934__i;}
  args = new cljs.core.IndexedSeq(G__15934__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__15935){
var args = cljs.core.seq(arglist__15935);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15936 = self__.vec;
var G__15937 = self__.node;
var G__15938 = self__.i;
var G__15939 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15936,G__15937,G__15938,G__15939) : cljs.core.chunked_seq.call(null,G__15936,G__15937,G__15938,G__15939));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__15940 = self__.vec;
var G__15941 = (self__.i + self__.off);
var G__15942 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15940,G__15941,G__15942) : cljs.core.subvec.call(null,G__15940,G__15941,G__15942));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__15943 = self__.vec;
var G__15944 = (self__.i + self__.off);
var G__15945 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15943,G__15944,G__15945) : cljs.core.subvec.call(null,G__15943,G__15944,G__15945));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15946 = self__.vec;
var G__15947 = self__.node;
var G__15948 = self__.i;
var G__15949 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15946,G__15947,G__15948,G__15949) : cljs.core.chunked_seq.call(null,G__15946,G__15947,G__15948,G__15949));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15950 = self__.vec;
var G__15951 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15952 = end;
var G__15953 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15950,G__15951,G__15952,G__15953) : cljs.core.chunked_seq.call(null,G__15950,G__15951,G__15952,G__15953));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__15954 = self__.vec;
var G__15955 = self__.node;
var G__15956 = self__.i;
var G__15957 = self__.off;
var G__15958 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15954,G__15955,G__15956,G__15957,G__15958) : cljs.core.chunked_seq.call(null,G__15954,G__15955,G__15956,G__15957,G__15958));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15959 = self__.vec;
var G__15960 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15961 = end;
var G__15962 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15959,G__15960,G__15961,G__15962) : cljs.core.chunked_seq.call(null,G__15959,G__15960,G__15961,G__15962));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__15964 = self__.meta;
var G__15965 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__15966 = self__.start;
var G__15967 = (function (){var x__4075__auto__ = self__.end;
var y__4076__auto__ = (v_pos + (1));
return ((x__4075__auto__ > y__4076__auto__) ? x__4075__auto__ : y__4076__auto__);
})();
var G__15968 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15964,G__15965,G__15966,G__15967,G__15968) : cljs.core.build_subvec.call(null,G__15964,G__15965,G__15966,G__15967,G__15968));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__15969 = self__.meta;
var G__15970 = self__.v;
var G__15971 = self__.start;
var G__15972 = (self__.end - (1));
var G__15973 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15969,G__15970,G__15971,G__15972,G__15973) : cljs.core.build_subvec.call(null,G__15969,G__15970,G__15971,G__15972,G__15973));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__15975 = meta__$1;
var G__15976 = self__.v;
var G__15977 = self__.start;
var G__15978 = self__.end;
var G__15979 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15975,G__15976,G__15977,G__15978,G__15979) : cljs.core.build_subvec.call(null,G__15975,G__15976,G__15977,G__15978,G__15979));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15980 = self__.meta;
var G__15981 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__15982 = self__.start;
var G__15983 = (self__.end + (1));
var G__15984 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15980,G__15981,G__15982,G__15983,G__15984) : cljs.core.build_subvec.call(null,G__15980,G__15981,G__15982,G__15983,G__15984));
});

cljs.core.Subvec.prototype.call = (function() {
var G__15985 = null;
var G__15985__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15985__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15985 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15985__2.call(this,self__,k);
case 3:
return G__15985__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15985.cljs$core$IFn$_invoke$arity$2 = G__15985__2;
G__15985.cljs$core$IFn$_invoke$arity$3 = G__15985__3;
return G__15985;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args15963){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15963)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__15986 = meta;
var G__15987 = v.v;
var G__15988 = (v.start + start);
var G__15989 = (v.start + end);
var G__15990 = __hash;
meta = G__15986;
v = G__15987;
start = G__15988;
end = G__15989;
__hash = G__15990;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj15997 = {};
return obj15997;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__16005 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__16006 = (level - (5));
node = G__16005;
level = G__16006;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__16010 = null;
var G__16010__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16010__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16010 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16010__2.call(this,self__,k);
case 3:
return G__16010__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16010.cljs$core$IFn$_invoke$arity$2 = G__16010__2;
G__16010.cljs$core$IFn$_invoke$arity$3 = G__16010__3;
return G__16010;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args16007){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16007)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3758__auto__ = self__.front;
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3758__auto__ = self__.rear;
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__16011 = (i + incr);
i = G__16011;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__16012 = (i + (1));
var G__16013 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__16012;
out = G__16013;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj16017 = {};
return obj16017;
})();
var l = ks.length;
var i_16018 = (0);
while(true){
if((i_16018 < l)){
var k_16019 = (ks[i_16018]);
(new_obj[k_16019] = (obj[k_16019]));

var G__16020 = (i_16018 + (1));
i_16018 = G__16020;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3746__auto__ = (function (){var G__16024 = k;
return goog.isString(G__16024);
})();
if(cljs.core.truth_(and__3746__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3746__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__16025 = init__$1;
var G__16026 = k;
var G__16027 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16025,G__16026,G__16027) : f.call(null,G__16025,G__16026,G__16027));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16028 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16028) : cljs.core.deref.call(null,G__16028));
} else {
var G__16034 = cljs.core.rest(keys__$1);
var G__16035 = init__$2;
keys__$1 = G__16034;
init__$1 = G__16035;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3746__auto__ = (function (){var G__16030 = k;
return goog.isString(G__16030);
})();
if(cljs.core.truth_(and__3746__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3746__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__16031 = k;
return goog.isString(G__16031);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3746__auto__ = (function (){var G__16033 = k;
return goog.isString(G__16033);
})();
if(cljs.core.truth_(and__3746__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3746__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__16021_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__16021_SHARP_,(self__.strobj[p1__16021_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__16036 = null;
var G__16036__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16036__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16036 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16036__2.call(this,self__,k);
case 3:
return G__16036__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16036.cljs$core$IFn$_invoke$arity$2 = G__16036__2;
G__16036.cljs$core$IFn$_invoke$arity$3 = G__16036__3;
return G__16036;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args16022){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16022)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj16038 = {};
return obj16038;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__16039 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16039,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16039,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__16040 = (i + (2));
i = G__16040;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__16041 = (i + (2));
i = G__16041;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__16042 = (i + (2));
i = G__16042;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__16043 = (i + (2));
i = G__16043;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__16044 = (i + (2));
i = G__16044;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3758__auto__ = (function (){var G__16048 = k;
return goog.isString(G__16048);
})();
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_16049 = (0);
while(true){
if((i_16049 < l)){
(narr[i_16049] = (arr[i_16049]));

var G__16050 = (i_16049 + (1));
i_16049 = G__16050;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16052 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16052) : cljs.core.keys.call(null,G__16052));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16053 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16053) : cljs.core.vals.call(null,G__16053));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16054 = cljs.core.seq(coll);
var chunk__16055 = null;
var count__16056 = (0);
var i__16057 = (0);
while(true){
if((i__16057 < count__16056)){
var vec__16058 = chunk__16055.cljs$core$IIndexed$_nth$arity$2(null,i__16057);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16058,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16058,(1),null);
var G__16059_16072 = v;
var G__16060_16073 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16059_16072,G__16060_16073) : f.call(null,G__16059_16072,G__16060_16073));

var G__16074 = seq__16054;
var G__16075 = chunk__16055;
var G__16076 = count__16056;
var G__16077 = (i__16057 + (1));
seq__16054 = G__16074;
chunk__16055 = G__16075;
count__16056 = G__16076;
i__16057 = G__16077;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16054);
if(temp__4126__auto__){
var seq__16054__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16054__$1)){
var c__4545__auto__ = cljs.core.chunk_first(seq__16054__$1);
var G__16078 = cljs.core.chunk_rest(seq__16054__$1);
var G__16079 = c__4545__auto__;
var G__16080 = cljs.core.count(c__4545__auto__);
var G__16081 = (0);
seq__16054 = G__16078;
chunk__16055 = G__16079;
count__16056 = G__16080;
i__16057 = G__16081;
continue;
} else {
var vec__16061 = cljs.core.first(seq__16054__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16061,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16061,(1),null);
var G__16062_16082 = v;
var G__16063_16083 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16062_16082,G__16063_16083) : f.call(null,G__16062_16082,G__16063_16083));

var G__16084 = cljs.core.next(seq__16054__$1);
var G__16085 = null;
var G__16086 = (0);
var G__16087 = (0);
seq__16054 = G__16084;
chunk__16055 = G__16085;
count__16056 = G__16086;
i__16057 = G__16087;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__16064 = init__$1;
var G__16065 = (self__.arr[i]);
var G__16066 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16064,G__16065,G__16066) : f.call(null,G__16064,G__16065,G__16066));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16067 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16067) : cljs.core.deref.call(null,G__16067));
} else {
var G__16088 = (i + (2));
var G__16089 = init__$2;
i = G__16088;
init__$1 = G__16089;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__16068 = other;
if(G__16068){
var bit__4432__auto__ = (G__16068.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4432__auto__) || (G__16068.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__16090 = (i + (2));
i = G__16090;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj16070 = {};
return obj16070;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__16091 = (s + (2));
var G__16092 = d;
s = G__16091;
d = G__16092;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__16093 = (s + (2));
var G__16094 = (d + (2));
s = G__16093;
d = G__16094;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__16071 = cljs.core.aclone(self__.arr);
(G__16071[(idx + (1))] = v);

return G__16071;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16095 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16096 = cljs.core.next(es);
ret = G__16095;
es = G__16096;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__16097 = null;
var G__16097__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16097__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16097 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16097__2.call(this,self__,k);
case 3:
return G__16097__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16097.cljs$core$IFn$_invoke$arity$2 = G__16097__2;
G__16097.cljs$core$IFn$_invoke$arity$3 = G__16097__3;
return G__16097;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args16051){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16051)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__16098 = (i + (2));
var G__16099 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16098;
ret = G__16099;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__16100_16108 = self__.arr;
G__16100_16108.pop();

G__16100_16108.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__16101 = self__.len;
var G__16102 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__16101,G__16102) : cljs.core.array__GT_transient_hash_map.call(null,G__16101,G__16102));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__16103 = o;
if(G__16103){
var bit__4439__auto__ = (G__16103.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4439__auto__) || (G__16103.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16103.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16103);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16103);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__16104 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16104) : cljs.core.key.call(null,G__16104));
})(),(function (){var G__16105 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16105) : cljs.core.val.call(null,G__16105));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__16109 = cljs.core.next(es);
var G__16110 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__16106 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16106) : cljs.core.key.call(null,G__16106));
})(),(function (){var G__16107 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16107) : cljs.core.val.call(null,G__16107));
})());
es = G__16109;
tcoll__$2 = G__16110;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__16111 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__16112 = (i + (2));
out = G__16111;
i = G__16112;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__16115 = cljs.core.aclone(arr);
(G__16115[i] = a);

return G__16115;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__16116 = cljs.core.aclone(arr);
(G__16116[i] = a);

(G__16116[j] = b);

return G__16116;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__16121 = init__$1;
var G__16122 = k;
var G__16123 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16121,G__16122,G__16123) : f.call(null,G__16121,G__16122,G__16123));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16124 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16124) : cljs.core.deref.call(null,G__16124));
} else {
var G__16125 = (i + (2));
var G__16126 = init__$2;
i = G__16125;
init__$1 = G__16126;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16127 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16127) : cljs.core.create_inode_seq.call(null,G__16127));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_16141 = (0);
var j_16142 = (0);
while(true){
if((i_16141 < (32))){
if((((self__.bitmap >>> i_16141) & (1)) === (0))){
var G__16143 = (i_16141 + (1));
var G__16144 = j_16142;
i_16141 = G__16143;
j_16142 = G__16144;
continue;
} else {
(nodes[i_16141] = ((!(((self__.arr[j_16142]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_16142])),(self__.arr[j_16142]),(self__.arr[(j_16142 + (1))]),added_leaf_QMARK_):(self__.arr[(j_16142 + (1))])));

var G__16145 = (i_16141 + (1));
var G__16146 = (j_16142 + (2));
i_16141 = G__16145;
j_16142 = G__16146;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__16128 = edit__$1;
var G__16129 = (shift + (5));
var G__16130 = key_or_nil;
var G__16131 = val_or_node;
var G__16132 = hash;
var G__16133 = key;
var G__16134 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__16128,G__16129,G__16130,G__16131,G__16132,G__16133,G__16134) : cljs.core.create_node.call(null,G__16128,G__16129,G__16130,G__16131,G__16132,G__16133,G__16134));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_16147 = (0);
var j_16148 = (0);
while(true){
if((i_16147 < (32))){
if((((self__.bitmap >>> i_16147) & (1)) === (0))){
var G__16149 = (i_16147 + (1));
var G__16150 = j_16148;
i_16147 = G__16149;
j_16148 = G__16150;
continue;
} else {
(nodes[i_16147] = ((!(((self__.arr[j_16148]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_16148])),(self__.arr[j_16148]),(self__.arr[(j_16148 + (1))]),added_leaf_QMARK_):(self__.arr[(j_16148 + (1))])));

var G__16151 = (i_16147 + (1));
var G__16152 = (j_16148 + (2));
i_16147 = G__16151;
j_16148 = G__16152;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__16135 = (shift + (5));
var G__16136 = key_or_nil;
var G__16137 = val_or_node;
var G__16138 = hash;
var G__16139 = key;
var G__16140 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__16135,G__16136,G__16137,G__16138,G__16139,G__16140) : cljs.core.create_node.call(null,G__16135,G__16136,G__16137,G__16138,G__16139,G__16140));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__16153 = (i + (1));
var G__16154 = (j + (2));
var G__16155 = (bitmap | ((1) << i));
i = G__16153;
j = G__16154;
bitmap = G__16155;
continue;
} else {
var G__16156 = (i + (1));
var G__16157 = j;
var G__16158 = bitmap;
i = G__16156;
j = G__16157;
bitmap = G__16158;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16159 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__16159) : cljs.core.create_array_node_seq.call(null,G__16159));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16160 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16160) : cljs.core.deref.call(null,G__16160));
} else {
var G__16161 = (i + (1));
var G__16162 = init__$2;
i = G__16161;
init__$1 = G__16162;
continue;
}
} else {
var G__16163 = (i + (1));
var G__16164 = init__$1;
i = G__16163;
init__$1 = G__16164;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__16165 = (i + (2));
i = G__16165;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16166 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16166) : cljs.core.create_inode_seq.call(null,G__16166));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__16167 = self__.nodes;
var G__16168 = (self__.i + (2));
var G__16169 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16167,G__16168,G__16169) : cljs.core.create_inode_seq.call(null,G__16167,G__16168,G__16169));
} else {
var G__16170 = self__.nodes;
var G__16171 = self__.i;
var G__16172 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16170,G__16171,G__16172) : cljs.core.create_inode_seq.call(null,G__16170,G__16171,G__16172));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__16176 = (j + (2));
j = G__16176;
continue;
}
} else {
var G__16177 = (j + (2));
j = G__16177;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__16178 = null;
var G__16179 = self__.nodes;
var G__16180 = self__.i;
var G__16181 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__16178,G__16179,G__16180,G__16181) : cljs.core.create_array_node_seq.call(null,G__16178,G__16179,G__16180,G__16181));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__16186 = (j + (1));
j = G__16186;
continue;
}
} else {
var G__16187 = (j + (1));
j = G__16187;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16189 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16189) : cljs.core.keys.call(null,G__16189));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16190 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16190) : cljs.core.vals.call(null,G__16190));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16191 = cljs.core.seq(coll);
var chunk__16192 = null;
var count__16193 = (0);
var i__16194 = (0);
while(true){
if((i__16194 < count__16193)){
var vec__16195 = chunk__16192.cljs$core$IIndexed$_nth$arity$2(null,i__16194);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16195,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16195,(1),null);
var G__16196_16207 = v;
var G__16197_16208 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16196_16207,G__16197_16208) : f.call(null,G__16196_16207,G__16197_16208));

var G__16209 = seq__16191;
var G__16210 = chunk__16192;
var G__16211 = count__16193;
var G__16212 = (i__16194 + (1));
seq__16191 = G__16209;
chunk__16192 = G__16210;
count__16193 = G__16211;
i__16194 = G__16212;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16191);
if(temp__4126__auto__){
var seq__16191__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16191__$1)){
var c__4545__auto__ = cljs.core.chunk_first(seq__16191__$1);
var G__16213 = cljs.core.chunk_rest(seq__16191__$1);
var G__16214 = c__4545__auto__;
var G__16215 = cljs.core.count(c__4545__auto__);
var G__16216 = (0);
seq__16191 = G__16213;
chunk__16192 = G__16214;
count__16193 = G__16215;
i__16194 = G__16216;
continue;
} else {
var vec__16198 = cljs.core.first(seq__16191__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16198,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16198,(1),null);
var G__16199_16217 = v;
var G__16200_16218 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16199_16217,G__16200_16218) : f.call(null,G__16199_16217,G__16200_16218));

var G__16219 = cljs.core.next(seq__16191__$1);
var G__16220 = null;
var G__16221 = (0);
var G__16222 = (0);
seq__16191 = G__16219;
chunk__16192 = G__16220;
count__16193 = G__16221;
i__16194 = G__16222;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__16201 = init;
var G__16202 = null;
var G__16203 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16201,G__16202,G__16203) : f.call(null,G__16201,G__16202,G__16203));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16204 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16204) : cljs.core.deref.call(null,G__16204));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj16206 = {};
return obj16206;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16223 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16224 = cljs.core.next(es);
ret = G__16223;
es = G__16224;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__16225 = null;
var G__16225__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16225__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16225 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16225__2.call(this,self__,k);
case 3:
return G__16225__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16225.cljs$core$IFn$_invoke$arity$2 = G__16225__2;
G__16225.cljs$core$IFn$_invoke$arity$3 = G__16225__3;
return G__16225;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args16188){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16188)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16226 = (i + (2));
var G__16227 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16226;
ret = G__16227;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16228 = (i + (1));
var G__16229 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__16228;
out = G__16229;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__16230 = o;
if(G__16230){
var bit__4439__auto__ = (G__16230.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4439__auto__) || (G__16230.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16230.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16230);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16230);
}
})()){
return tcoll.assoc_BANG_((function (){var G__16231 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16231) : cljs.core.key.call(null,G__16231));
})(),(function (){var G__16232 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16232) : cljs.core.val.call(null,G__16232));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__16235 = cljs.core.next(es);
var G__16236 = tcoll__$1.assoc_BANG_((function (){var G__16233 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16233) : cljs.core.key.call(null,G__16233));
})(),(function (){var G__16234 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16234) : cljs.core.val.call(null,G__16234));
})());
es = G__16235;
tcoll__$1 = G__16236;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__16237 = ((ascending_QMARK_)?t.left:t.right);
var G__16238 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__16237;
stack__$1 = G__16238;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16251 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16251) : cljs.core.deref.call(null,G__16251));
} else {
var init__$2 = (function (){var G__16252 = init__$1;
var G__16253 = node.key;
var G__16254 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16252,G__16253,G__16254) : f.call(null,G__16252,G__16253,G__16254));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16255 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16255) : cljs.core.deref.call(null,G__16255));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__16256 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16256) : cljs.core.deref.call(null,G__16256));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__16258 = null;
var G__16258__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16258__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16258 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16258__2.call(this,self__,k);
case 3:
return G__16258__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16258.cljs$core$IFn$_invoke$arity$2 = G__16258__2;
G__16258.cljs$core$IFn$_invoke$arity$3 = G__16258__3;
return G__16258;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args16257){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16257)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__16260 = null;
var G__16260__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16260__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16260 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16260__2.call(this,self__,k);
case 3:
return G__16260__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16260.cljs$core$IFn$_invoke$arity$2 = G__16260__2;
G__16260.cljs$core$IFn$_invoke$arity$3 = G__16260__3;
return G__16260;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args16259){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16259)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__16273 = k;
var G__16274 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16273,G__16274) : comp.call(null,G__16273,G__16274));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__16293 = k;
var G__16294 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16293,G__16294) : comp.call(null,G__16293,G__16294));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__16305 = k;
var G__16306 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16305,G__16306) : comp.call(null,G__16305,G__16306));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16308 = cljs.core.seq(coll);
var chunk__16309 = null;
var count__16310 = (0);
var i__16311 = (0);
while(true){
if((i__16311 < count__16310)){
var vec__16312 = chunk__16309.cljs$core$IIndexed$_nth$arity$2(null,i__16311);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16312,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16312,(1),null);
var G__16313_16325 = v;
var G__16314_16326 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16313_16325,G__16314_16326) : f.call(null,G__16313_16325,G__16314_16326));

var G__16327 = seq__16308;
var G__16328 = chunk__16309;
var G__16329 = count__16310;
var G__16330 = (i__16311 + (1));
seq__16308 = G__16327;
chunk__16309 = G__16328;
count__16310 = G__16329;
i__16311 = G__16330;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16308);
if(temp__4126__auto__){
var seq__16308__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16308__$1)){
var c__4545__auto__ = cljs.core.chunk_first(seq__16308__$1);
var G__16331 = cljs.core.chunk_rest(seq__16308__$1);
var G__16332 = c__4545__auto__;
var G__16333 = cljs.core.count(c__4545__auto__);
var G__16334 = (0);
seq__16308 = G__16331;
chunk__16309 = G__16332;
count__16310 = G__16333;
i__16311 = G__16334;
continue;
} else {
var vec__16315 = cljs.core.first(seq__16308__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16315,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16315,(1),null);
var G__16316_16335 = v;
var G__16317_16336 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16316_16335,G__16317_16336) : f.call(null,G__16316_16335,G__16317_16336));

var G__16337 = cljs.core.next(seq__16308__$1);
var G__16338 = null;
var G__16339 = (0);
var G__16340 = (0);
seq__16308 = G__16337;
chunk__16309 = G__16338;
count__16310 = G__16339;
i__16311 = G__16340;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16318 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16318) : cljs.core.keys.call(null,G__16318));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16319 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16319) : cljs.core.vals.call(null,G__16319));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16320 = k;
var G__16321 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16320,G__16321) : self__.comp.call(null,G__16320,G__16321));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__16341 = t.left;
t = G__16341;
continue;
} else {
var G__16342 = t.right;
t = G__16342;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16343 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16344 = cljs.core.next(es);
ret = G__16343;
es = G__16344;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__16345 = null;
var G__16345__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16345__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16345 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16345__2.call(this,self__,k);
case 3:
return G__16345__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16345.cljs$core$IFn$_invoke$arity$2 = G__16345__2;
G__16345.cljs$core$IFn$_invoke$arity$3 = G__16345__3;
return G__16345;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args16307){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16307)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16322 = k;
var G__16323 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16322,G__16323) : self__.comp.call(null,G__16322,G__16323));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__16346 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16347 = t.left;
stack = G__16346;
t = G__16347;
continue;
} else {
var G__16348 = stack;
var G__16349 = t.right;
stack = G__16348;
t = G__16349;
continue;
}
} else {
if((c > (0))){
var G__16350 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16351 = t.right;
stack = G__16350;
t = G__16351;
continue;
} else {
var G__16352 = stack;
var G__16353 = t.left;
stack = G__16352;
t = G__16353;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__16324 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16324) : cljs.core.key.call(null,G__16324));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__16354 = cljs.core.nnext(in$);
var G__16355 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16354;
out = G__16355;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16356__i = 0, G__16356__a = new Array(arguments.length -  0);
while (G__16356__i < G__16356__a.length) {G__16356__a[G__16356__i] = arguments[G__16356__i + 0]; ++G__16356__i;}
  keyvals = new cljs.core.IndexedSeq(G__16356__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__16357){
var keyvals = cljs.core.seq(arglist__16357);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16358__i = 0, G__16358__a = new Array(arguments.length -  0);
while (G__16358__i < G__16358__a.length) {G__16358__a[G__16358__i] = arguments[G__16358__i + 0]; ++G__16358__i;}
  keyvals = new cljs.core.IndexedSeq(G__16358__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__16359){
var keyvals = cljs.core.seq(arglist__16359);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj16363 = {};
return obj16363;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__16364 = cljs.core.nnext(kvs);
kvs = G__16364;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16365__i = 0, G__16365__a = new Array(arguments.length -  0);
while (G__16365__i < G__16365__a.length) {G__16365__a[G__16365__i] = arguments[G__16365__i + 0]; ++G__16365__i;}
  keyvals = new cljs.core.IndexedSeq(G__16365__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__16366){
var keyvals = cljs.core.seq(arglist__16366);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__16367 = cljs.core.nnext(in$);
var G__16368 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16367;
out = G__16368;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16369__i = 0, G__16369__a = new Array(arguments.length -  0);
while (G__16369__i < G__16369__a.length) {G__16369__a[G__16369__i] = arguments[G__16369__i + 0]; ++G__16369__i;}
  keyvals = new cljs.core.IndexedSeq(G__16369__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__16370){
var keyvals = cljs.core.seq(arglist__16370);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__16371 = cljs.core.nnext(in$);
var G__16372 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16371;
out = G__16372;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__16373__i = 0, G__16373__a = new Array(arguments.length -  1);
while (G__16373__i < G__16373__a.length) {G__16373__a[G__16373__i] = arguments[G__16373__i + 1]; ++G__16373__i;}
  keyvals = new cljs.core.IndexedSeq(G__16373__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__16374){
var comparator = cljs.core.first(arglist__16374);
var keyvals = cljs.core.rest(arglist__16374);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16375 = self__.mseq;
if(G__16375){
var bit__4439__auto__ = (G__16375.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4439__auto__) || (G__16375.cljs$core$INext$)){
return true;
} else {
if((!G__16375.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16375);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16375);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16376 = self__.mseq;
if(G__16376){
var bit__4439__auto__ = (G__16376.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4439__auto__) || (G__16376.cljs$core$INext$)){
return true;
} else {
if((!G__16376.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16376);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16376);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16377 = self__.mseq;
if(G__16377){
var bit__4439__auto__ = (G__16377.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4439__auto__) || (G__16377.cljs$core$INext$)){
return true;
} else {
if((!G__16377.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16377);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16377);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16378 = self__.mseq;
if(G__16378){
var bit__4439__auto__ = (G__16378.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4439__auto__) || (G__16378.cljs$core$INext$)){
return true;
} else {
if((!G__16378.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16378);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16378);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__16379_SHARP_,p2__16380_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3758__auto__ = p1__16379_SHARP_;
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__16380_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__16381__i = 0, G__16381__a = new Array(arguments.length -  0);
while (G__16381__i < G__16381__a.length) {G__16381__a[G__16381__i] = arguments[G__16381__i + 0]; ++G__16381__i;}
  maps = new cljs.core.IndexedSeq(G__16381__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__16382){
var maps = cljs.core.seq(arglist__16382);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16385 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16386 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16385,G__16386) : f.call(null,G__16385,G__16386));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3758__auto__ = m1;
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__16387__i = 0, G__16387__a = new Array(arguments.length -  1);
while (G__16387__i < G__16387__a.length) {G__16387__a[G__16387__i] = arguments[G__16387__i + 1]; ++G__16387__i;}
  maps = new cljs.core.IndexedSeq(G__16387__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__16388){
var f = cljs.core.first(arglist__16388);
var maps = cljs.core.rest(arglist__16388);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__16389 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__16390 = cljs.core.next(keys);
ret = G__16389;
keys = G__16390;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16393 = cljs.core.seq(coll);
var chunk__16394 = null;
var count__16395 = (0);
var i__16396 = (0);
while(true){
if((i__16396 < count__16395)){
var vec__16397 = chunk__16394.cljs$core$IIndexed$_nth$arity$2(null,i__16396);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16397,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16397,(1),null);
var G__16398_16403 = v;
var G__16399_16404 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16398_16403,G__16399_16404) : f.call(null,G__16398_16403,G__16399_16404));

var G__16405 = seq__16393;
var G__16406 = chunk__16394;
var G__16407 = count__16395;
var G__16408 = (i__16396 + (1));
seq__16393 = G__16405;
chunk__16394 = G__16406;
count__16395 = G__16407;
i__16396 = G__16408;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16393);
if(temp__4126__auto__){
var seq__16393__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16393__$1)){
var c__4545__auto__ = cljs.core.chunk_first(seq__16393__$1);
var G__16409 = cljs.core.chunk_rest(seq__16393__$1);
var G__16410 = c__4545__auto__;
var G__16411 = cljs.core.count(c__4545__auto__);
var G__16412 = (0);
seq__16393 = G__16409;
chunk__16394 = G__16410;
count__16395 = G__16411;
i__16396 = G__16412;
continue;
} else {
var vec__16400 = cljs.core.first(seq__16393__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16400,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16400,(1),null);
var G__16401_16413 = v;
var G__16402_16414 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16401_16413,G__16402_16414) : f.call(null,G__16401_16413,G__16402_16414));

var G__16415 = cljs.core.next(seq__16393__$1);
var G__16416 = null;
var G__16417 = (0);
var G__16418 = (0);
seq__16393 = G__16415;
chunk__16394 = G__16416;
count__16395 = G__16417;
i__16396 = G__16418;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__16391_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__16391_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__16419 = null;
var G__16419__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16419__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16419 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16419__2.call(this,self__,k);
case 3:
return G__16419__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16419.cljs$core$IFn$_invoke$arity$2 = G__16419__2;
G__16419.cljs$core$IFn$_invoke$arity$3 = G__16419__3;
return G__16419;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args16392){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16392)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__16420 = (i + (1));
var G__16421 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__16420;
out = G__16421;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__16422 = (i + (1));
var G__16423 = cljs.core._conj_BANG_(out,(items[i]));
i = G__16422;
out = G__16423;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__16425 = null;
var G__16425__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__16425__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__16425 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16425__2.call(this,self__,k);
case 3:
return G__16425__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16425.cljs$core$IFn$_invoke$arity$2 = G__16425__2;
G__16425.cljs$core$IFn$_invoke$arity$3 = G__16425__3;
return G__16425;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args16424){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16424)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16428 = cljs.core.seq(coll);
var chunk__16429 = null;
var count__16430 = (0);
var i__16431 = (0);
while(true){
if((i__16431 < count__16430)){
var vec__16432 = chunk__16429.cljs$core$IIndexed$_nth$arity$2(null,i__16431);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16432,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16432,(1),null);
var G__16433_16438 = v;
var G__16434_16439 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16433_16438,G__16434_16439) : f.call(null,G__16433_16438,G__16434_16439));

var G__16440 = seq__16428;
var G__16441 = chunk__16429;
var G__16442 = count__16430;
var G__16443 = (i__16431 + (1));
seq__16428 = G__16440;
chunk__16429 = G__16441;
count__16430 = G__16442;
i__16431 = G__16443;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16428);
if(temp__4126__auto__){
var seq__16428__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16428__$1)){
var c__4545__auto__ = cljs.core.chunk_first(seq__16428__$1);
var G__16444 = cljs.core.chunk_rest(seq__16428__$1);
var G__16445 = c__4545__auto__;
var G__16446 = cljs.core.count(c__4545__auto__);
var G__16447 = (0);
seq__16428 = G__16444;
chunk__16429 = G__16445;
count__16430 = G__16446;
i__16431 = G__16447;
continue;
} else {
var vec__16435 = cljs.core.first(seq__16428__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16435,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16435,(1),null);
var G__16436_16448 = v;
var G__16437_16449 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16436_16448,G__16437_16449) : f.call(null,G__16436_16448,G__16437_16449));

var G__16450 = cljs.core.next(seq__16428__$1);
var G__16451 = null;
var G__16452 = (0);
var G__16453 = (0);
seq__16428 = G__16450;
chunk__16429 = G__16451;
count__16430 = G__16452;
i__16431 = G__16453;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__16426_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__16426_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__16454 = null;
var G__16454__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16454__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16454 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16454__2.call(this,self__,k);
case 3:
return G__16454__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16454.cljs$core$IFn$_invoke$arity$2 = G__16454__2;
G__16454.cljs$core$IFn$_invoke$arity$3 = G__16454__3;
return G__16454;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args16427){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16427)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4639__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4639__auto__.length)){
var G__16455 = (i + (1));
var G__16456 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__16455;
res = G__16456;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__16457 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__16458 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__16457;
out = G__16458;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__16459__delegate = function (keys){
return cljs.core.set(keys);
};
var G__16459 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16460__i = 0, G__16460__a = new Array(arguments.length -  0);
while (G__16460__i < G__16460__a.length) {G__16460__a[G__16460__i] = arguments[G__16460__i + 0]; ++G__16460__i;}
  keys = new cljs.core.IndexedSeq(G__16460__a,0);
} 
return G__16459__delegate.call(this,keys);};
G__16459.cljs$lang$maxFixedArity = 0;
G__16459.cljs$lang$applyTo = (function (arglist__16461){
var keys = cljs.core.seq(arglist__16461);
return G__16459__delegate(keys);
});
G__16459.cljs$core$IFn$_invoke$arity$variadic = G__16459__delegate;
return G__16459;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__16462 = null;
if (arguments.length > 0) {
var G__16463__i = 0, G__16463__a = new Array(arguments.length -  0);
while (G__16463__i < G__16463__a.length) {G__16463__a[G__16463__i] = arguments[G__16463__i + 0]; ++G__16463__i;}
G__16462 = new cljs.core.IndexedSeq(G__16463__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__16462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16464__i = 0, G__16464__a = new Array(arguments.length -  0);
while (G__16464__i < G__16464__a.length) {G__16464__a[G__16464__i] = arguments[G__16464__i + 0]; ++G__16464__i;}
  keys = new cljs.core.IndexedSeq(G__16464__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__16465){
var keys = cljs.core.seq(arglist__16465);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__16466__i = 0, G__16466__a = new Array(arguments.length -  1);
while (G__16466__i < G__16466__a.length) {G__16466__a[G__16466__i] = arguments[G__16466__i + 1]; ++G__16466__i;}
  keys = new cljs.core.IndexedSeq(G__16466__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__16467){
var comparator = cljs.core.first(arglist__16467);
var keys = cljs.core.rest(arglist__16467);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__16468_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__16468_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__16468_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__16469_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__16469_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__16469_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__16490 = null;
var G__16490__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16490__1 = (function (result){
var G__16480 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16480) : rf.call(null,G__16480));
});
var G__16490__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__16481 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16481) : cljs.core.deref.call(null,G__16481));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__16482 = result;
var G__16483 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16482,G__16483) : rf.call(null,G__16482,G__16483));
}
});
G__16490 = function(result,input){
switch(arguments.length){
case 0:
return G__16490__0.call(this);
case 1:
return G__16490__1.call(this,result);
case 2:
return G__16490__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16490.cljs$core$IFn$_invoke$arity$0 = G__16490__0;
G__16490.cljs$core$IFn$_invoke$arity$1 = G__16490__1;
G__16490.cljs$core$IFn$_invoke$arity$2 = G__16490__2;
return G__16490;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__16488,seen__$1){
while(true){
var vec__16489 = p__16488;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16489,(0),null);
var xs__$1 = vec__16489;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__16491 = cljs.core.rest(s);
var G__16492 = seen__$1;
p__16488 = G__16491;
seen__$1 = G__16492;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__16493 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__16494 = cljs.core.next(s__$1);
ret = G__16493;
s__$1 = G__16494;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__16496 = x;
if(G__16496){
var bit__4432__auto__ = (G__16496.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4432__auto__) || (G__16496.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__16497 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__16498 = cljs.core.next(ks);
var G__16499 = cljs.core.next(vs);
map = G__16497;
ks = G__16498;
vs = G__16499;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__16510 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16510) : k.call(null,G__16510));
})() > (function (){var G__16511 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16511) : k.call(null,G__16511));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__16512__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16500_SHARP_,p2__16501_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__16500_SHARP_,p2__16501_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16512 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16513__i = 0, G__16513__a = new Array(arguments.length -  3);
while (G__16513__i < G__16513__a.length) {G__16513__a[G__16513__i] = arguments[G__16513__i + 3]; ++G__16513__i;}
  more = new cljs.core.IndexedSeq(G__16513__a,0);
} 
return G__16512__delegate.call(this,k,x,y,more);};
G__16512.cljs$lang$maxFixedArity = 3;
G__16512.cljs$lang$applyTo = (function (arglist__16514){
var k = cljs.core.first(arglist__16514);
arglist__16514 = cljs.core.next(arglist__16514);
var x = cljs.core.first(arglist__16514);
arglist__16514 = cljs.core.next(arglist__16514);
var y = cljs.core.first(arglist__16514);
var more = cljs.core.rest(arglist__16514);
return G__16512__delegate(k,x,y,more);
});
G__16512.cljs$core$IFn$_invoke$arity$variadic = G__16512__delegate;
return G__16512;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__16515 = null;
if (arguments.length > 3) {
var G__16516__i = 0, G__16516__a = new Array(arguments.length -  3);
while (G__16516__i < G__16516__a.length) {G__16516__a[G__16516__i] = arguments[G__16516__i + 3]; ++G__16516__i;}
G__16515 = new cljs.core.IndexedSeq(G__16516__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16515);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__16527 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16527) : k.call(null,G__16527));
})() < (function (){var G__16528 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16528) : k.call(null,G__16528));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__16529__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16517_SHARP_,p2__16518_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__16517_SHARP_,p2__16518_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16529 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16530__i = 0, G__16530__a = new Array(arguments.length -  3);
while (G__16530__i < G__16530__a.length) {G__16530__a[G__16530__i] = arguments[G__16530__i + 3]; ++G__16530__i;}
  more = new cljs.core.IndexedSeq(G__16530__a,0);
} 
return G__16529__delegate.call(this,k,x,y,more);};
G__16529.cljs$lang$maxFixedArity = 3;
G__16529.cljs$lang$applyTo = (function (arglist__16531){
var k = cljs.core.first(arglist__16531);
arglist__16531 = cljs.core.next(arglist__16531);
var x = cljs.core.first(arglist__16531);
arglist__16531 = cljs.core.next(arglist__16531);
var y = cljs.core.first(arglist__16531);
var more = cljs.core.rest(arglist__16531);
return G__16529__delegate(k,x,y,more);
});
G__16529.cljs$core$IFn$_invoke$arity$variadic = G__16529__delegate;
return G__16529;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__16532 = null;
if (arguments.length > 3) {
var G__16533__i = 0, G__16533__a = new Array(arguments.length -  3);
while (G__16533__i < G__16533__a.length) {G__16533__a[G__16533__i] = arguments[G__16533__i + 3]; ++G__16533__i;}
G__16532 = new cljs.core.IndexedSeq(G__16533__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__16550 = null;
var G__16550__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16550__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16545 = result;
var G__16546 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16545,G__16546) : rf.call(null,G__16545,G__16546));
})());
})());
var G__16547 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16547) : rf.call(null,G__16547));
});
var G__16550__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__16548 = result;
var G__16549 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16548,G__16549) : rf.call(null,G__16548,G__16549));
} else {
return result;
}
});
G__16550 = function(result,input){
switch(arguments.length){
case 0:
return G__16550__0.call(this);
case 1:
return G__16550__1.call(this,result);
case 2:
return G__16550__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16550.cljs$core$IFn$_invoke$arity$0 = G__16550__0;
G__16550.cljs$core$IFn$_invoke$arity$1 = G__16550__1;
G__16550.cljs$core$IFn$_invoke$arity$2 = G__16550__2;
return G__16550;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__16563 = null;
var G__16563__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16563__1 = (function (result){
var G__16558 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16558) : rf.call(null,G__16558));
});
var G__16563__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16559 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16559) : pred.call(null,G__16559));
})())){
var G__16560 = result;
var G__16561 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16560,G__16561) : rf.call(null,G__16560,G__16561));
} else {
return cljs.core.reduced(result);
}
});
G__16563 = function(result,input){
switch(arguments.length){
case 0:
return G__16563__0.call(this);
case 1:
return G__16563__1.call(this,result);
case 2:
return G__16563__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16563.cljs$core$IFn$_invoke$arity$0 = G__16563__0;
G__16563.cljs$core$IFn$_invoke$arity$1 = G__16563__1;
G__16563.cljs$core$IFn$_invoke$arity$2 = G__16563__2;
return G__16563;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__16562 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16562) : pred.call(null,G__16562));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__16568 = (function (){var G__16570 = cljs.core._entry_key(sc,e);
var G__16571 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16570,G__16571) : comp.call(null,G__16570,G__16571));
})();
var G__16569 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16568,G__16569) : test.call(null,G__16568,G__16569));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16575 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16575,(0),null);
var s = vec__16575;
if(cljs.core.truth_((function (){var G__16576 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16576) : include.call(null,G__16576));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16577 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16577,(0),null);
var s = vec__16577;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16581 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16581,(0),null);
var s = vec__16581;
if(cljs.core.truth_((function (){var G__16582 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16582) : include.call(null,G__16582));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16583 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16583,(0),null);
var s = vec__16583;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__16584 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__16584) : Math.ceil.call(null,G__16584));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4179__auto__ = self__.__hash;
if(!((h__4179__auto__ == null))){
return h__4179__auto__;
} else {
var h__4179__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4179__auto____$1;

return h__4179__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__16585 = ret;
var G__16586 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16585,G__16586) : f.call(null,G__16585,G__16586));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__16587 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16587) : cljs.core.deref.call(null,G__16587));
} else {
var G__16588 = (i + self__.step);
var G__16589 = ret__$1;
i = G__16588;
ret = G__16589;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__16607 = null;
var G__16607__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16607__1 = (function (result){
var G__16604 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16604) : rf.call(null,G__16604));
});
var G__16607__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__16605 = result;
var G__16606 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16605,G__16606) : rf.call(null,G__16605,G__16606));
} else {
return result;
}
});
G__16607 = function(result,input){
switch(arguments.length){
case 0:
return G__16607__0.call(this);
case 1:
return G__16607__1.call(this,result);
case 2:
return G__16607__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16607.cljs$core$IFn$_invoke$arity$0 = G__16607__0;
G__16607.cljs$core$IFn$_invoke$arity$1 = G__16607__1;
G__16607.cljs$core$IFn$_invoke$arity$2 = G__16607__2;
return G__16607;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__16629 = null;
var G__16629__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16629__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16620 = result;
var G__16621 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16620,G__16621) : rf.call(null,G__16620,G__16621));
})());
})());
var G__16622 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16622) : rf.call(null,G__16622));
});
var G__16629__2 = (function (result,input){
var pval = (function (){var G__16623 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16623) : cljs.core.deref.call(null,G__16623));
})();
var val = (function (){var G__16624 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16624) : f.call(null,G__16624));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__16625 = result;
var G__16626 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16625,G__16626) : rf.call(null,G__16625,G__16626));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__16629 = function(result,input){
switch(arguments.length){
case 0:
return G__16629__0.call(this);
case 1:
return G__16629__1.call(this,result);
case 2:
return G__16629__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16629.cljs$core$IFn$_invoke$arity$0 = G__16629__0;
G__16629.cljs$core$IFn$_invoke$arity$1 = G__16629__1;
G__16629.cljs$core$IFn$_invoke$arity$2 = G__16629__2;
return G__16629;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__16627 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16627) : f.call(null,G__16627));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__16608_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__16628 = p1__16608_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16628) : f.call(null,G__16628));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__16638 = init;
var G__16639 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16638,G__16639) : f.call(null,G__16638,G__16639));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__16734 = null;
var G__16734__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__16734__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16692 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16692) : f.call(null,G__16692));
})()],null));
});
var G__16734__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16693 = x;
var G__16694 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16693,G__16694) : f.call(null,G__16693,G__16694));
})()],null));
});
var G__16734__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16695 = x;
var G__16696 = y;
var G__16697 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16695,G__16696,G__16697) : f.call(null,G__16695,G__16696,G__16697));
})()],null));
});
var G__16734__4 = (function() { 
var G__16735__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__16735 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16736__i = 0, G__16736__a = new Array(arguments.length -  3);
while (G__16736__i < G__16736__a.length) {G__16736__a[G__16736__i] = arguments[G__16736__i + 3]; ++G__16736__i;}
  args = new cljs.core.IndexedSeq(G__16736__a,0);
} 
return G__16735__delegate.call(this,x,y,z,args);};
G__16735.cljs$lang$maxFixedArity = 3;
G__16735.cljs$lang$applyTo = (function (arglist__16737){
var x = cljs.core.first(arglist__16737);
arglist__16737 = cljs.core.next(arglist__16737);
var y = cljs.core.first(arglist__16737);
arglist__16737 = cljs.core.next(arglist__16737);
var z = cljs.core.first(arglist__16737);
var args = cljs.core.rest(arglist__16737);
return G__16735__delegate(x,y,z,args);
});
G__16735.cljs$core$IFn$_invoke$arity$variadic = G__16735__delegate;
return G__16735;
})()
;
G__16734 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16734__0.call(this);
case 1:
return G__16734__1.call(this,x);
case 2:
return G__16734__2.call(this,x,y);
case 3:
return G__16734__3.call(this,x,y,z);
default:
var G__16738 = null;
if (arguments.length > 3) {
var G__16739__i = 0, G__16739__a = new Array(arguments.length -  3);
while (G__16739__i < G__16739__a.length) {G__16739__a[G__16739__i] = arguments[G__16739__i + 3]; ++G__16739__i;}
G__16738 = new cljs.core.IndexedSeq(G__16739__a,0);
}
return G__16734__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16734.cljs$lang$maxFixedArity = 3;
G__16734.cljs$lang$applyTo = G__16734__4.cljs$lang$applyTo;
G__16734.cljs$core$IFn$_invoke$arity$0 = G__16734__0;
G__16734.cljs$core$IFn$_invoke$arity$1 = G__16734__1;
G__16734.cljs$core$IFn$_invoke$arity$2 = G__16734__2;
G__16734.cljs$core$IFn$_invoke$arity$3 = G__16734__3;
G__16734.cljs$core$IFn$_invoke$arity$variadic = G__16734__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16734;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__16740 = null;
var G__16740__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__16740__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16698 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16698) : f.call(null,G__16698));
})(),(function (){var G__16699 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16699) : g.call(null,G__16699));
})()],null));
});
var G__16740__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16700 = x;
var G__16701 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16700,G__16701) : f.call(null,G__16700,G__16701));
})(),(function (){var G__16702 = x;
var G__16703 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16702,G__16703) : g.call(null,G__16702,G__16703));
})()],null));
});
var G__16740__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16704 = x;
var G__16705 = y;
var G__16706 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16704,G__16705,G__16706) : f.call(null,G__16704,G__16705,G__16706));
})(),(function (){var G__16707 = x;
var G__16708 = y;
var G__16709 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16707,G__16708,G__16709) : g.call(null,G__16707,G__16708,G__16709));
})()],null));
});
var G__16740__4 = (function() { 
var G__16741__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__16741 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16742__i = 0, G__16742__a = new Array(arguments.length -  3);
while (G__16742__i < G__16742__a.length) {G__16742__a[G__16742__i] = arguments[G__16742__i + 3]; ++G__16742__i;}
  args = new cljs.core.IndexedSeq(G__16742__a,0);
} 
return G__16741__delegate.call(this,x,y,z,args);};
G__16741.cljs$lang$maxFixedArity = 3;
G__16741.cljs$lang$applyTo = (function (arglist__16743){
var x = cljs.core.first(arglist__16743);
arglist__16743 = cljs.core.next(arglist__16743);
var y = cljs.core.first(arglist__16743);
arglist__16743 = cljs.core.next(arglist__16743);
var z = cljs.core.first(arglist__16743);
var args = cljs.core.rest(arglist__16743);
return G__16741__delegate(x,y,z,args);
});
G__16741.cljs$core$IFn$_invoke$arity$variadic = G__16741__delegate;
return G__16741;
})()
;
G__16740 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16740__0.call(this);
case 1:
return G__16740__1.call(this,x);
case 2:
return G__16740__2.call(this,x,y);
case 3:
return G__16740__3.call(this,x,y,z);
default:
var G__16744 = null;
if (arguments.length > 3) {
var G__16745__i = 0, G__16745__a = new Array(arguments.length -  3);
while (G__16745__i < G__16745__a.length) {G__16745__a[G__16745__i] = arguments[G__16745__i + 3]; ++G__16745__i;}
G__16744 = new cljs.core.IndexedSeq(G__16745__a,0);
}
return G__16740__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16744);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16740.cljs$lang$maxFixedArity = 3;
G__16740.cljs$lang$applyTo = G__16740__4.cljs$lang$applyTo;
G__16740.cljs$core$IFn$_invoke$arity$0 = G__16740__0;
G__16740.cljs$core$IFn$_invoke$arity$1 = G__16740__1;
G__16740.cljs$core$IFn$_invoke$arity$2 = G__16740__2;
G__16740.cljs$core$IFn$_invoke$arity$3 = G__16740__3;
G__16740.cljs$core$IFn$_invoke$arity$variadic = G__16740__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16740;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__16746 = null;
var G__16746__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__16746__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16710 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16710) : f.call(null,G__16710));
})(),(function (){var G__16711 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16711) : g.call(null,G__16711));
})(),(function (){var G__16712 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__16712) : h.call(null,G__16712));
})()],null));
});
var G__16746__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16713 = x;
var G__16714 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16713,G__16714) : f.call(null,G__16713,G__16714));
})(),(function (){var G__16715 = x;
var G__16716 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16715,G__16716) : g.call(null,G__16715,G__16716));
})(),(function (){var G__16717 = x;
var G__16718 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__16717,G__16718) : h.call(null,G__16717,G__16718));
})()],null));
});
var G__16746__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16719 = x;
var G__16720 = y;
var G__16721 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16719,G__16720,G__16721) : f.call(null,G__16719,G__16720,G__16721));
})(),(function (){var G__16722 = x;
var G__16723 = y;
var G__16724 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16722,G__16723,G__16724) : g.call(null,G__16722,G__16723,G__16724));
})(),(function (){var G__16725 = x;
var G__16726 = y;
var G__16727 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__16725,G__16726,G__16727) : h.call(null,G__16725,G__16726,G__16727));
})()],null));
});
var G__16746__4 = (function() { 
var G__16747__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__16747 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16748__i = 0, G__16748__a = new Array(arguments.length -  3);
while (G__16748__i < G__16748__a.length) {G__16748__a[G__16748__i] = arguments[G__16748__i + 3]; ++G__16748__i;}
  args = new cljs.core.IndexedSeq(G__16748__a,0);
} 
return G__16747__delegate.call(this,x,y,z,args);};
G__16747.cljs$lang$maxFixedArity = 3;
G__16747.cljs$lang$applyTo = (function (arglist__16749){
var x = cljs.core.first(arglist__16749);
arglist__16749 = cljs.core.next(arglist__16749);
var y = cljs.core.first(arglist__16749);
arglist__16749 = cljs.core.next(arglist__16749);
var z = cljs.core.first(arglist__16749);
var args = cljs.core.rest(arglist__16749);
return G__16747__delegate(x,y,z,args);
});
G__16747.cljs$core$IFn$_invoke$arity$variadic = G__16747__delegate;
return G__16747;
})()
;
G__16746 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16746__0.call(this);
case 1:
return G__16746__1.call(this,x);
case 2:
return G__16746__2.call(this,x,y);
case 3:
return G__16746__3.call(this,x,y,z);
default:
var G__16750 = null;
if (arguments.length > 3) {
var G__16751__i = 0, G__16751__a = new Array(arguments.length -  3);
while (G__16751__i < G__16751__a.length) {G__16751__a[G__16751__i] = arguments[G__16751__i + 3]; ++G__16751__i;}
G__16750 = new cljs.core.IndexedSeq(G__16751__a,0);
}
return G__16746__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16746.cljs$lang$maxFixedArity = 3;
G__16746.cljs$lang$applyTo = G__16746__4.cljs$lang$applyTo;
G__16746.cljs$core$IFn$_invoke$arity$0 = G__16746__0;
G__16746.cljs$core$IFn$_invoke$arity$1 = G__16746__1;
G__16746.cljs$core$IFn$_invoke$arity$2 = G__16746__2;
G__16746.cljs$core$IFn$_invoke$arity$3 = G__16746__3;
G__16746.cljs$core$IFn$_invoke$arity$variadic = G__16746__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16746;
})()
});
var juxt__4 = (function() { 
var G__16752__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__16753 = null;
var G__16753__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16640_SHARP_,p2__16641_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16640_SHARP_,(function (){return (p2__16641_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16641_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16641_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16753__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16642_SHARP_,p2__16643_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16642_SHARP_,(function (){var G__16728 = x;
return (p2__16643_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16643_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16728) : p2__16643_SHARP_.call(null,G__16728));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16753__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16644_SHARP_,p2__16645_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16644_SHARP_,(function (){var G__16729 = x;
var G__16730 = y;
return (p2__16645_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16645_SHARP_.cljs$core$IFn$_invoke$arity$2(G__16729,G__16730) : p2__16645_SHARP_.call(null,G__16729,G__16730));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16753__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16646_SHARP_,p2__16647_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16646_SHARP_,(function (){var G__16731 = x;
var G__16732 = y;
var G__16733 = z;
return (p2__16647_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16647_SHARP_.cljs$core$IFn$_invoke$arity$3(G__16731,G__16732,G__16733) : p2__16647_SHARP_.call(null,G__16731,G__16732,G__16733));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16753__4 = (function() { 
var G__16754__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16648_SHARP_,p2__16649_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16648_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16649_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__16754 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16755__i = 0, G__16755__a = new Array(arguments.length -  3);
while (G__16755__i < G__16755__a.length) {G__16755__a[G__16755__i] = arguments[G__16755__i + 3]; ++G__16755__i;}
  args = new cljs.core.IndexedSeq(G__16755__a,0);
} 
return G__16754__delegate.call(this,x,y,z,args);};
G__16754.cljs$lang$maxFixedArity = 3;
G__16754.cljs$lang$applyTo = (function (arglist__16756){
var x = cljs.core.first(arglist__16756);
arglist__16756 = cljs.core.next(arglist__16756);
var y = cljs.core.first(arglist__16756);
arglist__16756 = cljs.core.next(arglist__16756);
var z = cljs.core.first(arglist__16756);
var args = cljs.core.rest(arglist__16756);
return G__16754__delegate(x,y,z,args);
});
G__16754.cljs$core$IFn$_invoke$arity$variadic = G__16754__delegate;
return G__16754;
})()
;
G__16753 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16753__0.call(this);
case 1:
return G__16753__1.call(this,x);
case 2:
return G__16753__2.call(this,x,y);
case 3:
return G__16753__3.call(this,x,y,z);
default:
var G__16757 = null;
if (arguments.length > 3) {
var G__16758__i = 0, G__16758__a = new Array(arguments.length -  3);
while (G__16758__i < G__16758__a.length) {G__16758__a[G__16758__i] = arguments[G__16758__i + 3]; ++G__16758__i;}
G__16757 = new cljs.core.IndexedSeq(G__16758__a,0);
}
return G__16753__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16753.cljs$lang$maxFixedArity = 3;
G__16753.cljs$lang$applyTo = G__16753__4.cljs$lang$applyTo;
G__16753.cljs$core$IFn$_invoke$arity$0 = G__16753__0;
G__16753.cljs$core$IFn$_invoke$arity$1 = G__16753__1;
G__16753.cljs$core$IFn$_invoke$arity$2 = G__16753__2;
G__16753.cljs$core$IFn$_invoke$arity$3 = G__16753__3;
G__16753.cljs$core$IFn$_invoke$arity$variadic = G__16753__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16753;
})()
;})(fs__$1))
};
var G__16752 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__16759__i = 0, G__16759__a = new Array(arguments.length -  3);
while (G__16759__i < G__16759__a.length) {G__16759__a[G__16759__i] = arguments[G__16759__i + 3]; ++G__16759__i;}
  fs = new cljs.core.IndexedSeq(G__16759__a,0);
} 
return G__16752__delegate.call(this,f,g,h,fs);};
G__16752.cljs$lang$maxFixedArity = 3;
G__16752.cljs$lang$applyTo = (function (arglist__16760){
var f = cljs.core.first(arglist__16760);
arglist__16760 = cljs.core.next(arglist__16760);
var g = cljs.core.first(arglist__16760);
arglist__16760 = cljs.core.next(arglist__16760);
var h = cljs.core.first(arglist__16760);
var fs = cljs.core.rest(arglist__16760);
return G__16752__delegate(f,g,h,fs);
});
G__16752.cljs$core$IFn$_invoke$arity$variadic = G__16752__delegate;
return G__16752;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__16761 = null;
if (arguments.length > 3) {
var G__16762__i = 0, G__16762__a = new Array(arguments.length -  3);
while (G__16762__i < G__16762__a.length) {G__16762__a[G__16762__i] = arguments[G__16762__i + 3]; ++G__16762__i;}
G__16761 = new cljs.core.IndexedSeq(G__16762__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__16761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__16763 = cljs.core.next(coll);
coll = G__16763;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__16764 = (n - (1));
var G__16765 = cljs.core.next(coll);
n = G__16764;
coll = G__16765;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__16769 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16769,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16769,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16769,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_16777 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__16778_16784 = cljs.core.first(coll);
var G__16779_16785 = writer;
var G__16780_16786 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16778_16784,G__16779_16785,G__16780_16786) : print_one.call(null,G__16778_16784,G__16779_16785,G__16780_16786));
} else {
}

var coll_16787__$1 = cljs.core.next(coll);
var n_16788 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_16787__$1) && (((n_16788 == null)) || (!((n_16788 === (0)))))){
cljs.core._write(writer,sep);

var G__16781_16789 = cljs.core.first(coll_16787__$1);
var G__16782_16790 = writer;
var G__16783_16791 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16781_16789,G__16782_16790,G__16783_16791) : print_one.call(null,G__16781_16789,G__16782_16790,G__16783_16791));

var G__16792 = cljs.core.next(coll_16787__$1);
var G__16793 = (n_16788 - (1));
coll_16787__$1 = G__16792;
n_16788 = G__16793;
continue;
} else {
if((cljs.core.seq(coll_16787__$1)) && ((n_16788 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16777;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__16798 = cljs.core.seq(ss);
var chunk__16799 = null;
var count__16800 = (0);
var i__16801 = (0);
while(true){
if((i__16801 < count__16800)){
var s = chunk__16799.cljs$core$IIndexed$_nth$arity$2(null,i__16801);
cljs.core._write(writer,s);

var G__16802 = seq__16798;
var G__16803 = chunk__16799;
var G__16804 = count__16800;
var G__16805 = (i__16801 + (1));
seq__16798 = G__16802;
chunk__16799 = G__16803;
count__16800 = G__16804;
i__16801 = G__16805;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16798);
if(temp__4126__auto__){
var seq__16798__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16798__$1)){
var c__4545__auto__ = cljs.core.chunk_first(seq__16798__$1);
var G__16806 = cljs.core.chunk_rest(seq__16798__$1);
var G__16807 = c__4545__auto__;
var G__16808 = cljs.core.count(c__4545__auto__);
var G__16809 = (0);
seq__16798 = G__16806;
chunk__16799 = G__16807;
count__16800 = G__16808;
i__16801 = G__16809;
continue;
} else {
var s = cljs.core.first(seq__16798__$1);
cljs.core._write(writer,s);

var G__16810 = cljs.core.next(seq__16798__$1);
var G__16811 = null;
var G__16812 = (0);
var G__16813 = (0);
seq__16798 = G__16810;
chunk__16799 = G__16811;
count__16800 = G__16812;
i__16801 = G__16813;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__16814__i = 0, G__16814__a = new Array(arguments.length -  1);
while (G__16814__i < G__16814__a.length) {G__16814__a[G__16814__i] = arguments[G__16814__i + 1]; ++G__16814__i;}
  ss = new cljs.core.IndexedSeq(G__16814__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__16815){
var writer = cljs.core.first(arglist__16815);
var ss = cljs.core.rest(arglist__16815);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj16817 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj16817;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__16820 = "[\\\\\"\b\f\n\r\t]";
var G__16821 = "g";
return RegExp(G__16820,G__16821);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3746__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3746__auto__)){
var and__3746__auto____$1 = (function (){var G__16835 = obj;
if(G__16835){
var bit__4439__auto__ = (G__16835.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4439__auto__) || (G__16835.cljs$core$IMeta$)){
return true;
} else {
if((!G__16835.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16835);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16835);
}
})();
if(and__3746__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__16836 = obj;
if(G__16836){
var bit__4432__auto__ = (G__16836.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4432__auto__) || (G__16836.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__16837 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__16838 = pr_writer;
var G__16839 = writer;
var G__16840 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16837,G__16838,G__16839,G__16840) : cljs.core.print_map.call(null,G__16837,G__16838,G__16839,G__16840));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__16841 = obj;
return goog.isString(G__16841);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__16843 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__16843;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__16842 = obj;
if(G__16842){
var bit__4439__auto__ = (G__16842.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4439__auto__) || (G__16842.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__16842.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16842);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16842);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__16848 = cljs.core.seq(cljs.core.next(objs));
var chunk__16849 = null;
var count__16850 = (0);
var i__16851 = (0);
while(true){
if((i__16851 < count__16850)){
var obj = chunk__16849.cljs$core$IIndexed$_nth$arity$2(null,i__16851);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16852 = seq__16848;
var G__16853 = chunk__16849;
var G__16854 = count__16850;
var G__16855 = (i__16851 + (1));
seq__16848 = G__16852;
chunk__16849 = G__16853;
count__16850 = G__16854;
i__16851 = G__16855;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16848);
if(temp__4126__auto__){
var seq__16848__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16848__$1)){
var c__4545__auto__ = cljs.core.chunk_first(seq__16848__$1);
var G__16856 = cljs.core.chunk_rest(seq__16848__$1);
var G__16857 = c__4545__auto__;
var G__16858 = cljs.core.count(c__4545__auto__);
var G__16859 = (0);
seq__16848 = G__16856;
chunk__16849 = G__16857;
count__16850 = G__16858;
i__16851 = G__16859;
continue;
} else {
var obj = cljs.core.first(seq__16848__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16860 = cljs.core.next(seq__16848__$1);
var G__16861 = null;
var G__16862 = (0);
var G__16863 = (0);
seq__16848 = G__16860;
chunk__16849 = G__16861;
count__16850 = G__16862;
i__16851 = G__16863;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16864__i = 0, G__16864__a = new Array(arguments.length -  0);
while (G__16864__i < G__16864__a.length) {G__16864__a[G__16864__i] = arguments[G__16864__i + 0]; ++G__16864__i;}
  objs = new cljs.core.IndexedSeq(G__16864__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__16865){
var objs = cljs.core.seq(arglist__16865);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16866__i = 0, G__16866__a = new Array(arguments.length -  0);
while (G__16866__i < G__16866__a.length) {G__16866__a[G__16866__i] = arguments[G__16866__i + 0]; ++G__16866__i;}
  objs = new cljs.core.IndexedSeq(G__16866__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__16867){
var objs = cljs.core.seq(arglist__16867);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16868__i = 0, G__16868__a = new Array(arguments.length -  0);
while (G__16868__i < G__16868__a.length) {G__16868__a[G__16868__i] = arguments[G__16868__i + 0]; ++G__16868__i;}
  objs = new cljs.core.IndexedSeq(G__16868__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__16869){
var objs = cljs.core.seq(arglist__16869);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16870__i = 0, G__16870__a = new Array(arguments.length -  0);
while (G__16870__i < G__16870__a.length) {G__16870__a[G__16870__i] = arguments[G__16870__i + 0]; ++G__16870__i;}
  objs = new cljs.core.IndexedSeq(G__16870__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__16871){
var objs = cljs.core.seq(arglist__16871);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16872__i = 0, G__16872__a = new Array(arguments.length -  0);
while (G__16872__i < G__16872__a.length) {G__16872__a[G__16872__i] = arguments[G__16872__i + 0]; ++G__16872__i;}
  objs = new cljs.core.IndexedSeq(G__16872__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__16873){
var objs = cljs.core.seq(arglist__16873);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16874__i = 0, G__16874__a = new Array(arguments.length -  0);
while (G__16874__i < G__16874__a.length) {G__16874__a[G__16874__i] = arguments[G__16874__i + 0]; ++G__16874__i;}
  objs = new cljs.core.IndexedSeq(G__16874__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__16875){
var objs = cljs.core.seq(arglist__16875);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16876__i = 0, G__16876__a = new Array(arguments.length -  0);
while (G__16876__i < G__16876__a.length) {G__16876__a[G__16876__i] = arguments[G__16876__i + 0]; ++G__16876__i;}
  objs = new cljs.core.IndexedSeq(G__16876__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__16877){
var objs = cljs.core.seq(arglist__16877);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16878__i = 0, G__16878__a = new Array(arguments.length -  0);
while (G__16878__i < G__16878__a.length) {G__16878__a[G__16878__i] = arguments[G__16878__i + 0]; ++G__16878__i;}
  objs = new cljs.core.IndexedSeq(G__16878__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__16879){
var objs = cljs.core.seq(arglist__16879);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__16886_16892 = cljs.core.key(e);
var G__16887_16893 = w;
var G__16888_16894 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16886_16892,G__16887_16893,G__16888_16894) : print_one.call(null,G__16886_16892,G__16887_16893,G__16888_16894));

cljs.core._write(w," ");

var G__16889 = cljs.core.val(e);
var G__16890 = w;
var G__16891 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16889,G__16890,G__16891) : print_one.call(null,G__16889,G__16890,G__16891));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__16895__i = 0, G__16895__a = new Array(arguments.length -  2);
while (G__16895__i < G__16895__a.length) {G__16895__a[G__16895__i] = arguments[G__16895__i + 2]; ++G__16895__i;}
  args = new cljs.core.IndexedSeq(G__16895__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__16896){
var iref = cljs.core.first(arglist__16896);
arglist__16896 = cljs.core.next(arglist__16896);
var f = cljs.core.first(arglist__16896);
var args = cljs.core.rest(arglist__16896);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__16899 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16899) : cljs.core.atom.call(null,G__16899));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__16901 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16901) : cljs.core.deref.call(null,G__16901));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__16902_SHARP_,p2__16903_SHARP_){
var ret = (function (){var G__16906 = p1__16902_SHARP_;
var G__16907 = p2__16903_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16906,G__16907) : rf.call(null,G__16906,G__16907));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__16910 = null;
var G__16910__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16910__1 = (function (result){
var G__16909 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16909) : rf.call(null,G__16909));
});
var G__16910__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__16910 = function(result,input){
switch(arguments.length){
case 0:
return G__16910__0.call(this);
case 1:
return G__16910__1.call(this,result);
case 2:
return G__16910__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16910.cljs$core$IFn$_invoke$arity$0 = G__16910__0;
G__16910.cljs$core$IFn$_invoke$arity$1 = G__16910__1;
G__16910.cljs$core$IFn$_invoke$arity$2 = G__16910__2;
return G__16910;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__16919 = null;
var G__16919__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16919__1 = (function (result){
var G__16915 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16915) : rf.call(null,G__16915));
});
var G__16919__2 = (function (result,input){
var prior = (function (){var G__16916 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16916) : cljs.core.deref.call(null,G__16916));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__16917 = result;
var G__16918 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16917,G__16918) : rf.call(null,G__16917,G__16918));
}
});
G__16919 = function(result,input){
switch(arguments.length){
case 0:
return G__16919__0.call(this);
case 1:
return G__16919__1.call(this,result);
case 2:
return G__16919__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16919.cljs$core$IFn$_invoke$arity$0 = G__16919__0;
G__16919.cljs$core$IFn$_invoke$arity$1 = G__16919__1;
G__16919.cljs$core$IFn$_invoke$arity$2 = G__16919__2;
return G__16919;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4736__auto__ = this;
return cljs.core.es6_iterator(this__4736__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16921_SHARP_,p2__16920_SHARP_){
var G__16923 = p2__16920_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__16923) : proc.call(null,G__16923));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj16925 = {};
return obj16925;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3746__auto__ = x;
if(and__3746__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3746__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4402__auto__ = (((x == null))?null:x);
return (function (){var or__3758__auto__ = (cljs.core._clj__GT_js[(function (){var G__16929 = x__4402__auto__;
return goog.typeOf(G__16929);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3746__auto__ = x;
if(and__3746__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3746__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4402__auto__ = (((x == null))?null:x);
return (function (){var or__3758__auto__ = (cljs.core._key__GT_js[(function (){var G__16933 = x__4402__auto__;
return goog.typeOf(G__16933);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__16936 = k;
if(G__16936){
var bit__4439__auto__ = null;
if(cljs.core.truth_((function (){var or__3758__auto__ = bit__4439__auto__;
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return G__16936.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16936.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16936);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16936);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__16937 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__16937) : cljs.core.clj__GT_js.call(null,G__16937));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__16953 = x;
if(G__16953){
var bit__4439__auto__ = null;
if(cljs.core.truth_((function (){var or__3758__auto__ = bit__4439__auto__;
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return G__16953.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16953.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16953);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16953);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj16955 = {};
return obj16955;
})();
var seq__16956_16966 = cljs.core.seq(x);
var chunk__16957_16967 = null;
var count__16958_16968 = (0);
var i__16959_16969 = (0);
while(true){
if((i__16959_16969 < count__16958_16968)){
var vec__16960_16970 = chunk__16957_16967.cljs$core$IIndexed$_nth$arity$2(null,i__16959_16969);
var k_16971 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16960_16970,(0),null);
var v_16972 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16960_16970,(1),null);
(m[cljs.core.key__GT_js(k_16971)] = clj__GT_js(v_16972));

var G__16973 = seq__16956_16966;
var G__16974 = chunk__16957_16967;
var G__16975 = count__16958_16968;
var G__16976 = (i__16959_16969 + (1));
seq__16956_16966 = G__16973;
chunk__16957_16967 = G__16974;
count__16958_16968 = G__16975;
i__16959_16969 = G__16976;
continue;
} else {
var temp__4126__auto___16977 = cljs.core.seq(seq__16956_16966);
if(temp__4126__auto___16977){
var seq__16956_16978__$1 = temp__4126__auto___16977;
if(cljs.core.chunked_seq_QMARK_(seq__16956_16978__$1)){
var c__4545__auto___16979 = cljs.core.chunk_first(seq__16956_16978__$1);
var G__16980 = cljs.core.chunk_rest(seq__16956_16978__$1);
var G__16981 = c__4545__auto___16979;
var G__16982 = cljs.core.count(c__4545__auto___16979);
var G__16983 = (0);
seq__16956_16966 = G__16980;
chunk__16957_16967 = G__16981;
count__16958_16968 = G__16982;
i__16959_16969 = G__16983;
continue;
} else {
var vec__16961_16984 = cljs.core.first(seq__16956_16978__$1);
var k_16985 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16961_16984,(0),null);
var v_16986 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16961_16984,(1),null);
(m[cljs.core.key__GT_js(k_16985)] = clj__GT_js(v_16986));

var G__16987 = cljs.core.next(seq__16956_16978__$1);
var G__16988 = null;
var G__16989 = (0);
var G__16990 = (0);
seq__16956_16966 = G__16987;
chunk__16957_16967 = G__16988;
count__16958_16968 = G__16989;
i__16959_16969 = G__16990;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__16962_16991 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__16963_16992 = null;
var count__16964_16993 = (0);
var i__16965_16994 = (0);
while(true){
if((i__16965_16994 < count__16964_16993)){
var x_16995__$1 = chunk__16963_16992.cljs$core$IIndexed$_nth$arity$2(null,i__16965_16994);
arr.push(x_16995__$1);

var G__16996 = seq__16962_16991;
var G__16997 = chunk__16963_16992;
var G__16998 = count__16964_16993;
var G__16999 = (i__16965_16994 + (1));
seq__16962_16991 = G__16996;
chunk__16963_16992 = G__16997;
count__16964_16993 = G__16998;
i__16965_16994 = G__16999;
continue;
} else {
var temp__4126__auto___17000 = cljs.core.seq(seq__16962_16991);
if(temp__4126__auto___17000){
var seq__16962_17001__$1 = temp__4126__auto___17000;
if(cljs.core.chunked_seq_QMARK_(seq__16962_17001__$1)){
var c__4545__auto___17002 = cljs.core.chunk_first(seq__16962_17001__$1);
var G__17003 = cljs.core.chunk_rest(seq__16962_17001__$1);
var G__17004 = c__4545__auto___17002;
var G__17005 = cljs.core.count(c__4545__auto___17002);
var G__17006 = (0);
seq__16962_16991 = G__17003;
chunk__16963_16992 = G__17004;
count__16964_16993 = G__17005;
i__16965_16994 = G__17006;
continue;
} else {
var x_17007__$1 = cljs.core.first(seq__16962_17001__$1);
arr.push(x_17007__$1);

var G__17008 = cljs.core.next(seq__16962_17001__$1);
var G__17009 = null;
var G__17010 = (0);
var G__17011 = (0);
seq__16962_16991 = G__17008;
chunk__16963_16992 = G__17009;
count__16964_16993 = G__17010;
i__16965_16994 = G__17011;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj17013 = {};
return obj17013;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3746__auto__ = x;
if(and__3746__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3746__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4402__auto__ = (((x == null))?null:x);
return (function (){var or__3758__auto__ = (cljs.core._js__GT_clj[(function (){var G__17017 = x__4402__auto__;
return goog.typeOf(G__17017);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__17074__delegate = function (x,opts){
var map__17047 = opts;
var map__17047__$1 = ((cljs.core.seq_QMARK_(map__17047))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__17047):map__17047);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17047__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__17047,map__17047__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__17063 = x__$1;
if(G__17063){
var bit__4439__auto__ = null;
if(cljs.core.truth_((function (){var or__3758__auto__ = bit__4439__auto__;
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return G__17063.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__17063.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__17063);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__17063);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4514__auto__ = ((function (map__17047,map__17047__$1,keywordize_keys,keyfn){
return (function iter__17064(s__17065){
return (new cljs.core.LazySeq(null,((function (map__17047,map__17047__$1,keywordize_keys,keyfn){
return (function (){
var s__17065__$1 = s__17065;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__17065__$1);
if(temp__4126__auto__){
var s__17065__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__17065__$2)){
var c__4512__auto__ = cljs.core.chunk_first(s__17065__$2);
var size__4513__auto__ = cljs.core.count(c__4512__auto__);
var b__17067 = cljs.core.chunk_buffer(size__4513__auto__);
if((function (){var i__17066 = (0);
while(true){
if((i__17066 < size__4513__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4512__auto__,i__17066);
cljs.core.chunk_append(b__17067,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__17072 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17072) : keyfn.call(null,G__17072));
})(),thisfn((x__$1[k]))], null));

var G__17075 = (i__17066 + (1));
i__17066 = G__17075;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__17067),iter__17064(cljs.core.chunk_rest(s__17065__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__17067),null);
}
} else {
var k = cljs.core.first(s__17065__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__17073 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17073) : keyfn.call(null,G__17073));
})(),thisfn((x__$1[k]))], null),iter__17064(cljs.core.rest(s__17065__$2)));
}
} else {
return null;
}
break;
}
});})(map__17047,map__17047__$1,keywordize_keys,keyfn))
,null,null));
});})(map__17047,map__17047__$1,keywordize_keys,keyfn))
;
return iter__4514__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__17047,map__17047__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__17074 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__17076__i = 0, G__17076__a = new Array(arguments.length -  1);
while (G__17076__i < G__17076__a.length) {G__17076__a[G__17076__i] = arguments[G__17076__i + 1]; ++G__17076__i;}
  opts = new cljs.core.IndexedSeq(G__17076__a,0);
} 
return G__17074__delegate.call(this,x,opts);};
G__17074.cljs$lang$maxFixedArity = 1;
G__17074.cljs$lang$applyTo = (function (arglist__17077){
var x = cljs.core.first(arglist__17077);
var opts = cljs.core.rest(arglist__17077);
return G__17074__delegate(x,opts);
});
G__17074.cljs$core$IFn$_invoke$arity$variadic = G__17074__delegate;
return G__17074;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__17078 = null;
if (arguments.length > 1) {
var G__17079__i = 0, G__17079__a = new Array(arguments.length -  1);
while (G__17079__i < G__17079__a.length) {G__17079__a[G__17079__i] = arguments[G__17079__i + 1]; ++G__17079__i;}
G__17078 = new cljs.core.IndexedSeq(G__17079__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17078);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__17082 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17082) : cljs.core.atom.call(null,G__17082));
})();
return ((function (mem){
return (function() { 
var G__17084__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__17083 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17083) : cljs.core.deref.call(null,G__17083));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__17084 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17085__i = 0, G__17085__a = new Array(arguments.length -  0);
while (G__17085__i < G__17085__a.length) {G__17085__a[G__17085__i] = arguments[G__17085__i + 0]; ++G__17085__i;}
  args = new cljs.core.IndexedSeq(G__17085__a,0);
} 
return G__17084__delegate.call(this,args);};
G__17084.cljs$lang$maxFixedArity = 0;
G__17084.cljs$lang$applyTo = (function (arglist__17086){
var args = cljs.core.seq(arglist__17086);
return G__17084__delegate(args);
});
G__17084.cljs$core$IFn$_invoke$arity$variadic = G__17084__delegate;
return G__17084;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__17088 = ret;
f = G__17088;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__17089__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__17089 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__17090__i = 0, G__17090__a = new Array(arguments.length -  1);
while (G__17090__i < G__17090__a.length) {G__17090__a[G__17090__i] = arguments[G__17090__i + 1]; ++G__17090__i;}
  args = new cljs.core.IndexedSeq(G__17090__a,0);
} 
return G__17089__delegate.call(this,f,args);};
G__17089.cljs$lang$maxFixedArity = 1;
G__17089.cljs$lang$applyTo = (function (arglist__17091){
var f = cljs.core.first(arglist__17091);
var args = cljs.core.rest(arglist__17091);
return G__17089__delegate(f,args);
});
G__17089.cljs$core$IFn$_invoke$arity$variadic = G__17089__delegate;
return G__17089;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__17092 = null;
if (arguments.length > 1) {
var G__17093__i = 0, G__17093__a = new Array(arguments.length -  1);
while (G__17093__i < G__17093__a.length) {G__17093__a[G__17093__i] = arguments[G__17093__i + 1]; ++G__17093__i;}
G__17092 = new cljs.core.IndexedSeq(G__17093__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__17092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__17096 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17096) : Math.floor.call(null,G__17096));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__17098 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17098) : f.call(null,G__17098));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__17100 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17100) : cljs.core.atom.call(null,G__17100));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__17101__i = 0, G__17101__a = new Array(arguments.length -  1);
while (G__17101__i < G__17101__a.length) {G__17101__a[G__17101__i] = arguments[G__17101__i + 1]; ++G__17101__i;}
  args = new cljs.core.IndexedSeq(G__17101__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__17102){
var f = cljs.core.first(arglist__17102);
var args = cljs.core.rest(arglist__17102);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17167 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17167) : cljs.core.deref.call(null,G__17167));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3758__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
var and__3746__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3746__auto__){
var and__3746__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3746__auto____$1){
var and__3746__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3746__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__17192 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__17190 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__17190) : child.call(null,G__17190));
})(),(function (){var G__17191 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__17191) : parent.call(null,G__17191));
})());
var G__17193 = (i + (1));
ret = G__17192;
i = G__17193;
continue;
}
break;
}
} else {
return and__3746__auto____$2;
}
} else {
return and__3746__auto____$1;
}
} else {
return and__3746__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__17197 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17197) : cljs.core.deref.call(null,G__17197));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__17201 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17201) : cljs.core.deref.call(null,G__17201));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__17205 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17205) : cljs.core.deref.call(null,G__17205));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__17214 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__17214) : targets.call(null,G__17214));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__17215 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__17215) : sources.call(null,G__17215));
})()));
});})(tp,td,ta))
;
var or__3758__auto__ = ((cljs.core.contains_QMARK_((function (){var G__17219 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__17219) : tp.call(null,G__17219));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__17220 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17220) : ta.call(null,G__17220));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__17221 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17221) : ta.call(null,G__17221));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__17228 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17228) : parentMap.call(null,G__17228));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__17229 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17229) : parentMap.call(null,G__17229));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__17222_SHARP_){
return cljs.core.cons(cljs.core.first(p1__17222_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__17222_SHARP_),cljs.core.second(p1__17222_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__17230 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17230) : parentMap.call(null,G__17230));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__17223_SHARP_,p2__17224_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__17223_SHARP_,p2__17224_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__17233 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17233) : cljs.core.deref.call(null,G__17233));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__17234 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17234) : cljs.core.deref.call(null,G__17234));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__17250 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17250) : cljs.core.deref.call(null,G__17250));
})().call(null,x);
var or__3758__auto__ = (cljs.core.truth_((function (){var and__3746__auto__ = xprefs;
if(cljs.core.truth_(and__3746__auto__)){
var G__17252 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__17252) : xprefs.call(null,G__17252));
} else {
return and__3746__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__17253 = cljs.core.rest(ps);
ps = G__17253;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3758__auto____$1)){
return or__3758__auto____$1;
} else {
var or__3758__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__17254 = cljs.core.rest(ps);
ps = G__17254;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3758__auto____$2)){
return or__3758__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3758__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3758__auto__)){
return or__3758__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__17268){
var vec__17269 = p__17268;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17269,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17269,(1),null);
var e = vec__17269;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17270 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17270) : cljs.core.deref.call(null,G__17270));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3758__auto__ = (be == null);
if(or__3758__auto__){
return or__3758__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__17271 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17271) : cljs.core.deref.call(null,G__17271));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17272 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17272) : cljs.core.deref.call(null,G__17272));
})(),(function (){var G__17273 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17273) : cljs.core.deref.call(null,G__17273));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj17275 = {};
return obj17275;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3746__auto__ = mf;
if(and__3746__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3746__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4402__auto__ = (((mf == null))?null:mf);
return (function (){var or__3758__auto__ = (cljs.core._reset[(function (){var G__17279 = x__4402__auto__;
return goog.typeOf(G__17279);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._reset["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3746__auto__ = mf;
if(and__3746__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3746__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4402__auto__ = (((mf == null))?null:mf);
return (function (){var or__3758__auto__ = (cljs.core._add_method[(function (){var G__17283 = x__4402__auto__;
return goog.typeOf(G__17283);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._add_method["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3746__auto__ = mf;
if(and__3746__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3746__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4402__auto__ = (((mf == null))?null:mf);
return (function (){var or__3758__auto__ = (cljs.core._remove_method[(function (){var G__17287 = x__4402__auto__;
return goog.typeOf(G__17287);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3746__auto__ = mf;
if(and__3746__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3746__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4402__auto__ = (((mf == null))?null:mf);
return (function (){var or__3758__auto__ = (cljs.core._prefer_method[(function (){var G__17291 = x__4402__auto__;
return goog.typeOf(G__17291);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3746__auto__ = mf;
if(and__3746__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3746__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4402__auto__ = (((mf == null))?null:mf);
return (function (){var or__3758__auto__ = (cljs.core._get_method[(function (){var G__17295 = x__4402__auto__;
return goog.typeOf(G__17295);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._get_method["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3746__auto__ = mf;
if(and__3746__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3746__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4402__auto__ = (((mf == null))?null:mf);
return (function (){var or__3758__auto__ = (cljs.core._methods[(function (){var G__17299 = x__4402__auto__;
return goog.typeOf(G__17299);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._methods["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3746__auto__ = mf;
if(and__3746__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3746__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4402__auto__ = (((mf == null))?null:mf);
return (function (){var or__3758__auto__ = (cljs.core._prefers[(function (){var G__17303 = x__4402__auto__;
return goog.typeOf(G__17303);
})()]);
if(or__3758__auto__){
return or__3758__auto__;
} else {
var or__3758__auto____$1 = (cljs.core._prefers["_"]);
if(or__3758__auto____$1){
return or__3758__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17305 = this$__$1;
return goog.getUid(G__17305);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17306 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17306) : cljs.core.deref.call(null,G__17306));
})(),(function (){var G__17307 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17307) : cljs.core.deref.call(null,G__17307));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__17308 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17308) : cljs.core.deref.call(null,G__17308));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__17309 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17309) : cljs.core.deref.call(null,G__17309));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17310 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17310) : cljs.core.deref.call(null,G__17310));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17311 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17311) : cljs.core.deref.call(null,G__17311));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__18152 = null;
var G__18152__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__18152__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17312 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17312) : self__.dispatch_fn.call(null,G__17312));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17313 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17313) : target_fn.call(null,G__17313));
});
var G__18152__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17314 = a;
var G__17315 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17314,G__17315) : self__.dispatch_fn.call(null,G__17314,G__17315));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17316 = a;
var G__17317 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17316,G__17317) : target_fn.call(null,G__17316,G__17317));
});
var G__18152__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17318 = a;
var G__17319 = b;
var G__17320 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17318,G__17319,G__17320) : self__.dispatch_fn.call(null,G__17318,G__17319,G__17320));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17321 = a;
var G__17322 = b;
var G__17323 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17321,G__17322,G__17323) : target_fn.call(null,G__17321,G__17322,G__17323));
});
var G__18152__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17324 = a;
var G__17325 = b;
var G__17326 = c;
var G__17327 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17324,G__17325,G__17326,G__17327) : self__.dispatch_fn.call(null,G__17324,G__17325,G__17326,G__17327));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17328 = a;
var G__17329 = b;
var G__17330 = c;
var G__17331 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17328,G__17329,G__17330,G__17331) : target_fn.call(null,G__17328,G__17329,G__17330,G__17331));
});
var G__18152__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17332 = a;
var G__17333 = b;
var G__17334 = c;
var G__17335 = d;
var G__17336 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17332,G__17333,G__17334,G__17335,G__17336) : self__.dispatch_fn.call(null,G__17332,G__17333,G__17334,G__17335,G__17336));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17337 = a;
var G__17338 = b;
var G__17339 = c;
var G__17340 = d;
var G__17341 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17337,G__17338,G__17339,G__17340,G__17341) : target_fn.call(null,G__17337,G__17338,G__17339,G__17340,G__17341));
});
var G__18152__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17342 = a;
var G__17343 = b;
var G__17344 = c;
var G__17345 = d;
var G__17346 = e;
var G__17347 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17342,G__17343,G__17344,G__17345,G__17346,G__17347) : self__.dispatch_fn.call(null,G__17342,G__17343,G__17344,G__17345,G__17346,G__17347));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17348 = a;
var G__17349 = b;
var G__17350 = c;
var G__17351 = d;
var G__17352 = e;
var G__17353 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17348,G__17349,G__17350,G__17351,G__17352,G__17353) : target_fn.call(null,G__17348,G__17349,G__17350,G__17351,G__17352,G__17353));
});
var G__18152__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17354 = a;
var G__17355 = b;
var G__17356 = c;
var G__17357 = d;
var G__17358 = e;
var G__17359 = f;
var G__17360 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17354,G__17355,G__17356,G__17357,G__17358,G__17359,G__17360) : self__.dispatch_fn.call(null,G__17354,G__17355,G__17356,G__17357,G__17358,G__17359,G__17360));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17361 = a;
var G__17362 = b;
var G__17363 = c;
var G__17364 = d;
var G__17365 = e;
var G__17366 = f;
var G__17367 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17361,G__17362,G__17363,G__17364,G__17365,G__17366,G__17367) : target_fn.call(null,G__17361,G__17362,G__17363,G__17364,G__17365,G__17366,G__17367));
});
var G__18152__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17368 = a;
var G__17369 = b;
var G__17370 = c;
var G__17371 = d;
var G__17372 = e;
var G__17373 = f;
var G__17374 = g;
var G__17375 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17368,G__17369,G__17370,G__17371,G__17372,G__17373,G__17374,G__17375) : self__.dispatch_fn.call(null,G__17368,G__17369,G__17370,G__17371,G__17372,G__17373,G__17374,G__17375));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17376 = a;
var G__17377 = b;
var G__17378 = c;
var G__17379 = d;
var G__17380 = e;
var G__17381 = f;
var G__17382 = g;
var G__17383 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17376,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383) : target_fn.call(null,G__17376,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383));
});
var G__18152__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17384 = a;
var G__17385 = b;
var G__17386 = c;
var G__17387 = d;
var G__17388 = e;
var G__17389 = f;
var G__17390 = g;
var G__17391 = h;
var G__17392 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17384,G__17385,G__17386,G__17387,G__17388,G__17389,G__17390,G__17391,G__17392) : self__.dispatch_fn.call(null,G__17384,G__17385,G__17386,G__17387,G__17388,G__17389,G__17390,G__17391,G__17392));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17393 = a;
var G__17394 = b;
var G__17395 = c;
var G__17396 = d;
var G__17397 = e;
var G__17398 = f;
var G__17399 = g;
var G__17400 = h;
var G__17401 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17393,G__17394,G__17395,G__17396,G__17397,G__17398,G__17399,G__17400,G__17401) : target_fn.call(null,G__17393,G__17394,G__17395,G__17396,G__17397,G__17398,G__17399,G__17400,G__17401));
});
var G__18152__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17402 = a;
var G__17403 = b;
var G__17404 = c;
var G__17405 = d;
var G__17406 = e;
var G__17407 = f;
var G__17408 = g;
var G__17409 = h;
var G__17410 = i;
var G__17411 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17402,G__17403,G__17404,G__17405,G__17406,G__17407,G__17408,G__17409,G__17410,G__17411) : self__.dispatch_fn.call(null,G__17402,G__17403,G__17404,G__17405,G__17406,G__17407,G__17408,G__17409,G__17410,G__17411));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17412 = a;
var G__17413 = b;
var G__17414 = c;
var G__17415 = d;
var G__17416 = e;
var G__17417 = f;
var G__17418 = g;
var G__17419 = h;
var G__17420 = i;
var G__17421 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17412,G__17413,G__17414,G__17415,G__17416,G__17417,G__17418,G__17419,G__17420,G__17421) : target_fn.call(null,G__17412,G__17413,G__17414,G__17415,G__17416,G__17417,G__17418,G__17419,G__17420,G__17421));
});
var G__18152__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17422 = a;
var G__17423 = b;
var G__17424 = c;
var G__17425 = d;
var G__17426 = e;
var G__17427 = f;
var G__17428 = g;
var G__17429 = h;
var G__17430 = i;
var G__17431 = j;
var G__17432 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17422,G__17423,G__17424,G__17425,G__17426,G__17427,G__17428,G__17429,G__17430,G__17431,G__17432) : self__.dispatch_fn.call(null,G__17422,G__17423,G__17424,G__17425,G__17426,G__17427,G__17428,G__17429,G__17430,G__17431,G__17432));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17433 = a;
var G__17434 = b;
var G__17435 = c;
var G__17436 = d;
var G__17437 = e;
var G__17438 = f;
var G__17439 = g;
var G__17440 = h;
var G__17441 = i;
var G__17442 = j;
var G__17443 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17433,G__17434,G__17435,G__17436,G__17437,G__17438,G__17439,G__17440,G__17441,G__17442,G__17443) : target_fn.call(null,G__17433,G__17434,G__17435,G__17436,G__17437,G__17438,G__17439,G__17440,G__17441,G__17442,G__17443));
});
var G__18152__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17444 = a;
var G__17445 = b;
var G__17446 = c;
var G__17447 = d;
var G__17448 = e;
var G__17449 = f;
var G__17450 = g;
var G__17451 = h;
var G__17452 = i;
var G__17453 = j;
var G__17454 = k;
var G__17455 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17444,G__17445,G__17446,G__17447,G__17448,G__17449,G__17450,G__17451,G__17452,G__17453,G__17454,G__17455) : self__.dispatch_fn.call(null,G__17444,G__17445,G__17446,G__17447,G__17448,G__17449,G__17450,G__17451,G__17452,G__17453,G__17454,G__17455));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17456 = a;
var G__17457 = b;
var G__17458 = c;
var G__17459 = d;
var G__17460 = e;
var G__17461 = f;
var G__17462 = g;
var G__17463 = h;
var G__17464 = i;
var G__17465 = j;
var G__17466 = k;
var G__17467 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17456,G__17457,G__17458,G__17459,G__17460,G__17461,G__17462,G__17463,G__17464,G__17465,G__17466,G__17467) : target_fn.call(null,G__17456,G__17457,G__17458,G__17459,G__17460,G__17461,G__17462,G__17463,G__17464,G__17465,G__17466,G__17467));
});
var G__18152__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17468 = a;
var G__17469 = b;
var G__17470 = c;
var G__17471 = d;
var G__17472 = e;
var G__17473 = f;
var G__17474 = g;
var G__17475 = h;
var G__17476 = i;
var G__17477 = j;
var G__17478 = k;
var G__17479 = l;
var G__17480 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17468,G__17469,G__17470,G__17471,G__17472,G__17473,G__17474,G__17475,G__17476,G__17477,G__17478,G__17479,G__17480) : self__.dispatch_fn.call(null,G__17468,G__17469,G__17470,G__17471,G__17472,G__17473,G__17474,G__17475,G__17476,G__17477,G__17478,G__17479,G__17480));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17481 = a;
var G__17482 = b;
var G__17483 = c;
var G__17484 = d;
var G__17485 = e;
var G__17486 = f;
var G__17487 = g;
var G__17488 = h;
var G__17489 = i;
var G__17490 = j;
var G__17491 = k;
var G__17492 = l;
var G__17493 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17481,G__17482,G__17483,G__17484,G__17485,G__17486,G__17487,G__17488,G__17489,G__17490,G__17491,G__17492,G__17493) : target_fn.call(null,G__17481,G__17482,G__17483,G__17484,G__17485,G__17486,G__17487,G__17488,G__17489,G__17490,G__17491,G__17492,G__17493));
});
var G__18152__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17494 = a;
var G__17495 = b;
var G__17496 = c;
var G__17497 = d;
var G__17498 = e;
var G__17499 = f;
var G__17500 = g;
var G__17501 = h;
var G__17502 = i;
var G__17503 = j;
var G__17504 = k;
var G__17505 = l;
var G__17506 = m;
var G__17507 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17494,G__17495,G__17496,G__17497,G__17498,G__17499,G__17500,G__17501,G__17502,G__17503,G__17504,G__17505,G__17506,G__17507) : self__.dispatch_fn.call(null,G__17494,G__17495,G__17496,G__17497,G__17498,G__17499,G__17500,G__17501,G__17502,G__17503,G__17504,G__17505,G__17506,G__17507));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17508 = a;
var G__17509 = b;
var G__17510 = c;
var G__17511 = d;
var G__17512 = e;
var G__17513 = f;
var G__17514 = g;
var G__17515 = h;
var G__17516 = i;
var G__17517 = j;
var G__17518 = k;
var G__17519 = l;
var G__17520 = m;
var G__17521 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17508,G__17509,G__17510,G__17511,G__17512,G__17513,G__17514,G__17515,G__17516,G__17517,G__17518,G__17519,G__17520,G__17521) : target_fn.call(null,G__17508,G__17509,G__17510,G__17511,G__17512,G__17513,G__17514,G__17515,G__17516,G__17517,G__17518,G__17519,G__17520,G__17521));
});
var G__18152__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17522 = a;
var G__17523 = b;
var G__17524 = c;
var G__17525 = d;
var G__17526 = e;
var G__17527 = f;
var G__17528 = g;
var G__17529 = h;
var G__17530 = i;
var G__17531 = j;
var G__17532 = k;
var G__17533 = l;
var G__17534 = m;
var G__17535 = n;
var G__17536 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17522,G__17523,G__17524,G__17525,G__17526,G__17527,G__17528,G__17529,G__17530,G__17531,G__17532,G__17533,G__17534,G__17535,G__17536) : self__.dispatch_fn.call(null,G__17522,G__17523,G__17524,G__17525,G__17526,G__17527,G__17528,G__17529,G__17530,G__17531,G__17532,G__17533,G__17534,G__17535,G__17536));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17537 = a;
var G__17538 = b;
var G__17539 = c;
var G__17540 = d;
var G__17541 = e;
var G__17542 = f;
var G__17543 = g;
var G__17544 = h;
var G__17545 = i;
var G__17546 = j;
var G__17547 = k;
var G__17548 = l;
var G__17549 = m;
var G__17550 = n;
var G__17551 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17537,G__17538,G__17539,G__17540,G__17541,G__17542,G__17543,G__17544,G__17545,G__17546,G__17547,G__17548,G__17549,G__17550,G__17551) : target_fn.call(null,G__17537,G__17538,G__17539,G__17540,G__17541,G__17542,G__17543,G__17544,G__17545,G__17546,G__17547,G__17548,G__17549,G__17550,G__17551));
});
var G__18152__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17552 = a;
var G__17553 = b;
var G__17554 = c;
var G__17555 = d;
var G__17556 = e;
var G__17557 = f;
var G__17558 = g;
var G__17559 = h;
var G__17560 = i;
var G__17561 = j;
var G__17562 = k;
var G__17563 = l;
var G__17564 = m;
var G__17565 = n;
var G__17566 = o;
var G__17567 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17552,G__17553,G__17554,G__17555,G__17556,G__17557,G__17558,G__17559,G__17560,G__17561,G__17562,G__17563,G__17564,G__17565,G__17566,G__17567) : self__.dispatch_fn.call(null,G__17552,G__17553,G__17554,G__17555,G__17556,G__17557,G__17558,G__17559,G__17560,G__17561,G__17562,G__17563,G__17564,G__17565,G__17566,G__17567));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17568 = a;
var G__17569 = b;
var G__17570 = c;
var G__17571 = d;
var G__17572 = e;
var G__17573 = f;
var G__17574 = g;
var G__17575 = h;
var G__17576 = i;
var G__17577 = j;
var G__17578 = k;
var G__17579 = l;
var G__17580 = m;
var G__17581 = n;
var G__17582 = o;
var G__17583 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17568,G__17569,G__17570,G__17571,G__17572,G__17573,G__17574,G__17575,G__17576,G__17577,G__17578,G__17579,G__17580,G__17581,G__17582,G__17583) : target_fn.call(null,G__17568,G__17569,G__17570,G__17571,G__17572,G__17573,G__17574,G__17575,G__17576,G__17577,G__17578,G__17579,G__17580,G__17581,G__17582,G__17583));
});
var G__18152__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17584 = a;
var G__17585 = b;
var G__17586 = c;
var G__17587 = d;
var G__17588 = e;
var G__17589 = f;
var G__17590 = g;
var G__17591 = h;
var G__17592 = i;
var G__17593 = j;
var G__17594 = k;
var G__17595 = l;
var G__17596 = m;
var G__17597 = n;
var G__17598 = o;
var G__17599 = p;
var G__17600 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17584,G__17585,G__17586,G__17587,G__17588,G__17589,G__17590,G__17591,G__17592,G__17593,G__17594,G__17595,G__17596,G__17597,G__17598,G__17599,G__17600) : self__.dispatch_fn.call(null,G__17584,G__17585,G__17586,G__17587,G__17588,G__17589,G__17590,G__17591,G__17592,G__17593,G__17594,G__17595,G__17596,G__17597,G__17598,G__17599,G__17600));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17601 = a;
var G__17602 = b;
var G__17603 = c;
var G__17604 = d;
var G__17605 = e;
var G__17606 = f;
var G__17607 = g;
var G__17608 = h;
var G__17609 = i;
var G__17610 = j;
var G__17611 = k;
var G__17612 = l;
var G__17613 = m;
var G__17614 = n;
var G__17615 = o;
var G__17616 = p;
var G__17617 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17601,G__17602,G__17603,G__17604,G__17605,G__17606,G__17607,G__17608,G__17609,G__17610,G__17611,G__17612,G__17613,G__17614,G__17615,G__17616,G__17617) : target_fn.call(null,G__17601,G__17602,G__17603,G__17604,G__17605,G__17606,G__17607,G__17608,G__17609,G__17610,G__17611,G__17612,G__17613,G__17614,G__17615,G__17616,G__17617));
});
var G__18152__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17618 = a;
var G__17619 = b;
var G__17620 = c;
var G__17621 = d;
var G__17622 = e;
var G__17623 = f;
var G__17624 = g;
var G__17625 = h;
var G__17626 = i;
var G__17627 = j;
var G__17628 = k;
var G__17629 = l;
var G__17630 = m;
var G__17631 = n;
var G__17632 = o;
var G__17633 = p;
var G__17634 = q;
var G__17635 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17618,G__17619,G__17620,G__17621,G__17622,G__17623,G__17624,G__17625,G__17626,G__17627,G__17628,G__17629,G__17630,G__17631,G__17632,G__17633,G__17634,G__17635) : self__.dispatch_fn.call(null,G__17618,G__17619,G__17620,G__17621,G__17622,G__17623,G__17624,G__17625,G__17626,G__17627,G__17628,G__17629,G__17630,G__17631,G__17632,G__17633,G__17634,G__17635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17636 = a;
var G__17637 = b;
var G__17638 = c;
var G__17639 = d;
var G__17640 = e;
var G__17641 = f;
var G__17642 = g;
var G__17643 = h;
var G__17644 = i;
var G__17645 = j;
var G__17646 = k;
var G__17647 = l;
var G__17648 = m;
var G__17649 = n;
var G__17650 = o;
var G__17651 = p;
var G__17652 = q;
var G__17653 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17636,G__17637,G__17638,G__17639,G__17640,G__17641,G__17642,G__17643,G__17644,G__17645,G__17646,G__17647,G__17648,G__17649,G__17650,G__17651,G__17652,G__17653) : target_fn.call(null,G__17636,G__17637,G__17638,G__17639,G__17640,G__17641,G__17642,G__17643,G__17644,G__17645,G__17646,G__17647,G__17648,G__17649,G__17650,G__17651,G__17652,G__17653));
});
var G__18152__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17654 = a;
var G__17655 = b;
var G__17656 = c;
var G__17657 = d;
var G__17658 = e;
var G__17659 = f;
var G__17660 = g;
var G__17661 = h;
var G__17662 = i;
var G__17663 = j;
var G__17664 = k;
var G__17665 = l;
var G__17666 = m;
var G__17667 = n;
var G__17668 = o;
var G__17669 = p;
var G__17670 = q;
var G__17671 = r;
var G__17672 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17654,G__17655,G__17656,G__17657,G__17658,G__17659,G__17660,G__17661,G__17662,G__17663,G__17664,G__17665,G__17666,G__17667,G__17668,G__17669,G__17670,G__17671,G__17672) : self__.dispatch_fn.call(null,G__17654,G__17655,G__17656,G__17657,G__17658,G__17659,G__17660,G__17661,G__17662,G__17663,G__17664,G__17665,G__17666,G__17667,G__17668,G__17669,G__17670,G__17671,G__17672));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17673 = a;
var G__17674 = b;
var G__17675 = c;
var G__17676 = d;
var G__17677 = e;
var G__17678 = f;
var G__17679 = g;
var G__17680 = h;
var G__17681 = i;
var G__17682 = j;
var G__17683 = k;
var G__17684 = l;
var G__17685 = m;
var G__17686 = n;
var G__17687 = o;
var G__17688 = p;
var G__17689 = q;
var G__17690 = r;
var G__17691 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17673,G__17674,G__17675,G__17676,G__17677,G__17678,G__17679,G__17680,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686,G__17687,G__17688,G__17689,G__17690,G__17691) : target_fn.call(null,G__17673,G__17674,G__17675,G__17676,G__17677,G__17678,G__17679,G__17680,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686,G__17687,G__17688,G__17689,G__17690,G__17691));
});
var G__18152__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17692 = a;
var G__17693 = b;
var G__17694 = c;
var G__17695 = d;
var G__17696 = e;
var G__17697 = f;
var G__17698 = g;
var G__17699 = h;
var G__17700 = i;
var G__17701 = j;
var G__17702 = k;
var G__17703 = l;
var G__17704 = m;
var G__17705 = n;
var G__17706 = o;
var G__17707 = p;
var G__17708 = q;
var G__17709 = r;
var G__17710 = s;
var G__17711 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17692,G__17693,G__17694,G__17695,G__17696,G__17697,G__17698,G__17699,G__17700,G__17701,G__17702,G__17703,G__17704,G__17705,G__17706,G__17707,G__17708,G__17709,G__17710,G__17711) : self__.dispatch_fn.call(null,G__17692,G__17693,G__17694,G__17695,G__17696,G__17697,G__17698,G__17699,G__17700,G__17701,G__17702,G__17703,G__17704,G__17705,G__17706,G__17707,G__17708,G__17709,G__17710,G__17711));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17712 = a;
var G__17713 = b;
var G__17714 = c;
var G__17715 = d;
var G__17716 = e;
var G__17717 = f;
var G__17718 = g;
var G__17719 = h;
var G__17720 = i;
var G__17721 = j;
var G__17722 = k;
var G__17723 = l;
var G__17724 = m;
var G__17725 = n;
var G__17726 = o;
var G__17727 = p;
var G__17728 = q;
var G__17729 = r;
var G__17730 = s;
var G__17731 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17712,G__17713,G__17714,G__17715,G__17716,G__17717,G__17718,G__17719,G__17720,G__17721,G__17722,G__17723,G__17724,G__17725,G__17726,G__17727,G__17728,G__17729,G__17730,G__17731) : target_fn.call(null,G__17712,G__17713,G__17714,G__17715,G__17716,G__17717,G__17718,G__17719,G__17720,G__17721,G__17722,G__17723,G__17724,G__17725,G__17726,G__17727,G__17728,G__17729,G__17730,G__17731));
});
var G__18152__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__18152 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18152__1.call(this,self__);
case 2:
return G__18152__2.call(this,self__,a);
case 3:
return G__18152__3.call(this,self__,a,b);
case 4:
return G__18152__4.call(this,self__,a,b,c);
case 5:
return G__18152__5.call(this,self__,a,b,c,d);
case 6:
return G__18152__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18152__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18152__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18152__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18152__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18152__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18152__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18152__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18152__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18152__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18152__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18152__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18152__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18152__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18152__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18152__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18152__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18152.cljs$core$IFn$_invoke$arity$1 = G__18152__1;
G__18152.cljs$core$IFn$_invoke$arity$2 = G__18152__2;
G__18152.cljs$core$IFn$_invoke$arity$3 = G__18152__3;
G__18152.cljs$core$IFn$_invoke$arity$4 = G__18152__4;
G__18152.cljs$core$IFn$_invoke$arity$5 = G__18152__5;
G__18152.cljs$core$IFn$_invoke$arity$6 = G__18152__6;
G__18152.cljs$core$IFn$_invoke$arity$7 = G__18152__7;
G__18152.cljs$core$IFn$_invoke$arity$8 = G__18152__8;
G__18152.cljs$core$IFn$_invoke$arity$9 = G__18152__9;
G__18152.cljs$core$IFn$_invoke$arity$10 = G__18152__10;
G__18152.cljs$core$IFn$_invoke$arity$11 = G__18152__11;
G__18152.cljs$core$IFn$_invoke$arity$12 = G__18152__12;
G__18152.cljs$core$IFn$_invoke$arity$13 = G__18152__13;
G__18152.cljs$core$IFn$_invoke$arity$14 = G__18152__14;
G__18152.cljs$core$IFn$_invoke$arity$15 = G__18152__15;
G__18152.cljs$core$IFn$_invoke$arity$16 = G__18152__16;
G__18152.cljs$core$IFn$_invoke$arity$17 = G__18152__17;
G__18152.cljs$core$IFn$_invoke$arity$18 = G__18152__18;
G__18152.cljs$core$IFn$_invoke$arity$19 = G__18152__19;
G__18152.cljs$core$IFn$_invoke$arity$20 = G__18152__20;
G__18152.cljs$core$IFn$_invoke$arity$21 = G__18152__21;
G__18152.cljs$core$IFn$_invoke$arity$22 = G__18152__22;
return G__18152;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args17304){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17304)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17732 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17732) : self__.dispatch_fn.call(null,G__17732));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17733 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17733) : target_fn.call(null,G__17733));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17734 = a;
var G__17735 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17734,G__17735) : self__.dispatch_fn.call(null,G__17734,G__17735));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17736 = a;
var G__17737 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17736,G__17737) : target_fn.call(null,G__17736,G__17737));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17738 = a;
var G__17739 = b;
var G__17740 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17738,G__17739,G__17740) : self__.dispatch_fn.call(null,G__17738,G__17739,G__17740));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17741 = a;
var G__17742 = b;
var G__17743 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17741,G__17742,G__17743) : target_fn.call(null,G__17741,G__17742,G__17743));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17744 = a;
var G__17745 = b;
var G__17746 = c;
var G__17747 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17744,G__17745,G__17746,G__17747) : self__.dispatch_fn.call(null,G__17744,G__17745,G__17746,G__17747));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17748 = a;
var G__17749 = b;
var G__17750 = c;
var G__17751 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17748,G__17749,G__17750,G__17751) : target_fn.call(null,G__17748,G__17749,G__17750,G__17751));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17752 = a;
var G__17753 = b;
var G__17754 = c;
var G__17755 = d;
var G__17756 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17752,G__17753,G__17754,G__17755,G__17756) : self__.dispatch_fn.call(null,G__17752,G__17753,G__17754,G__17755,G__17756));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17757 = a;
var G__17758 = b;
var G__17759 = c;
var G__17760 = d;
var G__17761 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17757,G__17758,G__17759,G__17760,G__17761) : target_fn.call(null,G__17757,G__17758,G__17759,G__17760,G__17761));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17762 = a;
var G__17763 = b;
var G__17764 = c;
var G__17765 = d;
var G__17766 = e;
var G__17767 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17762,G__17763,G__17764,G__17765,G__17766,G__17767) : self__.dispatch_fn.call(null,G__17762,G__17763,G__17764,G__17765,G__17766,G__17767));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17768 = a;
var G__17769 = b;
var G__17770 = c;
var G__17771 = d;
var G__17772 = e;
var G__17773 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17768,G__17769,G__17770,G__17771,G__17772,G__17773) : target_fn.call(null,G__17768,G__17769,G__17770,G__17771,G__17772,G__17773));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17774 = a;
var G__17775 = b;
var G__17776 = c;
var G__17777 = d;
var G__17778 = e;
var G__17779 = f;
var G__17780 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17774,G__17775,G__17776,G__17777,G__17778,G__17779,G__17780) : self__.dispatch_fn.call(null,G__17774,G__17775,G__17776,G__17777,G__17778,G__17779,G__17780));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17781 = a;
var G__17782 = b;
var G__17783 = c;
var G__17784 = d;
var G__17785 = e;
var G__17786 = f;
var G__17787 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17781,G__17782,G__17783,G__17784,G__17785,G__17786,G__17787) : target_fn.call(null,G__17781,G__17782,G__17783,G__17784,G__17785,G__17786,G__17787));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17788 = a;
var G__17789 = b;
var G__17790 = c;
var G__17791 = d;
var G__17792 = e;
var G__17793 = f;
var G__17794 = g;
var G__17795 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17788,G__17789,G__17790,G__17791,G__17792,G__17793,G__17794,G__17795) : self__.dispatch_fn.call(null,G__17788,G__17789,G__17790,G__17791,G__17792,G__17793,G__17794,G__17795));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17796 = a;
var G__17797 = b;
var G__17798 = c;
var G__17799 = d;
var G__17800 = e;
var G__17801 = f;
var G__17802 = g;
var G__17803 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17796,G__17797,G__17798,G__17799,G__17800,G__17801,G__17802,G__17803) : target_fn.call(null,G__17796,G__17797,G__17798,G__17799,G__17800,G__17801,G__17802,G__17803));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17804 = a;
var G__17805 = b;
var G__17806 = c;
var G__17807 = d;
var G__17808 = e;
var G__17809 = f;
var G__17810 = g;
var G__17811 = h;
var G__17812 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17804,G__17805,G__17806,G__17807,G__17808,G__17809,G__17810,G__17811,G__17812) : self__.dispatch_fn.call(null,G__17804,G__17805,G__17806,G__17807,G__17808,G__17809,G__17810,G__17811,G__17812));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17813 = a;
var G__17814 = b;
var G__17815 = c;
var G__17816 = d;
var G__17817 = e;
var G__17818 = f;
var G__17819 = g;
var G__17820 = h;
var G__17821 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17813,G__17814,G__17815,G__17816,G__17817,G__17818,G__17819,G__17820,G__17821) : target_fn.call(null,G__17813,G__17814,G__17815,G__17816,G__17817,G__17818,G__17819,G__17820,G__17821));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17822 = a;
var G__17823 = b;
var G__17824 = c;
var G__17825 = d;
var G__17826 = e;
var G__17827 = f;
var G__17828 = g;
var G__17829 = h;
var G__17830 = i;
var G__17831 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17822,G__17823,G__17824,G__17825,G__17826,G__17827,G__17828,G__17829,G__17830,G__17831) : self__.dispatch_fn.call(null,G__17822,G__17823,G__17824,G__17825,G__17826,G__17827,G__17828,G__17829,G__17830,G__17831));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17832 = a;
var G__17833 = b;
var G__17834 = c;
var G__17835 = d;
var G__17836 = e;
var G__17837 = f;
var G__17838 = g;
var G__17839 = h;
var G__17840 = i;
var G__17841 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17832,G__17833,G__17834,G__17835,G__17836,G__17837,G__17838,G__17839,G__17840,G__17841) : target_fn.call(null,G__17832,G__17833,G__17834,G__17835,G__17836,G__17837,G__17838,G__17839,G__17840,G__17841));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17842 = a;
var G__17843 = b;
var G__17844 = c;
var G__17845 = d;
var G__17846 = e;
var G__17847 = f;
var G__17848 = g;
var G__17849 = h;
var G__17850 = i;
var G__17851 = j;
var G__17852 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17842,G__17843,G__17844,G__17845,G__17846,G__17847,G__17848,G__17849,G__17850,G__17851,G__17852) : self__.dispatch_fn.call(null,G__17842,G__17843,G__17844,G__17845,G__17846,G__17847,G__17848,G__17849,G__17850,G__17851,G__17852));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17853 = a;
var G__17854 = b;
var G__17855 = c;
var G__17856 = d;
var G__17857 = e;
var G__17858 = f;
var G__17859 = g;
var G__17860 = h;
var G__17861 = i;
var G__17862 = j;
var G__17863 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17853,G__17854,G__17855,G__17856,G__17857,G__17858,G__17859,G__17860,G__17861,G__17862,G__17863) : target_fn.call(null,G__17853,G__17854,G__17855,G__17856,G__17857,G__17858,G__17859,G__17860,G__17861,G__17862,G__17863));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17864 = a;
var G__17865 = b;
var G__17866 = c;
var G__17867 = d;
var G__17868 = e;
var G__17869 = f;
var G__17870 = g;
var G__17871 = h;
var G__17872 = i;
var G__17873 = j;
var G__17874 = k;
var G__17875 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17864,G__17865,G__17866,G__17867,G__17868,G__17869,G__17870,G__17871,G__17872,G__17873,G__17874,G__17875) : self__.dispatch_fn.call(null,G__17864,G__17865,G__17866,G__17867,G__17868,G__17869,G__17870,G__17871,G__17872,G__17873,G__17874,G__17875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17876 = a;
var G__17877 = b;
var G__17878 = c;
var G__17879 = d;
var G__17880 = e;
var G__17881 = f;
var G__17882 = g;
var G__17883 = h;
var G__17884 = i;
var G__17885 = j;
var G__17886 = k;
var G__17887 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17876,G__17877,G__17878,G__17879,G__17880,G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887) : target_fn.call(null,G__17876,G__17877,G__17878,G__17879,G__17880,G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17888 = a;
var G__17889 = b;
var G__17890 = c;
var G__17891 = d;
var G__17892 = e;
var G__17893 = f;
var G__17894 = g;
var G__17895 = h;
var G__17896 = i;
var G__17897 = j;
var G__17898 = k;
var G__17899 = l;
var G__17900 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17888,G__17889,G__17890,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898,G__17899,G__17900) : self__.dispatch_fn.call(null,G__17888,G__17889,G__17890,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898,G__17899,G__17900));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17901 = a;
var G__17902 = b;
var G__17903 = c;
var G__17904 = d;
var G__17905 = e;
var G__17906 = f;
var G__17907 = g;
var G__17908 = h;
var G__17909 = i;
var G__17910 = j;
var G__17911 = k;
var G__17912 = l;
var G__17913 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17901,G__17902,G__17903,G__17904,G__17905,G__17906,G__17907,G__17908,G__17909,G__17910,G__17911,G__17912,G__17913) : target_fn.call(null,G__17901,G__17902,G__17903,G__17904,G__17905,G__17906,G__17907,G__17908,G__17909,G__17910,G__17911,G__17912,G__17913));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17914 = a;
var G__17915 = b;
var G__17916 = c;
var G__17917 = d;
var G__17918 = e;
var G__17919 = f;
var G__17920 = g;
var G__17921 = h;
var G__17922 = i;
var G__17923 = j;
var G__17924 = k;
var G__17925 = l;
var G__17926 = m;
var G__17927 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17914,G__17915,G__17916,G__17917,G__17918,G__17919,G__17920,G__17921,G__17922,G__17923,G__17924,G__17925,G__17926,G__17927) : self__.dispatch_fn.call(null,G__17914,G__17915,G__17916,G__17917,G__17918,G__17919,G__17920,G__17921,G__17922,G__17923,G__17924,G__17925,G__17926,G__17927));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17928 = a;
var G__17929 = b;
var G__17930 = c;
var G__17931 = d;
var G__17932 = e;
var G__17933 = f;
var G__17934 = g;
var G__17935 = h;
var G__17936 = i;
var G__17937 = j;
var G__17938 = k;
var G__17939 = l;
var G__17940 = m;
var G__17941 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17928,G__17929,G__17930,G__17931,G__17932,G__17933,G__17934,G__17935,G__17936,G__17937,G__17938,G__17939,G__17940,G__17941) : target_fn.call(null,G__17928,G__17929,G__17930,G__17931,G__17932,G__17933,G__17934,G__17935,G__17936,G__17937,G__17938,G__17939,G__17940,G__17941));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17942 = a;
var G__17943 = b;
var G__17944 = c;
var G__17945 = d;
var G__17946 = e;
var G__17947 = f;
var G__17948 = g;
var G__17949 = h;
var G__17950 = i;
var G__17951 = j;
var G__17952 = k;
var G__17953 = l;
var G__17954 = m;
var G__17955 = n;
var G__17956 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17942,G__17943,G__17944,G__17945,G__17946,G__17947,G__17948,G__17949,G__17950,G__17951,G__17952,G__17953,G__17954,G__17955,G__17956) : self__.dispatch_fn.call(null,G__17942,G__17943,G__17944,G__17945,G__17946,G__17947,G__17948,G__17949,G__17950,G__17951,G__17952,G__17953,G__17954,G__17955,G__17956));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17957 = a;
var G__17958 = b;
var G__17959 = c;
var G__17960 = d;
var G__17961 = e;
var G__17962 = f;
var G__17963 = g;
var G__17964 = h;
var G__17965 = i;
var G__17966 = j;
var G__17967 = k;
var G__17968 = l;
var G__17969 = m;
var G__17970 = n;
var G__17971 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17957,G__17958,G__17959,G__17960,G__17961,G__17962,G__17963,G__17964,G__17965,G__17966,G__17967,G__17968,G__17969,G__17970,G__17971) : target_fn.call(null,G__17957,G__17958,G__17959,G__17960,G__17961,G__17962,G__17963,G__17964,G__17965,G__17966,G__17967,G__17968,G__17969,G__17970,G__17971));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17972 = a;
var G__17973 = b;
var G__17974 = c;
var G__17975 = d;
var G__17976 = e;
var G__17977 = f;
var G__17978 = g;
var G__17979 = h;
var G__17980 = i;
var G__17981 = j;
var G__17982 = k;
var G__17983 = l;
var G__17984 = m;
var G__17985 = n;
var G__17986 = o;
var G__17987 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17972,G__17973,G__17974,G__17975,G__17976,G__17977,G__17978,G__17979,G__17980,G__17981,G__17982,G__17983,G__17984,G__17985,G__17986,G__17987) : self__.dispatch_fn.call(null,G__17972,G__17973,G__17974,G__17975,G__17976,G__17977,G__17978,G__17979,G__17980,G__17981,G__17982,G__17983,G__17984,G__17985,G__17986,G__17987));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17988 = a;
var G__17989 = b;
var G__17990 = c;
var G__17991 = d;
var G__17992 = e;
var G__17993 = f;
var G__17994 = g;
var G__17995 = h;
var G__17996 = i;
var G__17997 = j;
var G__17998 = k;
var G__17999 = l;
var G__18000 = m;
var G__18001 = n;
var G__18002 = o;
var G__18003 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17988,G__17989,G__17990,G__17991,G__17992,G__17993,G__17994,G__17995,G__17996,G__17997,G__17998,G__17999,G__18000,G__18001,G__18002,G__18003) : target_fn.call(null,G__17988,G__17989,G__17990,G__17991,G__17992,G__17993,G__17994,G__17995,G__17996,G__17997,G__17998,G__17999,G__18000,G__18001,G__18002,G__18003));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18004 = a;
var G__18005 = b;
var G__18006 = c;
var G__18007 = d;
var G__18008 = e;
var G__18009 = f;
var G__18010 = g;
var G__18011 = h;
var G__18012 = i;
var G__18013 = j;
var G__18014 = k;
var G__18015 = l;
var G__18016 = m;
var G__18017 = n;
var G__18018 = o;
var G__18019 = p;
var G__18020 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18004,G__18005,G__18006,G__18007,G__18008,G__18009,G__18010,G__18011,G__18012,G__18013,G__18014,G__18015,G__18016,G__18017,G__18018,G__18019,G__18020) : self__.dispatch_fn.call(null,G__18004,G__18005,G__18006,G__18007,G__18008,G__18009,G__18010,G__18011,G__18012,G__18013,G__18014,G__18015,G__18016,G__18017,G__18018,G__18019,G__18020));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18021 = a;
var G__18022 = b;
var G__18023 = c;
var G__18024 = d;
var G__18025 = e;
var G__18026 = f;
var G__18027 = g;
var G__18028 = h;
var G__18029 = i;
var G__18030 = j;
var G__18031 = k;
var G__18032 = l;
var G__18033 = m;
var G__18034 = n;
var G__18035 = o;
var G__18036 = p;
var G__18037 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18021,G__18022,G__18023,G__18024,G__18025,G__18026,G__18027,G__18028,G__18029,G__18030,G__18031,G__18032,G__18033,G__18034,G__18035,G__18036,G__18037) : target_fn.call(null,G__18021,G__18022,G__18023,G__18024,G__18025,G__18026,G__18027,G__18028,G__18029,G__18030,G__18031,G__18032,G__18033,G__18034,G__18035,G__18036,G__18037));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18038 = a;
var G__18039 = b;
var G__18040 = c;
var G__18041 = d;
var G__18042 = e;
var G__18043 = f;
var G__18044 = g;
var G__18045 = h;
var G__18046 = i;
var G__18047 = j;
var G__18048 = k;
var G__18049 = l;
var G__18050 = m;
var G__18051 = n;
var G__18052 = o;
var G__18053 = p;
var G__18054 = q;
var G__18055 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18038,G__18039,G__18040,G__18041,G__18042,G__18043,G__18044,G__18045,G__18046,G__18047,G__18048,G__18049,G__18050,G__18051,G__18052,G__18053,G__18054,G__18055) : self__.dispatch_fn.call(null,G__18038,G__18039,G__18040,G__18041,G__18042,G__18043,G__18044,G__18045,G__18046,G__18047,G__18048,G__18049,G__18050,G__18051,G__18052,G__18053,G__18054,G__18055));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18056 = a;
var G__18057 = b;
var G__18058 = c;
var G__18059 = d;
var G__18060 = e;
var G__18061 = f;
var G__18062 = g;
var G__18063 = h;
var G__18064 = i;
var G__18065 = j;
var G__18066 = k;
var G__18067 = l;
var G__18068 = m;
var G__18069 = n;
var G__18070 = o;
var G__18071 = p;
var G__18072 = q;
var G__18073 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18056,G__18057,G__18058,G__18059,G__18060,G__18061,G__18062,G__18063,G__18064,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070,G__18071,G__18072,G__18073) : target_fn.call(null,G__18056,G__18057,G__18058,G__18059,G__18060,G__18061,G__18062,G__18063,G__18064,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070,G__18071,G__18072,G__18073));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18074 = a;
var G__18075 = b;
var G__18076 = c;
var G__18077 = d;
var G__18078 = e;
var G__18079 = f;
var G__18080 = g;
var G__18081 = h;
var G__18082 = i;
var G__18083 = j;
var G__18084 = k;
var G__18085 = l;
var G__18086 = m;
var G__18087 = n;
var G__18088 = o;
var G__18089 = p;
var G__18090 = q;
var G__18091 = r;
var G__18092 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18074,G__18075,G__18076,G__18077,G__18078,G__18079,G__18080,G__18081,G__18082,G__18083,G__18084,G__18085,G__18086,G__18087,G__18088,G__18089,G__18090,G__18091,G__18092) : self__.dispatch_fn.call(null,G__18074,G__18075,G__18076,G__18077,G__18078,G__18079,G__18080,G__18081,G__18082,G__18083,G__18084,G__18085,G__18086,G__18087,G__18088,G__18089,G__18090,G__18091,G__18092));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18093 = a;
var G__18094 = b;
var G__18095 = c;
var G__18096 = d;
var G__18097 = e;
var G__18098 = f;
var G__18099 = g;
var G__18100 = h;
var G__18101 = i;
var G__18102 = j;
var G__18103 = k;
var G__18104 = l;
var G__18105 = m;
var G__18106 = n;
var G__18107 = o;
var G__18108 = p;
var G__18109 = q;
var G__18110 = r;
var G__18111 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18093,G__18094,G__18095,G__18096,G__18097,G__18098,G__18099,G__18100,G__18101,G__18102,G__18103,G__18104,G__18105,G__18106,G__18107,G__18108,G__18109,G__18110,G__18111) : target_fn.call(null,G__18093,G__18094,G__18095,G__18096,G__18097,G__18098,G__18099,G__18100,G__18101,G__18102,G__18103,G__18104,G__18105,G__18106,G__18107,G__18108,G__18109,G__18110,G__18111));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18112 = a;
var G__18113 = b;
var G__18114 = c;
var G__18115 = d;
var G__18116 = e;
var G__18117 = f;
var G__18118 = g;
var G__18119 = h;
var G__18120 = i;
var G__18121 = j;
var G__18122 = k;
var G__18123 = l;
var G__18124 = m;
var G__18125 = n;
var G__18126 = o;
var G__18127 = p;
var G__18128 = q;
var G__18129 = r;
var G__18130 = s;
var G__18131 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18112,G__18113,G__18114,G__18115,G__18116,G__18117,G__18118,G__18119,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126,G__18127,G__18128,G__18129,G__18130,G__18131) : self__.dispatch_fn.call(null,G__18112,G__18113,G__18114,G__18115,G__18116,G__18117,G__18118,G__18119,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126,G__18127,G__18128,G__18129,G__18130,G__18131));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18132 = a;
var G__18133 = b;
var G__18134 = c;
var G__18135 = d;
var G__18136 = e;
var G__18137 = f;
var G__18138 = g;
var G__18139 = h;
var G__18140 = i;
var G__18141 = j;
var G__18142 = k;
var G__18143 = l;
var G__18144 = m;
var G__18145 = n;
var G__18146 = o;
var G__18147 = p;
var G__18148 = q;
var G__18149 = r;
var G__18150 = s;
var G__18151 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18132,G__18133,G__18134,G__18135,G__18136,G__18137,G__18138,G__18139,G__18140,G__18141,G__18142,G__18143,G__18144,G__18145,G__18146,G__18147,G__18148,G__18149,G__18150,G__18151) : target_fn.call(null,G__18132,G__18133,G__18134,G__18135,G__18136,G__18137,G__18138,G__18139,G__18140,G__18141,G__18142,G__18143,G__18144,G__18145,G__18146,G__18147,G__18148,G__18149,G__18150,G__18151));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__18153 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__18153);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4345__auto__,writer__4346__auto__,opt__4347__auto__){
return cljs.core._write(writer__4346__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__18158 = msg;
return Error(G__18158);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__18163 = x;
var G__18164 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18163,G__18164) : pred.call(null,G__18163,G__18164));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__18165 = y;
var G__18166 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18165,G__18166) : pred.call(null,G__18165,G__18166));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
